// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: TreasureDungeonLevel.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TreasureDungeonLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KFGAADCAFOE uint32                       `protobuf:"varint,14,opt,name=KFGAADCAFOE,proto3" json:"KFGAADCAFOE,omitempty"`
	GNLDOLFGDAN bool                         `protobuf:"varint,449,opt,name=GNLDOLFGDAN,proto3" json:"GNLDOLFGDAN,omitempty"`
	JCIBDGDBJAL uint32                       `protobuf:"varint,496,opt,name=JCIBDGDBJAL,proto3" json:"JCIBDGDBJAL,omitempty"`
	ItemList    []*ICOBJGOCLFL               `protobuf:"bytes,1261,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	AvatarList  []*GMJMONHDFJI               `protobuf:"bytes,1751,rep,name=avatar_list,json=avatarList,proto3" json:"avatar_list,omitempty"`
	HBEDLLEAILC uint32                       `protobuf:"varint,11,opt,name=HBEDLLEAILC,proto3" json:"HBEDLLEAILC,omitempty"`
	KKEIPMOKINF []*TreasureDungeonRecordData `protobuf:"bytes,8,rep,name=KKEIPMOKINF,proto3" json:"KKEIPMOKINF,omitempty"`
	LBFBJIOINPG uint32                       `protobuf:"varint,9,opt,name=LBFBJIOINPG,proto3" json:"LBFBJIOINPG,omitempty"`
	HFMJHJHGCED uint32                       `protobuf:"varint,4,opt,name=HFMJHJHGCED,proto3" json:"HFMJHJHGCED,omitempty"`
	MapId       uint32                       `protobuf:"varint,6,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	KGACBNBPMHP bool                         `protobuf:"varint,620,opt,name=KGACBNBPMHP,proto3" json:"KGACBNBPMHP,omitempty"`
	DKJJFPLGNGI bool                         `protobuf:"varint,331,opt,name=DKJJFPLGNGI,proto3" json:"DKJJFPLGNGI,omitempty"`
	ABBGBMOFFGA []*GMJMONHDFJI               `protobuf:"bytes,1125,rep,name=ABBGBMOFFGA,proto3" json:"ABBGBMOFFGA,omitempty"`
	PIKDGNGDCCA uint32                       `protobuf:"varint,2,opt,name=PIKDGNGDCCA,proto3" json:"PIKDGNGDCCA,omitempty"`
	HMPPFGCIFJK uint32                       `protobuf:"varint,3,opt,name=HMPPFGCIFJK,proto3" json:"HMPPFGCIFJK,omitempty"`
	GridList    []*PFOONLIJKKK               `protobuf:"bytes,5,rep,name=grid_list,json=gridList,proto3" json:"grid_list,omitempty"`
	BuffList    []*HKCCGMPCKHK               `protobuf:"bytes,1702,rep,name=buff_list,json=buffList,proto3" json:"buff_list,omitempty"`
	NICOCPANLHC []*LEGLIFDBIBE               `protobuf:"bytes,490,rep,name=NICOCPANLHC,proto3" json:"NICOCPANLHC,omitempty"`
}

func (x *TreasureDungeonLevel) Reset() {
	*x = TreasureDungeonLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TreasureDungeonLevel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasureDungeonLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureDungeonLevel) ProtoMessage() {}

func (x *TreasureDungeonLevel) ProtoReflect() protoreflect.Message {
	mi := &file_TreasureDungeonLevel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureDungeonLevel.ProtoReflect.Descriptor instead.
func (*TreasureDungeonLevel) Descriptor() ([]byte, []int) {
	return file_TreasureDungeonLevel_proto_rawDescGZIP(), []int{0}
}

func (x *TreasureDungeonLevel) GetKFGAADCAFOE() uint32 {
	if x != nil {
		return x.KFGAADCAFOE
	}
	return 0
}

func (x *TreasureDungeonLevel) GetGNLDOLFGDAN() bool {
	if x != nil {
		return x.GNLDOLFGDAN
	}
	return false
}

func (x *TreasureDungeonLevel) GetJCIBDGDBJAL() uint32 {
	if x != nil {
		return x.JCIBDGDBJAL
	}
	return 0
}

func (x *TreasureDungeonLevel) GetItemList() []*ICOBJGOCLFL {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *TreasureDungeonLevel) GetAvatarList() []*GMJMONHDFJI {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

func (x *TreasureDungeonLevel) GetHBEDLLEAILC() uint32 {
	if x != nil {
		return x.HBEDLLEAILC
	}
	return 0
}

func (x *TreasureDungeonLevel) GetKKEIPMOKINF() []*TreasureDungeonRecordData {
	if x != nil {
		return x.KKEIPMOKINF
	}
	return nil
}

func (x *TreasureDungeonLevel) GetLBFBJIOINPG() uint32 {
	if x != nil {
		return x.LBFBJIOINPG
	}
	return 0
}

func (x *TreasureDungeonLevel) GetHFMJHJHGCED() uint32 {
	if x != nil {
		return x.HFMJHJHGCED
	}
	return 0
}

func (x *TreasureDungeonLevel) GetMapId() uint32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *TreasureDungeonLevel) GetKGACBNBPMHP() bool {
	if x != nil {
		return x.KGACBNBPMHP
	}
	return false
}

func (x *TreasureDungeonLevel) GetDKJJFPLGNGI() bool {
	if x != nil {
		return x.DKJJFPLGNGI
	}
	return false
}

func (x *TreasureDungeonLevel) GetABBGBMOFFGA() []*GMJMONHDFJI {
	if x != nil {
		return x.ABBGBMOFFGA
	}
	return nil
}

func (x *TreasureDungeonLevel) GetPIKDGNGDCCA() uint32 {
	if x != nil {
		return x.PIKDGNGDCCA
	}
	return 0
}

func (x *TreasureDungeonLevel) GetHMPPFGCIFJK() uint32 {
	if x != nil {
		return x.HMPPFGCIFJK
	}
	return 0
}

func (x *TreasureDungeonLevel) GetGridList() []*PFOONLIJKKK {
	if x != nil {
		return x.GridList
	}
	return nil
}

func (x *TreasureDungeonLevel) GetBuffList() []*HKCCGMPCKHK {
	if x != nil {
		return x.BuffList
	}
	return nil
}

func (x *TreasureDungeonLevel) GetNICOCPANLHC() []*LEGLIFDBIBE {
	if x != nil {
		return x.NICOCPANLHC
	}
	return nil
}

var File_TreasureDungeonLevel_proto protoreflect.FileDescriptor

var file_TreasureDungeonLevel_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x48, 0x4b,
	0x43, 0x43, 0x47, 0x4d, 0x50, 0x43, 0x4b, 0x48, 0x4b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x50, 0x46, 0x4f, 0x4f, 0x4e, 0x4c, 0x49, 0x4a, 0x4b, 0x4b, 0x4b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x47, 0x4d, 0x4a, 0x4d, 0x4f, 0x4e, 0x48, 0x44, 0x46, 0x4a, 0x49, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44,
	0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4c, 0x45, 0x47, 0x4c, 0x49, 0x46, 0x44, 0x42,
	0x49, 0x42, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x49, 0x43, 0x4f, 0x42, 0x4a,
	0x47, 0x4f, 0x43, 0x4c, 0x46, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x05, 0x0a,
	0x14, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x46, 0x47, 0x41, 0x41, 0x44, 0x43,
	0x41, 0x46, 0x4f, 0x45, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4b, 0x46, 0x47, 0x41,
	0x41, 0x44, 0x43, 0x41, 0x46, 0x4f, 0x45, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x4e, 0x4c, 0x44, 0x4f,
	0x4c, 0x46, 0x47, 0x44, 0x41, 0x4e, 0x18, 0xc1, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x47,
	0x4e, 0x4c, 0x44, 0x4f, 0x4c, 0x46, 0x47, 0x44, 0x41, 0x4e, 0x12, 0x21, 0x0a, 0x0b, 0x4a, 0x43,
	0x49, 0x42, 0x44, 0x47, 0x44, 0x42, 0x4a, 0x41, 0x4c, 0x18, 0xf0, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x4a, 0x43, 0x49, 0x42, 0x44, 0x47, 0x44, 0x42, 0x4a, 0x41, 0x4c, 0x12, 0x2a, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xed, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x43, 0x4f, 0x42, 0x4a, 0x47, 0x4f, 0x43, 0x4c, 0x46, 0x4c, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xd7, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x47, 0x4d, 0x4a, 0x4d, 0x4f, 0x4e, 0x48, 0x44, 0x46, 0x4a, 0x49, 0x52, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x42, 0x45,
	0x44, 0x4c, 0x4c, 0x45, 0x41, 0x49, 0x4c, 0x43, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x48, 0x42, 0x45, 0x44, 0x4c, 0x4c, 0x45, 0x41, 0x49, 0x4c, 0x43, 0x12, 0x3c, 0x0a, 0x0b, 0x4b,
	0x4b, 0x45, 0x49, 0x50, 0x4d, 0x4f, 0x4b, 0x49, 0x4e, 0x46, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x65,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x4b, 0x4b,
	0x45, 0x49, 0x50, 0x4d, 0x4f, 0x4b, 0x49, 0x4e, 0x46, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x42, 0x46,
	0x42, 0x4a, 0x49, 0x4f, 0x49, 0x4e, 0x50, 0x47, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x4c, 0x42, 0x46, 0x42, 0x4a, 0x49, 0x4f, 0x49, 0x4e, 0x50, 0x47, 0x12, 0x20, 0x0a, 0x0b, 0x48,
	0x46, 0x4d, 0x4a, 0x48, 0x4a, 0x48, 0x47, 0x43, 0x45, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x48, 0x46, 0x4d, 0x4a, 0x48, 0x4a, 0x48, 0x47, 0x43, 0x45, 0x44, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x61, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x4b, 0x47, 0x41, 0x43, 0x42, 0x4e, 0x42, 0x50,
	0x4d, 0x48, 0x50, 0x18, 0xec, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4b, 0x47, 0x41, 0x43,
	0x42, 0x4e, 0x42, 0x50, 0x4d, 0x48, 0x50, 0x12, 0x21, 0x0a, 0x0b, 0x44, 0x4b, 0x4a, 0x4a, 0x46,
	0x50, 0x4c, 0x47, 0x4e, 0x47, 0x49, 0x18, 0xcb, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x44,
	0x4b, 0x4a, 0x4a, 0x46, 0x50, 0x4c, 0x47, 0x4e, 0x47, 0x49, 0x12, 0x2f, 0x0a, 0x0b, 0x41, 0x42,
	0x42, 0x47, 0x42, 0x4d, 0x4f, 0x46, 0x46, 0x47, 0x41, 0x18, 0xe5, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x47, 0x4d, 0x4a, 0x4d, 0x4f, 0x4e, 0x48, 0x44, 0x46, 0x4a, 0x49, 0x52, 0x0b,
	0x41, 0x42, 0x42, 0x47, 0x42, 0x4d, 0x4f, 0x46, 0x46, 0x47, 0x41, 0x12, 0x20, 0x0a, 0x0b, 0x50,
	0x49, 0x4b, 0x44, 0x47, 0x4e, 0x47, 0x44, 0x43, 0x43, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x50, 0x49, 0x4b, 0x44, 0x47, 0x4e, 0x47, 0x44, 0x43, 0x43, 0x41, 0x12, 0x20, 0x0a,
	0x0b, 0x48, 0x4d, 0x50, 0x50, 0x46, 0x47, 0x43, 0x49, 0x46, 0x4a, 0x4b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x48, 0x4d, 0x50, 0x50, 0x46, 0x47, 0x43, 0x49, 0x46, 0x4a, 0x4b, 0x12,
	0x29, 0x0a, 0x09, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x46, 0x4f, 0x4f, 0x4e, 0x4c, 0x49, 0x4a, 0x4b, 0x4b, 0x4b,
	0x52, 0x08, 0x67, 0x72, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x62, 0x75,
	0x66, 0x66, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xa6, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x48, 0x4b, 0x43, 0x43, 0x47, 0x4d, 0x50, 0x43, 0x4b, 0x48, 0x4b, 0x52, 0x08, 0x62, 0x75,
	0x66, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x4e, 0x49, 0x43, 0x4f, 0x43, 0x50,
	0x41, 0x4e, 0x4c, 0x48, 0x43, 0x18, 0xea, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c,
	0x45, 0x47, 0x4c, 0x49, 0x46, 0x44, 0x42, 0x49, 0x42, 0x45, 0x52, 0x0b, 0x4e, 0x49, 0x43, 0x4f,
	0x43, 0x50, 0x41, 0x4e, 0x4c, 0x48, 0x43, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c,
	0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_TreasureDungeonLevel_proto_rawDescOnce sync.Once
	file_TreasureDungeonLevel_proto_rawDescData = file_TreasureDungeonLevel_proto_rawDesc
)

func file_TreasureDungeonLevel_proto_rawDescGZIP() []byte {
	file_TreasureDungeonLevel_proto_rawDescOnce.Do(func() {
		file_TreasureDungeonLevel_proto_rawDescData = protoimpl.X.CompressGZIP(file_TreasureDungeonLevel_proto_rawDescData)
	})
	return file_TreasureDungeonLevel_proto_rawDescData
}

var file_TreasureDungeonLevel_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_TreasureDungeonLevel_proto_goTypes = []interface{}{
	(*TreasureDungeonLevel)(nil),      // 0: TreasureDungeonLevel
	(*ICOBJGOCLFL)(nil),               // 1: ICOBJGOCLFL
	(*GMJMONHDFJI)(nil),               // 2: GMJMONHDFJI
	(*TreasureDungeonRecordData)(nil), // 3: TreasureDungeonRecordData
	(*PFOONLIJKKK)(nil),               // 4: PFOONLIJKKK
	(*HKCCGMPCKHK)(nil),               // 5: HKCCGMPCKHK
	(*LEGLIFDBIBE)(nil),               // 6: LEGLIFDBIBE
}
var file_TreasureDungeonLevel_proto_depIdxs = []int32{
	1, // 0: TreasureDungeonLevel.item_list:type_name -> ICOBJGOCLFL
	2, // 1: TreasureDungeonLevel.avatar_list:type_name -> GMJMONHDFJI
	3, // 2: TreasureDungeonLevel.KKEIPMOKINF:type_name -> TreasureDungeonRecordData
	2, // 3: TreasureDungeonLevel.ABBGBMOFFGA:type_name -> GMJMONHDFJI
	4, // 4: TreasureDungeonLevel.grid_list:type_name -> PFOONLIJKKK
	5, // 5: TreasureDungeonLevel.buff_list:type_name -> HKCCGMPCKHK
	6, // 6: TreasureDungeonLevel.NICOCPANLHC:type_name -> LEGLIFDBIBE
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_TreasureDungeonLevel_proto_init() }
func file_TreasureDungeonLevel_proto_init() {
	if File_TreasureDungeonLevel_proto != nil {
		return
	}
	file_HKCCGMPCKHK_proto_init()
	file_PFOONLIJKKK_proto_init()
	file_GMJMONHDFJI_proto_init()
	file_TreasureDungeonRecordData_proto_init()
	file_LEGLIFDBIBE_proto_init()
	file_ICOBJGOCLFL_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_TreasureDungeonLevel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasureDungeonLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TreasureDungeonLevel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TreasureDungeonLevel_proto_goTypes,
		DependencyIndexes: file_TreasureDungeonLevel_proto_depIdxs,
		MessageInfos:      file_TreasureDungeonLevel_proto_msgTypes,
	}.Build()
	File_TreasureDungeonLevel_proto = out.File
	file_TreasureDungeonLevel_proto_rawDesc = nil
	file_TreasureDungeonLevel_proto_goTypes = nil
	file_TreasureDungeonLevel_proto_depIdxs = nil
}
