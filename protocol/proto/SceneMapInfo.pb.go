// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: SceneMapInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SceneMapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChestList          []*ChestInfo     `protobuf:"bytes,11,rep,name=chest_list,json=chestList,proto3" json:"chest_list,omitempty"`
	ContentId          uint32           `protobuf:"varint,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	LightenSectionList []uint32         `protobuf:"varint,15,rep,packed,name=lighten_section_list,json=lightenSectionList,proto3" json:"lighten_section_list,omitempty"`
	MazePropList       []*MazePropState `protobuf:"bytes,5,rep,name=maze_prop_list,json=mazePropList,proto3" json:"maze_prop_list,omitempty"`
	DimensionId        uint32           `protobuf:"varint,2,opt,name=dimension_id,json=dimensionId,proto3" json:"dimension_id,omitempty"`
	EntryId            uint32           `protobuf:"varint,10,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	FloorSavedData     map[string]int32 `protobuf:"bytes,8,rep,name=floor_saved_data,json=floorSavedData,proto3" json:"floor_saved_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	GCELHDACAJK        []*BKCEKEKHJCA   `protobuf:"bytes,9,rep,name=GCELHDACAJK,proto3" json:"GCELHDACAJK,omitempty"`
	UnlockTeleportList []uint32         `protobuf:"varint,6,rep,packed,name=unlock_teleport_list,json=unlockTeleportList,proto3" json:"unlock_teleport_list,omitempty"`
	EntryStoryLineId   uint32           `protobuf:"varint,13,opt,name=entry_story_line_id,json=entryStoryLineId,proto3" json:"entry_story_line_id,omitempty"`
	MazeGroupList      []*MazeGroup     `protobuf:"bytes,3,rep,name=maze_group_list,json=mazeGroupList,proto3" json:"maze_group_list,omitempty"`
	Retcode            uint32           `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
	CurMapEntryId      uint32           `protobuf:"varint,4,opt,name=cur_map_entry_id,json=curMapEntryId,proto3" json:"cur_map_entry_id,omitempty"`
}

func (x *SceneMapInfo) Reset() {
	*x = SceneMapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SceneMapInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneMapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneMapInfo) ProtoMessage() {}

func (x *SceneMapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SceneMapInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneMapInfo.ProtoReflect.Descriptor instead.
func (*SceneMapInfo) Descriptor() ([]byte, []int) {
	return file_SceneMapInfo_proto_rawDescGZIP(), []int{0}
}

func (x *SceneMapInfo) GetChestList() []*ChestInfo {
	if x != nil {
		return x.ChestList
	}
	return nil
}

func (x *SceneMapInfo) GetContentId() uint32 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *SceneMapInfo) GetLightenSectionList() []uint32 {
	if x != nil {
		return x.LightenSectionList
	}
	return nil
}

func (x *SceneMapInfo) GetMazePropList() []*MazePropState {
	if x != nil {
		return x.MazePropList
	}
	return nil
}

func (x *SceneMapInfo) GetDimensionId() uint32 {
	if x != nil {
		return x.DimensionId
	}
	return 0
}

func (x *SceneMapInfo) GetEntryId() uint32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *SceneMapInfo) GetFloorSavedData() map[string]int32 {
	if x != nil {
		return x.FloorSavedData
	}
	return nil
}

func (x *SceneMapInfo) GetGCELHDACAJK() []*BKCEKEKHJCA {
	if x != nil {
		return x.GCELHDACAJK
	}
	return nil
}

func (x *SceneMapInfo) GetUnlockTeleportList() []uint32 {
	if x != nil {
		return x.UnlockTeleportList
	}
	return nil
}

func (x *SceneMapInfo) GetEntryStoryLineId() uint32 {
	if x != nil {
		return x.EntryStoryLineId
	}
	return 0
}

func (x *SceneMapInfo) GetMazeGroupList() []*MazeGroup {
	if x != nil {
		return x.MazeGroupList
	}
	return nil
}

func (x *SceneMapInfo) GetRetcode() uint32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SceneMapInfo) GetCurMapEntryId() uint32 {
	if x != nil {
		return x.CurMapEntryId
	}
	return 0
}

var File_SceneMapInfo_proto protoreflect.FileDescriptor

var file_SceneMapInfo_proto_rawDesc = []byte{
	0x0a, 0x12, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x42, 0x4b, 0x43, 0x45, 0x4b, 0x45, 0x4b, 0x48, 0x4a, 0x43,
	0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x4d, 0x61, 0x7a, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x4d, 0x61, 0x7a, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x43,
	0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96,
	0x05, 0x0a, 0x0c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x29, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x63, 0x68, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x65, 0x6e,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0e, 0x6d,
	0x61, 0x7a, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x61, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0c, 0x6d, 0x61, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x4b, 0x0a, 0x10, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x61,
	0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0b,
	0x47, 0x43, 0x45, 0x4c, 0x48, 0x44, 0x41, 0x43, 0x41, 0x4a, 0x4b, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x4b, 0x43, 0x45, 0x4b, 0x45, 0x4b, 0x48, 0x4a, 0x43, 0x41, 0x52,
	0x0b, 0x47, 0x43, 0x45, 0x4c, 0x48, 0x44, 0x41, 0x43, 0x41, 0x4a, 0x4b, 0x12, 0x30, 0x0a, 0x14,
	0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x13, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x0f, 0x6d, 0x61, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x61, 0x7a, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0d, 0x6d, 0x61, 0x7a, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x63,
	0x75, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x1a, 0x41, 0x0a, 0x13, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c,
	0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SceneMapInfo_proto_rawDescOnce sync.Once
	file_SceneMapInfo_proto_rawDescData = file_SceneMapInfo_proto_rawDesc
)

func file_SceneMapInfo_proto_rawDescGZIP() []byte {
	file_SceneMapInfo_proto_rawDescOnce.Do(func() {
		file_SceneMapInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_SceneMapInfo_proto_rawDescData)
	})
	return file_SceneMapInfo_proto_rawDescData
}

var file_SceneMapInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_SceneMapInfo_proto_goTypes = []interface{}{
	(*SceneMapInfo)(nil),  // 0: SceneMapInfo
	nil,                   // 1: SceneMapInfo.FloorSavedDataEntry
	(*ChestInfo)(nil),     // 2: ChestInfo
	(*MazePropState)(nil), // 3: MazePropState
	(*BKCEKEKHJCA)(nil),   // 4: BKCEKEKHJCA
	(*MazeGroup)(nil),     // 5: MazeGroup
}
var file_SceneMapInfo_proto_depIdxs = []int32{
	2, // 0: SceneMapInfo.chest_list:type_name -> ChestInfo
	3, // 1: SceneMapInfo.maze_prop_list:type_name -> MazePropState
	1, // 2: SceneMapInfo.floor_saved_data:type_name -> SceneMapInfo.FloorSavedDataEntry
	4, // 3: SceneMapInfo.GCELHDACAJK:type_name -> BKCEKEKHJCA
	5, // 4: SceneMapInfo.maze_group_list:type_name -> MazeGroup
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_SceneMapInfo_proto_init() }
func file_SceneMapInfo_proto_init() {
	if File_SceneMapInfo_proto != nil {
		return
	}
	file_BKCEKEKHJCA_proto_init()
	file_MazeGroup_proto_init()
	file_MazePropState_proto_init()
	file_ChestInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SceneMapInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneMapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SceneMapInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SceneMapInfo_proto_goTypes,
		DependencyIndexes: file_SceneMapInfo_proto_depIdxs,
		MessageInfos:      file_SceneMapInfo_proto_msgTypes,
	}.Build()
	File_SceneMapInfo_proto = out.File
	file_SceneMapInfo_proto_rawDesc = nil
	file_SceneMapInfo_proto_goTypes = nil
	file_SceneMapInfo_proto_depIdxs = nil
}
