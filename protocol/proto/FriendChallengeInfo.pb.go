// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: FriendChallengeInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendChallengeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleRecordStars uint32                 `protobuf:"varint,14,opt,name=battle_record_stars,json=battleRecordStars,proto3" json:"battle_record_stars,omitempty"`
	RemarkName        string                 `protobuf:"bytes,7,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"`
	PlayerInfo        *PlayerSimpleInfo      `protobuf:"bytes,3,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
	BuffOne           uint32                 `protobuf:"varint,1,opt,name=buff_one,json=buffOne,proto3" json:"buff_one,omitempty"`
	BuffTwo           uint32                 `protobuf:"varint,6,opt,name=buff_two,json=buffTwo,proto3" json:"buff_two,omitempty"`
	ScoreId           uint32                 `protobuf:"varint,8,opt,name=score_id,json=scoreId,proto3" json:"score_id,omitempty"`
	LineupList        []*ChallengeLineupList `protobuf:"bytes,2,rep,name=lineup_list,json=lineupList,proto3" json:"lineup_list,omitempty"`
}

func (x *FriendChallengeInfo) Reset() {
	*x = FriendChallengeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FriendChallengeInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendChallengeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendChallengeInfo) ProtoMessage() {}

func (x *FriendChallengeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_FriendChallengeInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendChallengeInfo.ProtoReflect.Descriptor instead.
func (*FriendChallengeInfo) Descriptor() ([]byte, []int) {
	return file_FriendChallengeInfo_proto_rawDescGZIP(), []int{0}
}

func (x *FriendChallengeInfo) GetBattleRecordStars() uint32 {
	if x != nil {
		return x.BattleRecordStars
	}
	return 0
}

func (x *FriendChallengeInfo) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

func (x *FriendChallengeInfo) GetPlayerInfo() *PlayerSimpleInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *FriendChallengeInfo) GetBuffOne() uint32 {
	if x != nil {
		return x.BuffOne
	}
	return 0
}

func (x *FriendChallengeInfo) GetBuffTwo() uint32 {
	if x != nil {
		return x.BuffTwo
	}
	return 0
}

func (x *FriendChallengeInfo) GetScoreId() uint32 {
	if x != nil {
		return x.ScoreId
	}
	return 0
}

func (x *FriendChallengeInfo) GetLineupList() []*ChallengeLineupList {
	if x != nil {
		return x.LineupList
	}
	return nil
}

var File_FriendChallengeInfo_proto protoreflect.FileDescriptor

var file_FriendChallengeInfo_proto_rawDesc = []byte{
	0x0a, 0x19, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2,
	0x02, 0x0a, 0x13, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x75, 0x66, 0x66, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62,
	0x75, 0x66, 0x66, 0x4f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x74,
	0x77, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x54, 0x77,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b,
	0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FriendChallengeInfo_proto_rawDescOnce sync.Once
	file_FriendChallengeInfo_proto_rawDescData = file_FriendChallengeInfo_proto_rawDesc
)

func file_FriendChallengeInfo_proto_rawDescGZIP() []byte {
	file_FriendChallengeInfo_proto_rawDescOnce.Do(func() {
		file_FriendChallengeInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_FriendChallengeInfo_proto_rawDescData)
	})
	return file_FriendChallengeInfo_proto_rawDescData
}

var file_FriendChallengeInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_FriendChallengeInfo_proto_goTypes = []interface{}{
	(*FriendChallengeInfo)(nil), // 0: FriendChallengeInfo
	(*PlayerSimpleInfo)(nil),    // 1: PlayerSimpleInfo
	(*ChallengeLineupList)(nil), // 2: ChallengeLineupList
}
var file_FriendChallengeInfo_proto_depIdxs = []int32{
	1, // 0: FriendChallengeInfo.player_info:type_name -> PlayerSimpleInfo
	2, // 1: FriendChallengeInfo.lineup_list:type_name -> ChallengeLineupList
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_FriendChallengeInfo_proto_init() }
func file_FriendChallengeInfo_proto_init() {
	if File_FriendChallengeInfo_proto != nil {
		return
	}
	file_ChallengeLineupList_proto_init()
	file_PlayerSimpleInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_FriendChallengeInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendChallengeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FriendChallengeInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FriendChallengeInfo_proto_goTypes,
		DependencyIndexes: file_FriendChallengeInfo_proto_depIdxs,
		MessageInfos:      file_FriendChallengeInfo_proto_msgTypes,
	}.Build()
	File_FriendChallengeInfo_proto = out.File
	file_FriendChallengeInfo_proto_rawDesc = nil
	file_FriendChallengeInfo_proto_goTypes = nil
	file_FriendChallengeInfo_proto_depIdxs = nil
}
