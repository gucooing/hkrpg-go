// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: PlayerSyncScNotify.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerSyncScNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialList            []*Material            `protobuf:"bytes,2,rep,name=material_list,json=materialList,proto3" json:"material_list,omitempty"`
	MessageGroupStatus      []*GroupStatus         `protobuf:"bytes,166,rep,name=message_group_status,json=messageGroupStatus,proto3" json:"message_group_status,omitempty"`
	QuestList               []*Quest               `protobuf:"bytes,15,rep,name=quest_list,json=questList,proto3" json:"quest_list,omitempty"`
	DelRelicList            []uint32               `protobuf:"varint,13,rep,packed,name=del_relic_list,json=delRelicList,proto3" json:"del_relic_list,omitempty"`
	BasicModuleSync         *BasicModuleSync       `protobuf:"bytes,1,opt,name=basic_module_sync,json=basicModuleSync,proto3" json:"basic_module_sync,omitempty"`
	TotalAchievementExp     uint32                 `protobuf:"varint,751,opt,name=total_achievement_exp,json=totalAchievementExp,proto3" json:"total_achievement_exp,omitempty"`
	SectionStatus           []*SectionStatus       `protobuf:"bytes,1816,rep,name=section_status,json=sectionStatus,proto3" json:"section_status,omitempty"`
	LLMKCDEDIFP             []*Material            `protobuf:"bytes,986,rep,name=LLMKCDEDIFP,proto3" json:"LLMKCDEDIFP,omitempty"`
	FFEBCDIBIHD             []*MGIGPKHDFLH         `protobuf:"bytes,1433,rep,name=FFEBCDIBIHD,proto3" json:"FFEBCDIBIHD,omitempty"`
	ABEEDDGDECG             *DGAHMGJANPL           `protobuf:"bytes,1499,opt,name=ABEEDDGDECG,proto3" json:"ABEEDDGDECG,omitempty"`
	BasicInfo               *PlayerBasicInfo       `protobuf:"bytes,10,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	WaitDelResourceList     []*WaitDelResource     `protobuf:"bytes,8,rep,name=wait_del_resource_list,json=waitDelResourceList,proto3" json:"wait_del_resource_list,omitempty"`
	NewItemHintList         []uint32               `protobuf:"varint,867,rep,packed,name=new_item_hint_list,json=newItemHintList,proto3" json:"new_item_hint_list,omitempty"`
	OHLFBILHPCC             *ItemList              `protobuf:"bytes,1134,opt,name=OHLFBILHPCC,proto3" json:"OHLFBILHPCC,omitempty"`
	EquipmentList           []*Equipment           `protobuf:"bytes,5,rep,name=equipment_list,json=equipmentList,proto3" json:"equipment_list,omitempty"`
	AvatarSync              *AvatarSync            `protobuf:"bytes,4,opt,name=avatar_sync,json=avatarSync,proto3" json:"avatar_sync,omitempty"`
	MissionSync             *MissionSync           `protobuf:"bytes,7,opt,name=mission_sync,json=missionSync,proto3" json:"mission_sync,omitempty"`
	MissionEventSync        *MissionEventSync      `protobuf:"bytes,6,opt,name=mission_event_sync,json=missionEventSync,proto3" json:"mission_event_sync,omitempty"`
	PlayerboardModuleSync   *PlayerBoardModuleSync `protobuf:"bytes,1972,opt,name=playerboard_module_sync,json=playerboardModuleSync,proto3" json:"playerboard_module_sync,omitempty"`
	DelEquipmentList        []uint32               `protobuf:"varint,9,rep,packed,name=del_equipment_list,json=delEquipmentList,proto3" json:"del_equipment_list,omitempty"`
	RelicList               []*Relic               `protobuf:"bytes,11,rep,name=relic_list,json=relicList,proto3" json:"relic_list,omitempty"`
	MultiPathAvatarInfoList []*MultiPathAvatarInfo `protobuf:"bytes,1501,rep,name=multi_path_avatar_info_list,json=multiPathAvatarInfoList,proto3" json:"multi_path_avatar_info_list,omitempty"`
}

func (x *PlayerSyncScNotify) Reset() {
	*x = PlayerSyncScNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PlayerSyncScNotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSyncScNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSyncScNotify) ProtoMessage() {}

func (x *PlayerSyncScNotify) ProtoReflect() protoreflect.Message {
	mi := &file_PlayerSyncScNotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSyncScNotify.ProtoReflect.Descriptor instead.
func (*PlayerSyncScNotify) Descriptor() ([]byte, []int) {
	return file_PlayerSyncScNotify_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerSyncScNotify) GetMaterialList() []*Material {
	if x != nil {
		return x.MaterialList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetMessageGroupStatus() []*GroupStatus {
	if x != nil {
		return x.MessageGroupStatus
	}
	return nil
}

func (x *PlayerSyncScNotify) GetQuestList() []*Quest {
	if x != nil {
		return x.QuestList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetDelRelicList() []uint32 {
	if x != nil {
		return x.DelRelicList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetBasicModuleSync() *BasicModuleSync {
	if x != nil {
		return x.BasicModuleSync
	}
	return nil
}

func (x *PlayerSyncScNotify) GetTotalAchievementExp() uint32 {
	if x != nil {
		return x.TotalAchievementExp
	}
	return 0
}

func (x *PlayerSyncScNotify) GetSectionStatus() []*SectionStatus {
	if x != nil {
		return x.SectionStatus
	}
	return nil
}

func (x *PlayerSyncScNotify) GetLLMKCDEDIFP() []*Material {
	if x != nil {
		return x.LLMKCDEDIFP
	}
	return nil
}

func (x *PlayerSyncScNotify) GetFFEBCDIBIHD() []*MGIGPKHDFLH {
	if x != nil {
		return x.FFEBCDIBIHD
	}
	return nil
}

func (x *PlayerSyncScNotify) GetABEEDDGDECG() *DGAHMGJANPL {
	if x != nil {
		return x.ABEEDDGDECG
	}
	return nil
}

func (x *PlayerSyncScNotify) GetBasicInfo() *PlayerBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *PlayerSyncScNotify) GetWaitDelResourceList() []*WaitDelResource {
	if x != nil {
		return x.WaitDelResourceList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetNewItemHintList() []uint32 {
	if x != nil {
		return x.NewItemHintList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetOHLFBILHPCC() *ItemList {
	if x != nil {
		return x.OHLFBILHPCC
	}
	return nil
}

func (x *PlayerSyncScNotify) GetEquipmentList() []*Equipment {
	if x != nil {
		return x.EquipmentList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetAvatarSync() *AvatarSync {
	if x != nil {
		return x.AvatarSync
	}
	return nil
}

func (x *PlayerSyncScNotify) GetMissionSync() *MissionSync {
	if x != nil {
		return x.MissionSync
	}
	return nil
}

func (x *PlayerSyncScNotify) GetMissionEventSync() *MissionEventSync {
	if x != nil {
		return x.MissionEventSync
	}
	return nil
}

func (x *PlayerSyncScNotify) GetPlayerboardModuleSync() *PlayerBoardModuleSync {
	if x != nil {
		return x.PlayerboardModuleSync
	}
	return nil
}

func (x *PlayerSyncScNotify) GetDelEquipmentList() []uint32 {
	if x != nil {
		return x.DelEquipmentList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetRelicList() []*Relic {
	if x != nil {
		return x.RelicList
	}
	return nil
}

func (x *PlayerSyncScNotify) GetMultiPathAvatarInfoList() []*MultiPathAvatarInfo {
	if x != nil {
		return x.MultiPathAvatarInfoList
	}
	return nil
}

var File_PlayerSyncScNotify_proto protoreflect.FileDescriptor

var file_PlayerSyncScNotify_proto_rawDesc = []byte{
	0x0a, 0x18, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x63, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x47, 0x49, 0x47, 0x50, 0x4b,
	0x48, 0x44, 0x46, 0x4c, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x74, 0x68, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x57,
	0x61, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x52, 0x65, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x44, 0x47, 0x41, 0x48, 0x4d, 0x47, 0x4a, 0x41, 0x4e,
	0x50, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x09,
	0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x63, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x2e, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xa6, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x64, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x6c, 0x69, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x11, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x0f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x18, 0xef, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x78, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x98, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a,
	0x0b, 0x4c, 0x4c, 0x4d, 0x4b, 0x43, 0x44, 0x45, 0x44, 0x49, 0x46, 0x50, 0x18, 0xda, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0b,
	0x4c, 0x4c, 0x4d, 0x4b, 0x43, 0x44, 0x45, 0x44, 0x49, 0x46, 0x50, 0x12, 0x2f, 0x0a, 0x0b, 0x46,
	0x46, 0x45, 0x42, 0x43, 0x44, 0x49, 0x42, 0x49, 0x48, 0x44, 0x18, 0x99, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x47, 0x49, 0x47, 0x50, 0x4b, 0x48, 0x44, 0x46, 0x4c, 0x48, 0x52,
	0x0b, 0x46, 0x46, 0x45, 0x42, 0x43, 0x44, 0x49, 0x42, 0x49, 0x48, 0x44, 0x12, 0x2f, 0x0a, 0x0b,
	0x41, 0x42, 0x45, 0x45, 0x44, 0x44, 0x47, 0x44, 0x45, 0x43, 0x47, 0x18, 0xdb, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x44, 0x47, 0x41, 0x48, 0x4d, 0x47, 0x4a, 0x41, 0x4e, 0x50, 0x4c,
	0x52, 0x0b, 0x41, 0x42, 0x45, 0x45, 0x44, 0x44, 0x47, 0x44, 0x45, 0x43, 0x47, 0x12, 0x2f, 0x0a,
	0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45,
	0x0a, 0x16, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x57, 0x61, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x13, 0x77, 0x61, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xe3, 0x06, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x4f, 0x48, 0x4c, 0x46, 0x42, 0x49, 0x4c, 0x48, 0x50,
	0x43, 0x43, 0x18, 0xee, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x4f, 0x48, 0x4c, 0x46, 0x42, 0x49, 0x4c, 0x48, 0x50, 0x43,
	0x43, 0x12, 0x31, 0x0a, 0x0e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x2f, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x3f, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x4f, 0x0a, 0x17, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18,
	0xb4, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x15,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x52, 0x65, 0x6c, 0x69, 0x63, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x1b, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xdd, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x74, 0x68, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x17, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x74,
	0x68, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68,
	0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PlayerSyncScNotify_proto_rawDescOnce sync.Once
	file_PlayerSyncScNotify_proto_rawDescData = file_PlayerSyncScNotify_proto_rawDesc
)

func file_PlayerSyncScNotify_proto_rawDescGZIP() []byte {
	file_PlayerSyncScNotify_proto_rawDescOnce.Do(func() {
		file_PlayerSyncScNotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_PlayerSyncScNotify_proto_rawDescData)
	})
	return file_PlayerSyncScNotify_proto_rawDescData
}

var file_PlayerSyncScNotify_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_PlayerSyncScNotify_proto_goTypes = []interface{}{
	(*PlayerSyncScNotify)(nil),    // 0: PlayerSyncScNotify
	(*Material)(nil),              // 1: Material
	(*GroupStatus)(nil),           // 2: GroupStatus
	(*Quest)(nil),                 // 3: Quest
	(*BasicModuleSync)(nil),       // 4: BasicModuleSync
	(*SectionStatus)(nil),         // 5: SectionStatus
	(*MGIGPKHDFLH)(nil),           // 6: MGIGPKHDFLH
	(*DGAHMGJANPL)(nil),           // 7: DGAHMGJANPL
	(*PlayerBasicInfo)(nil),       // 8: PlayerBasicInfo
	(*WaitDelResource)(nil),       // 9: WaitDelResource
	(*ItemList)(nil),              // 10: ItemList
	(*Equipment)(nil),             // 11: Equipment
	(*AvatarSync)(nil),            // 12: AvatarSync
	(*MissionSync)(nil),           // 13: MissionSync
	(*MissionEventSync)(nil),      // 14: MissionEventSync
	(*PlayerBoardModuleSync)(nil), // 15: PlayerBoardModuleSync
	(*Relic)(nil),                 // 16: Relic
	(*MultiPathAvatarInfo)(nil),   // 17: MultiPathAvatarInfo
}
var file_PlayerSyncScNotify_proto_depIdxs = []int32{
	1,  // 0: PlayerSyncScNotify.material_list:type_name -> Material
	2,  // 1: PlayerSyncScNotify.message_group_status:type_name -> GroupStatus
	3,  // 2: PlayerSyncScNotify.quest_list:type_name -> Quest
	4,  // 3: PlayerSyncScNotify.basic_module_sync:type_name -> BasicModuleSync
	5,  // 4: PlayerSyncScNotify.section_status:type_name -> SectionStatus
	1,  // 5: PlayerSyncScNotify.LLMKCDEDIFP:type_name -> Material
	6,  // 6: PlayerSyncScNotify.FFEBCDIBIHD:type_name -> MGIGPKHDFLH
	7,  // 7: PlayerSyncScNotify.ABEEDDGDECG:type_name -> DGAHMGJANPL
	8,  // 8: PlayerSyncScNotify.basic_info:type_name -> PlayerBasicInfo
	9,  // 9: PlayerSyncScNotify.wait_del_resource_list:type_name -> WaitDelResource
	10, // 10: PlayerSyncScNotify.OHLFBILHPCC:type_name -> ItemList
	11, // 11: PlayerSyncScNotify.equipment_list:type_name -> Equipment
	12, // 12: PlayerSyncScNotify.avatar_sync:type_name -> AvatarSync
	13, // 13: PlayerSyncScNotify.mission_sync:type_name -> MissionSync
	14, // 14: PlayerSyncScNotify.mission_event_sync:type_name -> MissionEventSync
	15, // 15: PlayerSyncScNotify.playerboard_module_sync:type_name -> PlayerBoardModuleSync
	16, // 16: PlayerSyncScNotify.relic_list:type_name -> Relic
	17, // 17: PlayerSyncScNotify.multi_path_avatar_info_list:type_name -> MultiPathAvatarInfo
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_PlayerSyncScNotify_proto_init() }
func file_PlayerSyncScNotify_proto_init() {
	if File_PlayerSyncScNotify_proto != nil {
		return
	}
	file_MissionSync_proto_init()
	file_GroupStatus_proto_init()
	file_MissionEventSync_proto_init()
	file_MGIGPKHDFLH_proto_init()
	file_PlayerBasicInfo_proto_init()
	file_AvatarSync_proto_init()
	file_ItemList_proto_init()
	file_MultiPathAvatarInfo_proto_init()
	file_PlayerBoardModuleSync_proto_init()
	file_Equipment_proto_init()
	file_WaitDelResource_proto_init()
	file_Relic_proto_init()
	file_Quest_proto_init()
	file_BasicModuleSync_proto_init()
	file_DGAHMGJANPL_proto_init()
	file_SectionStatus_proto_init()
	file_Material_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_PlayerSyncScNotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSyncScNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PlayerSyncScNotify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PlayerSyncScNotify_proto_goTypes,
		DependencyIndexes: file_PlayerSyncScNotify_proto_depIdxs,
		MessageInfos:      file_PlayerSyncScNotify_proto_msgTypes,
	}.Build()
	File_PlayerSyncScNotify_proto = out.File
	file_PlayerSyncScNotify_proto_rawDesc = nil
	file_PlayerSyncScNotify_proto_goTypes = nil
	file_PlayerSyncScNotify_proto_depIdxs = nil
}
