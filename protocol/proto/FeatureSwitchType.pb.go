// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: FeatureSwitchType.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeatureSwitchType int32

const (
	FeatureSwitchType_FEATURE_SWITCH_NONE                        FeatureSwitchType = 0
	FeatureSwitchType_FEATURE_SWITCH_SHOP                        FeatureSwitchType = 1
	FeatureSwitchType_FEATURE_SWITCH_LINEUP_NAME                 FeatureSwitchType = 2
	FeatureSwitchType_FEATURE_SWITCH_RECHARGE_SHOP               FeatureSwitchType = 3
	FeatureSwitchType_FEATURE_SWITCH_NICKNAME                    FeatureSwitchType = 4
	FeatureSwitchType_FEATURE_SWITCH_SIGNATURE                   FeatureSwitchType = 5
	FeatureSwitchType_FEATURE_SWITCH_BATTLEPASS                  FeatureSwitchType = 6
	FeatureSwitchType_FEATURE_SWITCH_PUNK_LORD                   FeatureSwitchType = 7
	FeatureSwitchType_FEATURE_SWITCH_MONTHCARD_DAILY             FeatureSwitchType = 8
	FeatureSwitchType_FEATURE_SWITCH_PICTURE_SHARE               FeatureSwitchType = 9
	FeatureSwitchType_FEATURE_SWITCH_ROGUE                       FeatureSwitchType = 10
	FeatureSwitchType_FEATURE_SWITCH_CHALLENGE                   FeatureSwitchType = 11
	FeatureSwitchType_FEATURE_SWITCH_COCOON                      FeatureSwitchType = 12
	FeatureSwitchType_FEATURE_SWITCH_RAID                        FeatureSwitchType = 13
	FeatureSwitchType_FEATURE_SWITCH_MAZE_PLANE_EVENT            FeatureSwitchType = 14
	FeatureSwitchType_FEATURE_SWITCH_ACTIVITY_PANEL              FeatureSwitchType = 15
	FeatureSwitchType_FEATURE_SWITCH_MAILBOX                     FeatureSwitchType = 16
	FeatureSwitchType_FEATURE_SWITCH_QUEST                       FeatureSwitchType = 17
	FeatureSwitchType_FEATURE_SWITCH_GACHA                       FeatureSwitchType = 18
	FeatureSwitchType_FEATURE_SWITCH_CHAT                        FeatureSwitchType = 19
	FeatureSwitchType_FEATURE_SWITCH_MODIFY_FRIEND_ALIAS         FeatureSwitchType = 20
	FeatureSwitchType_FEATURE_SWITCH_USE_ITEM                    FeatureSwitchType = 21
	FeatureSwitchType_FEATURE_SWITCH_ACTIVITY_SCHEDULE           FeatureSwitchType = 22
	FeatureSwitchType_FEATURE_SWITCH_FARM_ELEMENT                FeatureSwitchType = 23
	FeatureSwitchType_FEATURE_SWITCH_ACHIEVEMENT_LEVEL           FeatureSwitchType = 24
	FeatureSwitchType_FEATURE_SWITCH_DAILY_ACTIVE_LEVEL          FeatureSwitchType = 25
	FeatureSwitchType_FEATURE_SWITCH_PLAYER_RETURN               FeatureSwitchType = 26
	FeatureSwitchType_FEATURE_SWITCH_FIRST_SET_NICKNAME          FeatureSwitchType = 27
	FeatureSwitchType_FEATURE_SWITCH_MAIN_MISSION_REWARD         FeatureSwitchType = 28
	FeatureSwitchType_FEATURE_SWITCH_SUB_MISSION_REWARD          FeatureSwitchType = 29
	FeatureSwitchType_FEATURE_SWITCH_PAM_MISSION                 FeatureSwitchType = 30
	FeatureSwitchType_FEATURE_SWITCH_DAILY_MISSION               FeatureSwitchType = 31
	FeatureSwitchType_FEATURE_SWITCH_DESTROY_ITEM                FeatureSwitchType = 32
	FeatureSwitchType_FEATURE_SWITCH_CONSUME_ITEM_TURN           FeatureSwitchType = 33
	FeatureSwitchType_FEATURE_SWITCH_ROGUE_MODIFIER              FeatureSwitchType = 34
	FeatureSwitchType_FEATURE_SWITCH_CHESS_ROGUE                 FeatureSwitchType = 35
	FeatureSwitchType_FEATURE_SWITCH_CHESS_ROGUE_BOARD           FeatureSwitchType = 36
	FeatureSwitchType_FEATURE_SWITCH_ROLL_SHOP                   FeatureSwitchType = 37
	FeatureSwitchType_FEATURE_SWITCH_H5_RETURN                   FeatureSwitchType = 38
	FeatureSwitchType_FEATURE_SWITCH_OFFERING                    FeatureSwitchType = 39
	FeatureSwitchType_FEATURE_SWITCH_SERVER_RED_POINT            FeatureSwitchType = 40
	FeatureSwitchType_FEATURE_SWITCH_MONOPOLY_OPTION_RATIO       FeatureSwitchType = 41
	FeatureSwitchType_FEATURE_SWITCH_MONOPOLY_GET_RAFFLE_TICKET  FeatureSwitchType = 42
	FeatureSwitchType_FEATURE_SWITCH_MONOPOLY_TAKE_RAFFLE_REWARD FeatureSwitchType = 43
	FeatureSwitchType_FEATURE_SWITCH_CHALLENGE_RECOMMEND_LINEUP  FeatureSwitchType = 44
	FeatureSwitchType_FEATURE_SWITCH_PSN_MEMBER_SHIP_CHECK       FeatureSwitchType = 45
	FeatureSwitchType_FEATURE_SWITCH_PLAYER_BOARD_DEVELOPMENT    FeatureSwitchType = 46
	FeatureSwitchType_FEATURE_SWITCH_PVP                         FeatureSwitchType = 47
	FeatureSwitchType_FEATURE_SWITCH_ROGUE_MODE                  FeatureSwitchType = 48
	FeatureSwitchType_FEATURE_SWITCH_ROGUE_TOURN_UGC             FeatureSwitchType = 49
	FeatureSwitchType_FEATURE_SWITCH_RELIC_FILTER_PLAN_NAME      FeatureSwitchType = 50
	FeatureSwitchType_FEATURE_SWITCH_MAZE_ITEM_USE_BUFF_DROP     FeatureSwitchType = 51
	FeatureSwitchType_FEATURE_SWITCH_RED_DOT                     FeatureSwitchType = 52
	FeatureSwitchType_FEATURE_SWITCH_GAME_STATE_SERVICE          FeatureSwitchType = 53
)

// Enum value maps for FeatureSwitchType.
var (
	FeatureSwitchType_name = map[int32]string{
		0:  "FEATURE_SWITCH_NONE",
		1:  "FEATURE_SWITCH_SHOP",
		2:  "FEATURE_SWITCH_LINEUP_NAME",
		3:  "FEATURE_SWITCH_RECHARGE_SHOP",
		4:  "FEATURE_SWITCH_NICKNAME",
		5:  "FEATURE_SWITCH_SIGNATURE",
		6:  "FEATURE_SWITCH_BATTLEPASS",
		7:  "FEATURE_SWITCH_PUNK_LORD",
		8:  "FEATURE_SWITCH_MONTHCARD_DAILY",
		9:  "FEATURE_SWITCH_PICTURE_SHARE",
		10: "FEATURE_SWITCH_ROGUE",
		11: "FEATURE_SWITCH_CHALLENGE",
		12: "FEATURE_SWITCH_COCOON",
		13: "FEATURE_SWITCH_RAID",
		14: "FEATURE_SWITCH_MAZE_PLANE_EVENT",
		15: "FEATURE_SWITCH_ACTIVITY_PANEL",
		16: "FEATURE_SWITCH_MAILBOX",
		17: "FEATURE_SWITCH_QUEST",
		18: "FEATURE_SWITCH_GACHA",
		19: "FEATURE_SWITCH_CHAT",
		20: "FEATURE_SWITCH_MODIFY_FRIEND_ALIAS",
		21: "FEATURE_SWITCH_USE_ITEM",
		22: "FEATURE_SWITCH_ACTIVITY_SCHEDULE",
		23: "FEATURE_SWITCH_FARM_ELEMENT",
		24: "FEATURE_SWITCH_ACHIEVEMENT_LEVEL",
		25: "FEATURE_SWITCH_DAILY_ACTIVE_LEVEL",
		26: "FEATURE_SWITCH_PLAYER_RETURN",
		27: "FEATURE_SWITCH_FIRST_SET_NICKNAME",
		28: "FEATURE_SWITCH_MAIN_MISSION_REWARD",
		29: "FEATURE_SWITCH_SUB_MISSION_REWARD",
		30: "FEATURE_SWITCH_PAM_MISSION",
		31: "FEATURE_SWITCH_DAILY_MISSION",
		32: "FEATURE_SWITCH_DESTROY_ITEM",
		33: "FEATURE_SWITCH_CONSUME_ITEM_TURN",
		34: "FEATURE_SWITCH_ROGUE_MODIFIER",
		35: "FEATURE_SWITCH_CHESS_ROGUE",
		36: "FEATURE_SWITCH_CHESS_ROGUE_BOARD",
		37: "FEATURE_SWITCH_ROLL_SHOP",
		38: "FEATURE_SWITCH_H5_RETURN",
		39: "FEATURE_SWITCH_OFFERING",
		40: "FEATURE_SWITCH_SERVER_RED_POINT",
		41: "FEATURE_SWITCH_MONOPOLY_OPTION_RATIO",
		42: "FEATURE_SWITCH_MONOPOLY_GET_RAFFLE_TICKET",
		43: "FEATURE_SWITCH_MONOPOLY_TAKE_RAFFLE_REWARD",
		44: "FEATURE_SWITCH_CHALLENGE_RECOMMEND_LINEUP",
		45: "FEATURE_SWITCH_PSN_MEMBER_SHIP_CHECK",
		46: "FEATURE_SWITCH_PLAYER_BOARD_DEVELOPMENT",
		47: "FEATURE_SWITCH_PVP",
		48: "FEATURE_SWITCH_ROGUE_MODE",
		49: "FEATURE_SWITCH_ROGUE_TOURN_UGC",
		50: "FEATURE_SWITCH_RELIC_FILTER_PLAN_NAME",
		51: "FEATURE_SWITCH_MAZE_ITEM_USE_BUFF_DROP",
		52: "FEATURE_SWITCH_RED_DOT",
		53: "FEATURE_SWITCH_GAME_STATE_SERVICE",
	}
	FeatureSwitchType_value = map[string]int32{
		"FEATURE_SWITCH_NONE":                        0,
		"FEATURE_SWITCH_SHOP":                        1,
		"FEATURE_SWITCH_LINEUP_NAME":                 2,
		"FEATURE_SWITCH_RECHARGE_SHOP":               3,
		"FEATURE_SWITCH_NICKNAME":                    4,
		"FEATURE_SWITCH_SIGNATURE":                   5,
		"FEATURE_SWITCH_BATTLEPASS":                  6,
		"FEATURE_SWITCH_PUNK_LORD":                   7,
		"FEATURE_SWITCH_MONTHCARD_DAILY":             8,
		"FEATURE_SWITCH_PICTURE_SHARE":               9,
		"FEATURE_SWITCH_ROGUE":                       10,
		"FEATURE_SWITCH_CHALLENGE":                   11,
		"FEATURE_SWITCH_COCOON":                      12,
		"FEATURE_SWITCH_RAID":                        13,
		"FEATURE_SWITCH_MAZE_PLANE_EVENT":            14,
		"FEATURE_SWITCH_ACTIVITY_PANEL":              15,
		"FEATURE_SWITCH_MAILBOX":                     16,
		"FEATURE_SWITCH_QUEST":                       17,
		"FEATURE_SWITCH_GACHA":                       18,
		"FEATURE_SWITCH_CHAT":                        19,
		"FEATURE_SWITCH_MODIFY_FRIEND_ALIAS":         20,
		"FEATURE_SWITCH_USE_ITEM":                    21,
		"FEATURE_SWITCH_ACTIVITY_SCHEDULE":           22,
		"FEATURE_SWITCH_FARM_ELEMENT":                23,
		"FEATURE_SWITCH_ACHIEVEMENT_LEVEL":           24,
		"FEATURE_SWITCH_DAILY_ACTIVE_LEVEL":          25,
		"FEATURE_SWITCH_PLAYER_RETURN":               26,
		"FEATURE_SWITCH_FIRST_SET_NICKNAME":          27,
		"FEATURE_SWITCH_MAIN_MISSION_REWARD":         28,
		"FEATURE_SWITCH_SUB_MISSION_REWARD":          29,
		"FEATURE_SWITCH_PAM_MISSION":                 30,
		"FEATURE_SWITCH_DAILY_MISSION":               31,
		"FEATURE_SWITCH_DESTROY_ITEM":                32,
		"FEATURE_SWITCH_CONSUME_ITEM_TURN":           33,
		"FEATURE_SWITCH_ROGUE_MODIFIER":              34,
		"FEATURE_SWITCH_CHESS_ROGUE":                 35,
		"FEATURE_SWITCH_CHESS_ROGUE_BOARD":           36,
		"FEATURE_SWITCH_ROLL_SHOP":                   37,
		"FEATURE_SWITCH_H5_RETURN":                   38,
		"FEATURE_SWITCH_OFFERING":                    39,
		"FEATURE_SWITCH_SERVER_RED_POINT":            40,
		"FEATURE_SWITCH_MONOPOLY_OPTION_RATIO":       41,
		"FEATURE_SWITCH_MONOPOLY_GET_RAFFLE_TICKET":  42,
		"FEATURE_SWITCH_MONOPOLY_TAKE_RAFFLE_REWARD": 43,
		"FEATURE_SWITCH_CHALLENGE_RECOMMEND_LINEUP":  44,
		"FEATURE_SWITCH_PSN_MEMBER_SHIP_CHECK":       45,
		"FEATURE_SWITCH_PLAYER_BOARD_DEVELOPMENT":    46,
		"FEATURE_SWITCH_PVP":                         47,
		"FEATURE_SWITCH_ROGUE_MODE":                  48,
		"FEATURE_SWITCH_ROGUE_TOURN_UGC":             49,
		"FEATURE_SWITCH_RELIC_FILTER_PLAN_NAME":      50,
		"FEATURE_SWITCH_MAZE_ITEM_USE_BUFF_DROP":     51,
		"FEATURE_SWITCH_RED_DOT":                     52,
		"FEATURE_SWITCH_GAME_STATE_SERVICE":          53,
	}
)

func (x FeatureSwitchType) Enum() *FeatureSwitchType {
	p := new(FeatureSwitchType)
	*p = x
	return p
}

func (x FeatureSwitchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureSwitchType) Descriptor() protoreflect.EnumDescriptor {
	return file_FeatureSwitchType_proto_enumTypes[0].Descriptor()
}

func (FeatureSwitchType) Type() protoreflect.EnumType {
	return &file_FeatureSwitchType_proto_enumTypes[0]
}

func (x FeatureSwitchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureSwitchType.Descriptor instead.
func (FeatureSwitchType) EnumDescriptor() ([]byte, []int) {
	return file_FeatureSwitchType_proto_rawDescGZIP(), []int{0}
}

var File_FeatureSwitchType_proto protoreflect.FileDescriptor

var file_FeatureSwitchType_proto_rawDesc = []byte{
	0x0a, 0x17, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xc7, 0x0e, 0x0a, 0x11, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10,
	0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x55, 0x50, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x02, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x48, 0x4f,
	0x50, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4e, 0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04,
	0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x05, 0x12, 0x1d,
	0x0a, 0x19, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x50, 0x41, 0x53, 0x53, 0x10, 0x06, 0x12, 0x1c, 0x0a,
	0x18, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x50, 0x55, 0x4e, 0x4b, 0x5f, 0x4c, 0x4f, 0x52, 0x44, 0x10, 0x07, 0x12, 0x22, 0x0a, 0x1e, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x4f,
	0x4e, 0x54, 0x48, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x10, 0x08, 0x12,
	0x20, 0x0a, 0x1c, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10,
	0x09, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x52, 0x4f, 0x47, 0x55, 0x45, 0x10, 0x0a, 0x12, 0x1c, 0x0a, 0x18, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x48,
	0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x4f, 0x43, 0x4f,
	0x4f, 0x4e, 0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x41, 0x49, 0x44, 0x10, 0x0d, 0x12, 0x23, 0x0a,
	0x1f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x4d, 0x41, 0x5a, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x10, 0x0e, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57,
	0x49, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x41,
	0x4e, 0x45, 0x4c, 0x10, 0x0f, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x42, 0x4f, 0x58, 0x10,
	0x10, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x11, 0x12, 0x18, 0x0a, 0x14, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x41,
	0x43, 0x48, 0x41, 0x10, 0x12, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x13, 0x12, 0x26,
	0x0a, 0x22, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x41,
	0x4c, 0x49, 0x41, 0x53, 0x10, 0x14, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x10, 0x15, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x16, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x46, 0x41, 0x52, 0x4d,
	0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x17, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x43, 0x48,
	0x49, 0x45, 0x56, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x18,
	0x12, 0x25, 0x0a, 0x21, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f,
	0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0x19, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x1a, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x46, 0x49, 0x52, 0x53,
	0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4e, 0x49, 0x43, 0x4b, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x1b,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x1c, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x1d, 0x12,
	0x1e, 0x0a, 0x1a, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x50, 0x41, 0x4d, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x1e, 0x12,
	0x20, 0x0a, 0x1c, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x1f, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x10, 0x20, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57,
	0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x21, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x4f, 0x47, 0x55, 0x45,
	0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x52, 0x10, 0x22, 0x12, 0x1e, 0x0a, 0x1a, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x48,
	0x45, 0x53, 0x53, 0x5f, 0x52, 0x4f, 0x47, 0x55, 0x45, 0x10, 0x23, 0x12, 0x24, 0x0a, 0x20, 0x46,
	0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x48,
	0x45, 0x53, 0x53, 0x5f, 0x52, 0x4f, 0x47, 0x55, 0x45, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x10,
	0x24, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10, 0x25, 0x12,
	0x1c, 0x0a, 0x18, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x48, 0x35, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x26, 0x12, 0x1b, 0x0a,
	0x17, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x4f, 0x46, 0x46, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x27, 0x12, 0x23, 0x0a, 0x1f, 0x46, 0x45,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x28, 0x12,
	0x28, 0x0a, 0x24, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x4d, 0x4f, 0x4e, 0x4f, 0x50, 0x4f, 0x4c, 0x59, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x10, 0x29, 0x12, 0x2d, 0x0a, 0x29, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x4e, 0x4f,
	0x50, 0x4f, 0x4c, 0x59, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x41, 0x46, 0x46, 0x4c, 0x45, 0x5f,
	0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x2a, 0x12, 0x2e, 0x0a, 0x2a, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x4e, 0x4f, 0x50,
	0x4f, 0x4c, 0x59, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x52, 0x41, 0x46, 0x46, 0x4c, 0x45, 0x5f,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x2b, 0x12, 0x2d, 0x0a, 0x29, 0x46, 0x45, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c,
	0x45, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x4c,
	0x49, 0x4e, 0x45, 0x55, 0x50, 0x10, 0x2c, 0x12, 0x28, 0x0a, 0x24, 0x46, 0x45, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x53, 0x4e, 0x5f, 0x4d, 0x45,
	0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10,
	0x2d, 0x12, 0x2b, 0x0a, 0x27, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44,
	0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x2e, 0x12, 0x16,
	0x0a, 0x12, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x5f, 0x50, 0x56, 0x50, 0x10, 0x2f, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x4f, 0x47, 0x55, 0x45, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x10, 0x30, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x4f, 0x47, 0x55, 0x45, 0x5f, 0x54, 0x4f,
	0x55, 0x52, 0x4e, 0x5f, 0x55, 0x47, 0x43, 0x10, 0x31, 0x12, 0x29, 0x0a, 0x25, 0x46, 0x45, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x4c, 0x49,
	0x43, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x32, 0x12, 0x2a, 0x0a, 0x26, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x4d, 0x41, 0x5a, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x55, 0x53, 0x45, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x33,
	0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x52, 0x45, 0x44, 0x5f, 0x44, 0x4f, 0x54, 0x10, 0x34, 0x12, 0x25, 0x0a, 0x21,
	0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0x35, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FeatureSwitchType_proto_rawDescOnce sync.Once
	file_FeatureSwitchType_proto_rawDescData = file_FeatureSwitchType_proto_rawDesc
)

func file_FeatureSwitchType_proto_rawDescGZIP() []byte {
	file_FeatureSwitchType_proto_rawDescOnce.Do(func() {
		file_FeatureSwitchType_proto_rawDescData = protoimpl.X.CompressGZIP(file_FeatureSwitchType_proto_rawDescData)
	})
	return file_FeatureSwitchType_proto_rawDescData
}

var file_FeatureSwitchType_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_FeatureSwitchType_proto_goTypes = []interface{}{
	(FeatureSwitchType)(0), // 0: FeatureSwitchType
}
var file_FeatureSwitchType_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_FeatureSwitchType_proto_init() }
func file_FeatureSwitchType_proto_init() {
	if File_FeatureSwitchType_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FeatureSwitchType_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FeatureSwitchType_proto_goTypes,
		DependencyIndexes: file_FeatureSwitchType_proto_depIdxs,
		EnumInfos:         file_FeatureSwitchType_proto_enumTypes,
	}.Build()
	File_FeatureSwitchType_proto = out.File
	file_FeatureSwitchType_proto_rawDesc = nil
	file_FeatureSwitchType_proto_goTypes = nil
	file_FeatureSwitchType_proto_depIdxs = nil
}
