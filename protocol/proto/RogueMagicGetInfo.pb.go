// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: RogueMagicGetInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RogueMagicGetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnlockStyleTypeList       []uint32                    `protobuf:"varint,13,rep,packed,name=unlock_style_type_list,json=unlockStyleTypeList,proto3" json:"unlock_style_type_list,omitempty"`
	StoryInfo                 *RogueMagicStoryInfo        `protobuf:"bytes,10,opt,name=story_info,json=storyInfo,proto3" json:"story_info,omitempty"`
	RogueMagicUnitInfoList    []*RogueMagicUnitInfo       `protobuf:"bytes,12,rep,name=rogue_magic_unit_info_list,json=rogueMagicUnitInfoList,proto3" json:"rogue_magic_unit_info_list,omitempty"`
	RogueTournAreaInfo        []*RogueMagicAreaInfo       `protobuf:"bytes,9,rep,name=rogue_tourn_area_info,json=rogueTournAreaInfo,proto3" json:"rogue_tourn_area_info,omitempty"`
	RogueMagicTalentInfo      *RogueMagicTalentInfo       `protobuf:"bytes,6,opt,name=rogue_magic_talent_info,json=rogueMagicTalentInfo,proto3" json:"rogue_magic_talent_info,omitempty"`
	RogueMagicScepterInfoList []*RogueMagicScepterInfo    `protobuf:"bytes,3,rep,name=rogue_magic_scepter_info_list,json=rogueMagicScepterInfoList,proto3" json:"rogue_magic_scepter_info_list,omitempty"`
	RogueTournDifficultyInfo  []*RogueMagicDifficultyInfo `protobuf:"bytes,7,rep,name=rogue_tourn_difficulty_info,json=rogueTournDifficultyInfo,proto3" json:"rogue_tourn_difficulty_info,omitempty"`
}

func (x *RogueMagicGetInfo) Reset() {
	*x = RogueMagicGetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RogueMagicGetInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RogueMagicGetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RogueMagicGetInfo) ProtoMessage() {}

func (x *RogueMagicGetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_RogueMagicGetInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RogueMagicGetInfo.ProtoReflect.Descriptor instead.
func (*RogueMagicGetInfo) Descriptor() ([]byte, []int) {
	return file_RogueMagicGetInfo_proto_rawDescGZIP(), []int{0}
}

func (x *RogueMagicGetInfo) GetUnlockStyleTypeList() []uint32 {
	if x != nil {
		return x.UnlockStyleTypeList
	}
	return nil
}

func (x *RogueMagicGetInfo) GetStoryInfo() *RogueMagicStoryInfo {
	if x != nil {
		return x.StoryInfo
	}
	return nil
}

func (x *RogueMagicGetInfo) GetRogueMagicUnitInfoList() []*RogueMagicUnitInfo {
	if x != nil {
		return x.RogueMagicUnitInfoList
	}
	return nil
}

func (x *RogueMagicGetInfo) GetRogueTournAreaInfo() []*RogueMagicAreaInfo {
	if x != nil {
		return x.RogueTournAreaInfo
	}
	return nil
}

func (x *RogueMagicGetInfo) GetRogueMagicTalentInfo() *RogueMagicTalentInfo {
	if x != nil {
		return x.RogueMagicTalentInfo
	}
	return nil
}

func (x *RogueMagicGetInfo) GetRogueMagicScepterInfoList() []*RogueMagicScepterInfo {
	if x != nil {
		return x.RogueMagicScepterInfoList
	}
	return nil
}

func (x *RogueMagicGetInfo) GetRogueTournDifficultyInfo() []*RogueMagicDifficultyInfo {
	if x != nil {
		return x.RogueTournDifficultyInfo
	}
	return nil
}

var File_RogueMagicGetInfo_proto protoreflect.FileDescriptor

var file_RogueMagicGetInfo_proto_rawDesc = []byte{
	0x0a, 0x17, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67,
	0x69, 0x63, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61,
	0x67, 0x69, 0x63, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61,
	0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x98, 0x04, 0x0a, 0x11, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4f, 0x0a, 0x1a, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67,
	0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x16, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x15, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x72,
	0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x17, 0x72, 0x6f,
	0x67, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x14, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x54, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x1d, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x5f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x19, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61,
	0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x58, 0x0a, 0x1b, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x72,
	0x6e, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d,
	0x61, 0x67, 0x69, 0x63, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x18, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x44, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x2e, 0x5a, 0x0e,
	0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02,
	0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_RogueMagicGetInfo_proto_rawDescOnce sync.Once
	file_RogueMagicGetInfo_proto_rawDescData = file_RogueMagicGetInfo_proto_rawDesc
)

func file_RogueMagicGetInfo_proto_rawDescGZIP() []byte {
	file_RogueMagicGetInfo_proto_rawDescOnce.Do(func() {
		file_RogueMagicGetInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_RogueMagicGetInfo_proto_rawDescData)
	})
	return file_RogueMagicGetInfo_proto_rawDescData
}

var file_RogueMagicGetInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_RogueMagicGetInfo_proto_goTypes = []interface{}{
	(*RogueMagicGetInfo)(nil),        // 0: RogueMagicGetInfo
	(*RogueMagicStoryInfo)(nil),      // 1: RogueMagicStoryInfo
	(*RogueMagicUnitInfo)(nil),       // 2: RogueMagicUnitInfo
	(*RogueMagicAreaInfo)(nil),       // 3: RogueMagicAreaInfo
	(*RogueMagicTalentInfo)(nil),     // 4: RogueMagicTalentInfo
	(*RogueMagicScepterInfo)(nil),    // 5: RogueMagicScepterInfo
	(*RogueMagicDifficultyInfo)(nil), // 6: RogueMagicDifficultyInfo
}
var file_RogueMagicGetInfo_proto_depIdxs = []int32{
	1, // 0: RogueMagicGetInfo.story_info:type_name -> RogueMagicStoryInfo
	2, // 1: RogueMagicGetInfo.rogue_magic_unit_info_list:type_name -> RogueMagicUnitInfo
	3, // 2: RogueMagicGetInfo.rogue_tourn_area_info:type_name -> RogueMagicAreaInfo
	4, // 3: RogueMagicGetInfo.rogue_magic_talent_info:type_name -> RogueMagicTalentInfo
	5, // 4: RogueMagicGetInfo.rogue_magic_scepter_info_list:type_name -> RogueMagicScepterInfo
	6, // 5: RogueMagicGetInfo.rogue_tourn_difficulty_info:type_name -> RogueMagicDifficultyInfo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_RogueMagicGetInfo_proto_init() }
func file_RogueMagicGetInfo_proto_init() {
	if File_RogueMagicGetInfo_proto != nil {
		return
	}
	file_RogueMagicScepterInfo_proto_init()
	file_RogueMagicTalentInfo_proto_init()
	file_RogueMagicAreaInfo_proto_init()
	file_RogueMagicStoryInfo_proto_init()
	file_RogueMagicDifficultyInfo_proto_init()
	file_RogueMagicUnitInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_RogueMagicGetInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RogueMagicGetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_RogueMagicGetInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_RogueMagicGetInfo_proto_goTypes,
		DependencyIndexes: file_RogueMagicGetInfo_proto_depIdxs,
		MessageInfos:      file_RogueMagicGetInfo_proto_msgTypes,
	}.Build()
	File_RogueMagicGetInfo_proto = out.File
	file_RogueMagicGetInfo_proto_rawDesc = nil
	file_RogueMagicGetInfo_proto_goTypes = nil
	file_RogueMagicGetInfo_proto_depIdxs = nil
}
