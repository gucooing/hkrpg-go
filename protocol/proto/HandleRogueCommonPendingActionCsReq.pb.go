// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: HandleRogueCommonPendingActionCsReq.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleRogueCommonPendingActionCsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueLocation uint32 `protobuf:"varint,7,opt,name=queue_location,json=queueLocation,proto3" json:"queue_location,omitempty"`
	// Types that are assignable to Action:
	//
	//	*HandleRogueCommonPendingActionCsReq_BuffSelectResult
	//	*HandleRogueCommonPendingActionCsReq_DAEOPJPFMJB
	//	*HandleRogueCommonPendingActionCsReq_ODKGPNOLDDE
	//	*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult
	//	*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult
	//	*HandleRogueCommonPendingActionCsReq_MiracleSelectResult
	//	*HandleRogueCommonPendingActionCsReq_EIOGOKDHIBK
	//	*HandleRogueCommonPendingActionCsReq_LAECPBJHHEK
	//	*HandleRogueCommonPendingActionCsReq_IACJBEMCNOM
	//	*HandleRogueCommonPendingActionCsReq_CMEGKLKAIML
	//	*HandleRogueCommonPendingActionCsReq_KNGIENGLEAO
	//	*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult
	//	*HandleRogueCommonPendingActionCsReq_BonusSelectResult
	//	*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult
	//	*HandleRogueCommonPendingActionCsReq_IALGPFOGKFM
	//	*HandleRogueCommonPendingActionCsReq_EFDMCNLOLMG
	//	*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult
	//	*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult
	//	*HandleRogueCommonPendingActionCsReq_ScepterSelectResult
	//	*HandleRogueCommonPendingActionCsReq_PEJBFLMNKHL
	//	*HandleRogueCommonPendingActionCsReq_CEGPGGAGLGH
	//	*HandleRogueCommonPendingActionCsReq_LHDCNDBHHPK
	//	*HandleRogueCommonPendingActionCsReq_INOPMKFAOJF
	//	*HandleRogueCommonPendingActionCsReq_AKCKPPODDOH
	//	*HandleRogueCommonPendingActionCsReq_JBLCAKOPEPP
	//	*HandleRogueCommonPendingActionCsReq_NGJMHHHGCEJ
	//	*HandleRogueCommonPendingActionCsReq_ADPJKPJMLFB
	//	*HandleRogueCommonPendingActionCsReq_FHBKLEGIFPN
	//	*HandleRogueCommonPendingActionCsReq_IAFKAEMDMMB
	Action isHandleRogueCommonPendingActionCsReq_Action `protobuf_oneof:"action"`
}

func (x *HandleRogueCommonPendingActionCsReq) Reset() {
	*x = HandleRogueCommonPendingActionCsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRogueCommonPendingActionCsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRogueCommonPendingActionCsReq) ProtoMessage() {}

func (x *HandleRogueCommonPendingActionCsReq) ProtoReflect() protoreflect.Message {
	mi := &file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRogueCommonPendingActionCsReq.ProtoReflect.Descriptor instead.
func (*HandleRogueCommonPendingActionCsReq) Descriptor() ([]byte, []int) {
	return file_HandleRogueCommonPendingActionCsReq_proto_rawDescGZIP(), []int{0}
}

func (x *HandleRogueCommonPendingActionCsReq) GetQueueLocation() uint32 {
	if x != nil {
		return x.QueueLocation
	}
	return 0
}

func (m *HandleRogueCommonPendingActionCsReq) GetAction() isHandleRogueCommonPendingActionCsReq_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBuffSelectResult() *RogueBuffSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BuffSelectResult); ok {
		return x.BuffSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetDAEOPJPFMJB() *IDCKJKFFECM {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_DAEOPJPFMJB); ok {
		return x.DAEOPJPFMJB
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetODKGPNOLDDE() *BFAKIGEHNJC {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_ODKGPNOLDDE); ok {
		return x.ODKGPNOLDDE
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBuffRerollSelectResult() *RogueBuffRerollResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult); ok {
		return x.BuffRerollSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBuffReforgeSelectResult() *RogueBuffReforgeSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult); ok {
		return x.BuffReforgeSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetMiracleSelectResult() *RogueMiracleSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_MiracleSelectResult); ok {
		return x.MiracleSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetEIOGOKDHIBK() *MOBLEOMKCCG {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_EIOGOKDHIBK); ok {
		return x.EIOGOKDHIBK
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetLAECPBJHHEK() *CBHMHAPCJGF {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_LAECPBJHHEK); ok {
		return x.LAECPBJHHEK
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetIACJBEMCNOM() *JGFFNIFGPDA {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_IACJBEMCNOM); ok {
		return x.IACJBEMCNOM
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetCMEGKLKAIML() *CLADKMNEGFM {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_CMEGKLKAIML); ok {
		return x.CMEGKLKAIML
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetKNGIENGLEAO() *HBNFICIFNNA {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_KNGIENGLEAO); ok {
		return x.KNGIENGLEAO
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetHexAvatarSelectResult() *RogueHexAvatarSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult); ok {
		return x.HexAvatarSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBonusSelectResult() *RogueBonusSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BonusSelectResult); ok {
		return x.BonusSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetRogueTournFormulaResult() *RogueTournFormulaResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult); ok {
		return x.RogueTournFormulaResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetIALGPFOGKFM() *EBIHFHNFMGA {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_IALGPFOGKFM); ok {
		return x.IALGPFOGKFM
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetEFDMCNLOLMG() *MGMINPOEGHH {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_EFDMCNLOLMG); ok {
		return x.EFDMCNLOLMG
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetReforgeMiracleSelectResult() *RogueReforgeFormulaSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult); ok {
		return x.ReforgeMiracleSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetMagicUnitSelectResult() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult); ok {
		return x.MagicUnitSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetScepterSelectResult() *RogueMagicScepterSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_ScepterSelectResult); ok {
		return x.ScepterSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetPEJBFLMNKHL() *NMKOHGOCLGK {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_PEJBFLMNKHL); ok {
		return x.PEJBFLMNKHL
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetCEGPGGAGLGH() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_CEGPGGAGLGH); ok {
		return x.CEGPGGAGLGH
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetLHDCNDBHHPK() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_LHDCNDBHHPK); ok {
		return x.LHDCNDBHHPK
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetINOPMKFAOJF() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_INOPMKFAOJF); ok {
		return x.INOPMKFAOJF
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetAKCKPPODDOH() *OAJJGNAECAF {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_AKCKPPODDOH); ok {
		return x.AKCKPPODDOH
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetJBLCAKOPEPP() *OAJJGNAECAF {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_JBLCAKOPEPP); ok {
		return x.JBLCAKOPEPP
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetNGJMHHHGCEJ() *OAJJGNAECAF {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_NGJMHHHGCEJ); ok {
		return x.NGJMHHHGCEJ
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetADPJKPJMLFB() *KOMANBBINLJ {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_ADPJKPJMLFB); ok {
		return x.ADPJKPJMLFB
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetFHBKLEGIFPN() *PJNPLPEBKHP {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_FHBKLEGIFPN); ok {
		return x.FHBKLEGIFPN
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetIAFKAEMDMMB() *PNMAMOGAMKP {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_IAFKAEMDMMB); ok {
		return x.IAFKAEMDMMB
	}
	return nil
}

type isHandleRogueCommonPendingActionCsReq_Action interface {
	isHandleRogueCommonPendingActionCsReq_Action()
}

type HandleRogueCommonPendingActionCsReq_BuffSelectResult struct {
	BuffSelectResult *RogueBuffSelectResult `protobuf:"bytes,1840,opt,name=buff_select_result,json=buffSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_DAEOPJPFMJB struct {
	DAEOPJPFMJB *IDCKJKFFECM `protobuf:"bytes,602,opt,name=DAEOPJPFMJB,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_ODKGPNOLDDE struct {
	ODKGPNOLDDE *BFAKIGEHNJC `protobuf:"bytes,267,opt,name=ODKGPNOLDDE,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult struct {
	BuffRerollSelectResult *RogueBuffRerollResult `protobuf:"bytes,301,opt,name=buff_reroll_select_result,json=buffRerollSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult struct {
	BuffReforgeSelectResult *RogueBuffReforgeSelectResult `protobuf:"bytes,954,opt,name=buff_reforge_select_result,json=buffReforgeSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_MiracleSelectResult struct {
	MiracleSelectResult *RogueMiracleSelectResult `protobuf:"bytes,1880,opt,name=miracle_select_result,json=miracleSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_EIOGOKDHIBK struct {
	EIOGOKDHIBK *MOBLEOMKCCG `protobuf:"bytes,1388,opt,name=EIOGOKDHIBK,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_LAECPBJHHEK struct {
	LAECPBJHHEK *CBHMHAPCJGF `protobuf:"bytes,717,opt,name=LAECPBJHHEK,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_IACJBEMCNOM struct {
	IACJBEMCNOM *JGFFNIFGPDA `protobuf:"bytes,1988,opt,name=IACJBEMCNOM,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_CMEGKLKAIML struct {
	CMEGKLKAIML *CLADKMNEGFM `protobuf:"bytes,380,opt,name=CMEGKLKAIML,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_KNGIENGLEAO struct {
	KNGIENGLEAO *HBNFICIFNNA `protobuf:"bytes,791,opt,name=KNGIENGLEAO,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult struct {
	HexAvatarSelectResult *RogueHexAvatarSelectResult `protobuf:"bytes,942,opt,name=hex_avatar_select_result,json=hexAvatarSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BonusSelectResult struct {
	BonusSelectResult *RogueBonusSelectResult `protobuf:"bytes,1380,opt,name=bonus_select_result,json=bonusSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult struct {
	RogueTournFormulaResult *RogueTournFormulaResult `protobuf:"bytes,946,opt,name=rogue_tourn_formula_result,json=rogueTournFormulaResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_IALGPFOGKFM struct {
	IALGPFOGKFM *EBIHFHNFMGA `protobuf:"bytes,339,opt,name=IALGPFOGKFM,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_EFDMCNLOLMG struct {
	EFDMCNLOLMG *MGMINPOEGHH `protobuf:"bytes,583,opt,name=EFDMCNLOLMG,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult struct {
	ReforgeMiracleSelectResult *RogueReforgeFormulaSelectResult `protobuf:"bytes,597,opt,name=reforge_miracle_select_result,json=reforgeMiracleSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult struct {
	MagicUnitSelectResult *RogueMagicUnitSelectResult `protobuf:"bytes,786,opt,name=magic_unit_select_result,json=magicUnitSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_ScepterSelectResult struct {
	ScepterSelectResult *RogueMagicScepterSelectResult `protobuf:"bytes,1226,opt,name=scepter_select_result,json=scepterSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_PEJBFLMNKHL struct {
	PEJBFLMNKHL *NMKOHGOCLGK `protobuf:"bytes,1489,opt,name=PEJBFLMNKHL,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_CEGPGGAGLGH struct {
	CEGPGGAGLGH *RogueMagicUnitSelectResult `protobuf:"bytes,1034,opt,name=CEGPGGAGLGH,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_LHDCNDBHHPK struct {
	LHDCNDBHHPK *RogueMagicUnitSelectResult `protobuf:"bytes,779,opt,name=LHDCNDBHHPK,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_INOPMKFAOJF struct {
	INOPMKFAOJF *RogueMagicUnitSelectResult `protobuf:"bytes,400,opt,name=INOPMKFAOJF,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_AKCKPPODDOH struct {
	AKCKPPODDOH *OAJJGNAECAF `protobuf:"bytes,264,opt,name=AKCKPPODDOH,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_JBLCAKOPEPP struct {
	JBLCAKOPEPP *OAJJGNAECAF `protobuf:"bytes,1650,opt,name=JBLCAKOPEPP,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_NGJMHHHGCEJ struct {
	NGJMHHHGCEJ *OAJJGNAECAF `protobuf:"bytes,1297,opt,name=NGJMHHHGCEJ,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_ADPJKPJMLFB struct {
	ADPJKPJMLFB *KOMANBBINLJ `protobuf:"bytes,1105,opt,name=ADPJKPJMLFB,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_FHBKLEGIFPN struct {
	FHBKLEGIFPN *PJNPLPEBKHP `protobuf:"bytes,201106,opt,name=FHBKLEGIFPN,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_IAFKAEMDMMB struct {
	IAFKAEMDMMB *PNMAMOGAMKP `protobuf:"bytes,123239,opt,name=IAFKAEMDMMB,proto3,oneof"`
}

func (*HandleRogueCommonPendingActionCsReq_BuffSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_DAEOPJPFMJB) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_ODKGPNOLDDE) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_MiracleSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_EIOGOKDHIBK) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_LAECPBJHHEK) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_IACJBEMCNOM) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_CMEGKLKAIML) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_KNGIENGLEAO) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BonusSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_IALGPFOGKFM) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_EFDMCNLOLMG) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_ScepterSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_PEJBFLMNKHL) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_CEGPGGAGLGH) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_LHDCNDBHHPK) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_INOPMKFAOJF) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_AKCKPPODDOH) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_JBLCAKOPEPP) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_NGJMHHHGCEJ) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_ADPJKPJMLFB) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_FHBKLEGIFPN) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_IAFKAEMDMMB) isHandleRogueCommonPendingActionCsReq_Action() {
}

var File_HandleRogueCommonPendingActionCsReq_proto protoreflect.FileDescriptor

var file_HandleRogueCommonPendingActionCsReq_proto_rawDesc = []byte{
	0x0a, 0x29, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x4e, 0x4d,
	0x41, 0x4d, 0x4f, 0x47, 0x41, 0x4d, 0x4b, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x4a, 0x47, 0x46, 0x46, 0x4e, 0x49, 0x46, 0x47, 0x50, 0x44, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x42, 0x46, 0x41, 0x4b, 0x49, 0x47, 0x45, 0x48, 0x4e, 0x4a, 0x43, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x4f, 0x42, 0x4c, 0x45, 0x4f, 0x4d, 0x4b, 0x43, 0x43,
	0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75,
	0x66, 0x66, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x48, 0x42, 0x4e,
	0x46, 0x49, 0x43, 0x49, 0x46, 0x4e, 0x4e, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x48, 0x65, 0x78, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x4d, 0x47, 0x4d, 0x49, 0x4e, 0x50, 0x4f, 0x45, 0x47, 0x48, 0x48, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x4a, 0x4e, 0x50, 0x4c, 0x50, 0x45, 0x42, 0x4b, 0x48, 0x50,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66,
	0x66, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x4e, 0x4d, 0x4b, 0x4f, 0x48, 0x47, 0x4f, 0x43, 0x4c, 0x47, 0x4b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69,
	0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x43, 0x4c, 0x41, 0x44, 0x4b, 0x4d, 0x4e, 0x45, 0x47,
	0x46, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42,
	0x75, 0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69,
	0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x43, 0x42, 0x48, 0x4d,
	0x48, 0x41, 0x50, 0x43, 0x4a, 0x47, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75,
	0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4f, 0x41, 0x4a, 0x4a, 0x47, 0x4e, 0x41, 0x45, 0x43, 0x41,
	0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45, 0x42, 0x49, 0x48, 0x46, 0x48, 0x4e,
	0x46, 0x4d, 0x47, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x4f, 0x4d, 0x41,
	0x4e, 0x42, 0x42, 0x49, 0x4e, 0x4c, 0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x49,
	0x44, 0x43, 0x4b, 0x4a, 0x4b, 0x46, 0x46, 0x45, 0x43, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb5, 0x0f, 0x0a, 0x23, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x47, 0x0a, 0x12, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xb0, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10, 0x62, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x44, 0x41, 0x45, 0x4f,
	0x50, 0x4a, 0x50, 0x46, 0x4d, 0x4a, 0x42, 0x18, 0xda, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x49, 0x44, 0x43, 0x4b, 0x4a, 0x4b, 0x46, 0x46, 0x45, 0x43, 0x4d, 0x48, 0x00, 0x52, 0x0b,
	0x44, 0x41, 0x45, 0x4f, 0x50, 0x4a, 0x50, 0x46, 0x4d, 0x4a, 0x42, 0x12, 0x31, 0x0a, 0x0b, 0x4f,
	0x44, 0x4b, 0x47, 0x50, 0x4e, 0x4f, 0x4c, 0x44, 0x44, 0x45, 0x18, 0x8b, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x46, 0x41, 0x4b, 0x49, 0x47, 0x45, 0x48, 0x4e, 0x4a, 0x43, 0x48,
	0x00, 0x52, 0x0b, 0x4f, 0x44, 0x4b, 0x47, 0x50, 0x4e, 0x4f, 0x4c, 0x44, 0x44, 0x45, 0x12, 0x54,
	0x0a, 0x19, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x72, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xad, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65,
	0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x16, 0x62, 0x75,
	0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x5d, 0x0a, 0x1a, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x72, 0x65, 0x66,
	0x6f, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0xba, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x62, 0x75, 0x66, 0x66,
	0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x50, 0x0a, 0x15, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xd8, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x13, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x45, 0x49, 0x4f, 0x47, 0x4f, 0x4b, 0x44,
	0x48, 0x49, 0x42, 0x4b, 0x18, 0xec, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x4f,
	0x42, 0x4c, 0x45, 0x4f, 0x4d, 0x4b, 0x43, 0x43, 0x47, 0x48, 0x00, 0x52, 0x0b, 0x45, 0x49, 0x4f,
	0x47, 0x4f, 0x4b, 0x44, 0x48, 0x49, 0x42, 0x4b, 0x12, 0x31, 0x0a, 0x0b, 0x4c, 0x41, 0x45, 0x43,
	0x50, 0x42, 0x4a, 0x48, 0x48, 0x45, 0x4b, 0x18, 0xcd, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x43, 0x42, 0x48, 0x4d, 0x48, 0x41, 0x50, 0x43, 0x4a, 0x47, 0x46, 0x48, 0x00, 0x52, 0x0b,
	0x4c, 0x41, 0x45, 0x43, 0x50, 0x42, 0x4a, 0x48, 0x48, 0x45, 0x4b, 0x12, 0x31, 0x0a, 0x0b, 0x49,
	0x41, 0x43, 0x4a, 0x42, 0x45, 0x4d, 0x43, 0x4e, 0x4f, 0x4d, 0x18, 0xc4, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x47, 0x46, 0x46, 0x4e, 0x49, 0x46, 0x47, 0x50, 0x44, 0x41, 0x48,
	0x00, 0x52, 0x0b, 0x49, 0x41, 0x43, 0x4a, 0x42, 0x45, 0x4d, 0x43, 0x4e, 0x4f, 0x4d, 0x12, 0x31,
	0x0a, 0x0b, 0x43, 0x4d, 0x45, 0x47, 0x4b, 0x4c, 0x4b, 0x41, 0x49, 0x4d, 0x4c, 0x18, 0xfc, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x4c, 0x41, 0x44, 0x4b, 0x4d, 0x4e, 0x45, 0x47,
	0x46, 0x4d, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x4d, 0x45, 0x47, 0x4b, 0x4c, 0x4b, 0x41, 0x49, 0x4d,
	0x4c, 0x12, 0x31, 0x0a, 0x0b, 0x4b, 0x4e, 0x47, 0x49, 0x45, 0x4e, 0x47, 0x4c, 0x45, 0x41, 0x4f,
	0x18, 0x97, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x48, 0x42, 0x4e, 0x46, 0x49, 0x43,
	0x49, 0x46, 0x4e, 0x4e, 0x41, 0x48, 0x00, 0x52, 0x0b, 0x4b, 0x4e, 0x47, 0x49, 0x45, 0x4e, 0x47,
	0x4c, 0x45, 0x41, 0x4f, 0x12, 0x57, 0x0a, 0x18, 0x68, 0x65, 0x78, 0x5f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0xae, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x48,
	0x65, 0x78, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x15, 0x68, 0x65, 0x78, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a,
	0x13, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0xe4, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x11, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x1a, 0x72, 0x6f, 0x67,
	0x75, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xb2, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75,
	0x6c, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x49, 0x41, 0x4c, 0x47, 0x50, 0x46, 0x4f, 0x47, 0x4b,
	0x46, 0x4d, 0x18, 0xd3, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x42, 0x49, 0x48,
	0x46, 0x48, 0x4e, 0x46, 0x4d, 0x47, 0x41, 0x48, 0x00, 0x52, 0x0b, 0x49, 0x41, 0x4c, 0x47, 0x50,
	0x46, 0x4f, 0x47, 0x4b, 0x46, 0x4d, 0x12, 0x31, 0x0a, 0x0b, 0x45, 0x46, 0x44, 0x4d, 0x43, 0x4e,
	0x4c, 0x4f, 0x4c, 0x4d, 0x47, 0x18, 0xc7, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d,
	0x47, 0x4d, 0x49, 0x4e, 0x50, 0x4f, 0x45, 0x47, 0x48, 0x48, 0x48, 0x00, 0x52, 0x0b, 0x45, 0x46,
	0x44, 0x4d, 0x43, 0x4e, 0x4c, 0x4f, 0x4c, 0x4d, 0x47, 0x12, 0x66, 0x0a, 0x1d, 0x72, 0x65, 0x66,
	0x6f, 0x72, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xd5, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x4d, 0x69,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x57, 0x0a, 0x18, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x92, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69,
	0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x73, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0xca, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x31, 0x0a, 0x0b, 0x50, 0x45, 0x4a, 0x42, 0x46, 0x4c, 0x4d, 0x4e, 0x4b, 0x48, 0x4c,
	0x18, 0xd1, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x4d, 0x4b, 0x4f, 0x48, 0x47,
	0x4f, 0x43, 0x4c, 0x47, 0x4b, 0x48, 0x00, 0x52, 0x0b, 0x50, 0x45, 0x4a, 0x42, 0x46, 0x4c, 0x4d,
	0x4e, 0x4b, 0x48, 0x4c, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x45, 0x47, 0x50, 0x47, 0x47, 0x41, 0x47,
	0x4c, 0x47, 0x48, 0x18, 0x8a, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x45, 0x47, 0x50, 0x47,
	0x47, 0x41, 0x47, 0x4c, 0x47, 0x48, 0x12, 0x40, 0x0a, 0x0b, 0x4c, 0x48, 0x44, 0x43, 0x4e, 0x44,
	0x42, 0x48, 0x48, 0x50, 0x4b, 0x18, 0x8b, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x4c, 0x48, 0x44,
	0x43, 0x4e, 0x44, 0x42, 0x48, 0x48, 0x50, 0x4b, 0x12, 0x40, 0x0a, 0x0b, 0x49, 0x4e, 0x4f, 0x50,
	0x4d, 0x4b, 0x46, 0x41, 0x4f, 0x4a, 0x46, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x49,
	0x4e, 0x4f, 0x50, 0x4d, 0x4b, 0x46, 0x41, 0x4f, 0x4a, 0x46, 0x12, 0x31, 0x0a, 0x0b, 0x41, 0x4b,
	0x43, 0x4b, 0x50, 0x50, 0x4f, 0x44, 0x44, 0x4f, 0x48, 0x18, 0x88, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4f, 0x41, 0x4a, 0x4a, 0x47, 0x4e, 0x41, 0x45, 0x43, 0x41, 0x46, 0x48, 0x00,
	0x52, 0x0b, 0x41, 0x4b, 0x43, 0x4b, 0x50, 0x50, 0x4f, 0x44, 0x44, 0x4f, 0x48, 0x12, 0x31, 0x0a,
	0x0b, 0x4a, 0x42, 0x4c, 0x43, 0x41, 0x4b, 0x4f, 0x50, 0x45, 0x50, 0x50, 0x18, 0xf2, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x41, 0x4a, 0x4a, 0x47, 0x4e, 0x41, 0x45, 0x43, 0x41,
	0x46, 0x48, 0x00, 0x52, 0x0b, 0x4a, 0x42, 0x4c, 0x43, 0x41, 0x4b, 0x4f, 0x50, 0x45, 0x50, 0x50,
	0x12, 0x31, 0x0a, 0x0b, 0x4e, 0x47, 0x4a, 0x4d, 0x48, 0x48, 0x48, 0x47, 0x43, 0x45, 0x4a, 0x18,
	0x91, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x41, 0x4a, 0x4a, 0x47, 0x4e, 0x41,
	0x45, 0x43, 0x41, 0x46, 0x48, 0x00, 0x52, 0x0b, 0x4e, 0x47, 0x4a, 0x4d, 0x48, 0x48, 0x48, 0x47,
	0x43, 0x45, 0x4a, 0x12, 0x31, 0x0a, 0x0b, 0x41, 0x44, 0x50, 0x4a, 0x4b, 0x50, 0x4a, 0x4d, 0x4c,
	0x46, 0x42, 0x18, 0xd1, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x4f, 0x4d, 0x41,
	0x4e, 0x42, 0x42, 0x49, 0x4e, 0x4c, 0x4a, 0x48, 0x00, 0x52, 0x0b, 0x41, 0x44, 0x50, 0x4a, 0x4b,
	0x50, 0x4a, 0x4d, 0x4c, 0x46, 0x42, 0x12, 0x32, 0x0a, 0x0b, 0x46, 0x48, 0x42, 0x4b, 0x4c, 0x45,
	0x47, 0x49, 0x46, 0x50, 0x4e, 0x18, 0x92, 0xa3, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x50, 0x4a, 0x4e, 0x50, 0x4c, 0x50, 0x45, 0x42, 0x4b, 0x48, 0x50, 0x48, 0x00, 0x52, 0x0b, 0x46,
	0x48, 0x42, 0x4b, 0x4c, 0x45, 0x47, 0x49, 0x46, 0x50, 0x4e, 0x12, 0x32, 0x0a, 0x0b, 0x49, 0x41,
	0x46, 0x4b, 0x41, 0x45, 0x4d, 0x44, 0x4d, 0x4d, 0x42, 0x18, 0xe7, 0xc2, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x4e, 0x4d, 0x41, 0x4d, 0x4f, 0x47, 0x41, 0x4d, 0x4b, 0x50, 0x48,
	0x00, 0x52, 0x0b, 0x49, 0x41, 0x46, 0x4b, 0x41, 0x45, 0x4d, 0x44, 0x4d, 0x4d, 0x42, 0x42, 0x08,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67,
	0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_HandleRogueCommonPendingActionCsReq_proto_rawDescOnce sync.Once
	file_HandleRogueCommonPendingActionCsReq_proto_rawDescData = file_HandleRogueCommonPendingActionCsReq_proto_rawDesc
)

func file_HandleRogueCommonPendingActionCsReq_proto_rawDescGZIP() []byte {
	file_HandleRogueCommonPendingActionCsReq_proto_rawDescOnce.Do(func() {
		file_HandleRogueCommonPendingActionCsReq_proto_rawDescData = protoimpl.X.CompressGZIP(file_HandleRogueCommonPendingActionCsReq_proto_rawDescData)
	})
	return file_HandleRogueCommonPendingActionCsReq_proto_rawDescData
}

var file_HandleRogueCommonPendingActionCsReq_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_HandleRogueCommonPendingActionCsReq_proto_goTypes = []interface{}{
	(*HandleRogueCommonPendingActionCsReq)(nil), // 0: HandleRogueCommonPendingActionCsReq
	(*RogueBuffSelectResult)(nil),               // 1: RogueBuffSelectResult
	(*IDCKJKFFECM)(nil),                         // 2: IDCKJKFFECM
	(*BFAKIGEHNJC)(nil),                         // 3: BFAKIGEHNJC
	(*RogueBuffRerollResult)(nil),               // 4: RogueBuffRerollResult
	(*RogueBuffReforgeSelectResult)(nil),        // 5: RogueBuffReforgeSelectResult
	(*RogueMiracleSelectResult)(nil),            // 6: RogueMiracleSelectResult
	(*MOBLEOMKCCG)(nil),                         // 7: MOBLEOMKCCG
	(*CBHMHAPCJGF)(nil),                         // 8: CBHMHAPCJGF
	(*JGFFNIFGPDA)(nil),                         // 9: JGFFNIFGPDA
	(*CLADKMNEGFM)(nil),                         // 10: CLADKMNEGFM
	(*HBNFICIFNNA)(nil),                         // 11: HBNFICIFNNA
	(*RogueHexAvatarSelectResult)(nil),          // 12: RogueHexAvatarSelectResult
	(*RogueBonusSelectResult)(nil),              // 13: RogueBonusSelectResult
	(*RogueTournFormulaResult)(nil),             // 14: RogueTournFormulaResult
	(*EBIHFHNFMGA)(nil),                         // 15: EBIHFHNFMGA
	(*MGMINPOEGHH)(nil),                         // 16: MGMINPOEGHH
	(*RogueReforgeFormulaSelectResult)(nil),     // 17: RogueReforgeFormulaSelectResult
	(*RogueMagicUnitSelectResult)(nil),          // 18: RogueMagicUnitSelectResult
	(*RogueMagicScepterSelectResult)(nil),       // 19: RogueMagicScepterSelectResult
	(*NMKOHGOCLGK)(nil),                         // 20: NMKOHGOCLGK
	(*OAJJGNAECAF)(nil),                         // 21: OAJJGNAECAF
	(*KOMANBBINLJ)(nil),                         // 22: KOMANBBINLJ
	(*PJNPLPEBKHP)(nil),                         // 23: PJNPLPEBKHP
	(*PNMAMOGAMKP)(nil),                         // 24: PNMAMOGAMKP
}
var file_HandleRogueCommonPendingActionCsReq_proto_depIdxs = []int32{
	1,  // 0: HandleRogueCommonPendingActionCsReq.buff_select_result:type_name -> RogueBuffSelectResult
	2,  // 1: HandleRogueCommonPendingActionCsReq.DAEOPJPFMJB:type_name -> IDCKJKFFECM
	3,  // 2: HandleRogueCommonPendingActionCsReq.ODKGPNOLDDE:type_name -> BFAKIGEHNJC
	4,  // 3: HandleRogueCommonPendingActionCsReq.buff_reroll_select_result:type_name -> RogueBuffRerollResult
	5,  // 4: HandleRogueCommonPendingActionCsReq.buff_reforge_select_result:type_name -> RogueBuffReforgeSelectResult
	6,  // 5: HandleRogueCommonPendingActionCsReq.miracle_select_result:type_name -> RogueMiracleSelectResult
	7,  // 6: HandleRogueCommonPendingActionCsReq.EIOGOKDHIBK:type_name -> MOBLEOMKCCG
	8,  // 7: HandleRogueCommonPendingActionCsReq.LAECPBJHHEK:type_name -> CBHMHAPCJGF
	9,  // 8: HandleRogueCommonPendingActionCsReq.IACJBEMCNOM:type_name -> JGFFNIFGPDA
	10, // 9: HandleRogueCommonPendingActionCsReq.CMEGKLKAIML:type_name -> CLADKMNEGFM
	11, // 10: HandleRogueCommonPendingActionCsReq.KNGIENGLEAO:type_name -> HBNFICIFNNA
	12, // 11: HandleRogueCommonPendingActionCsReq.hex_avatar_select_result:type_name -> RogueHexAvatarSelectResult
	13, // 12: HandleRogueCommonPendingActionCsReq.bonus_select_result:type_name -> RogueBonusSelectResult
	14, // 13: HandleRogueCommonPendingActionCsReq.rogue_tourn_formula_result:type_name -> RogueTournFormulaResult
	15, // 14: HandleRogueCommonPendingActionCsReq.IALGPFOGKFM:type_name -> EBIHFHNFMGA
	16, // 15: HandleRogueCommonPendingActionCsReq.EFDMCNLOLMG:type_name -> MGMINPOEGHH
	17, // 16: HandleRogueCommonPendingActionCsReq.reforge_miracle_select_result:type_name -> RogueReforgeFormulaSelectResult
	18, // 17: HandleRogueCommonPendingActionCsReq.magic_unit_select_result:type_name -> RogueMagicUnitSelectResult
	19, // 18: HandleRogueCommonPendingActionCsReq.scepter_select_result:type_name -> RogueMagicScepterSelectResult
	20, // 19: HandleRogueCommonPendingActionCsReq.PEJBFLMNKHL:type_name -> NMKOHGOCLGK
	18, // 20: HandleRogueCommonPendingActionCsReq.CEGPGGAGLGH:type_name -> RogueMagicUnitSelectResult
	18, // 21: HandleRogueCommonPendingActionCsReq.LHDCNDBHHPK:type_name -> RogueMagicUnitSelectResult
	18, // 22: HandleRogueCommonPendingActionCsReq.INOPMKFAOJF:type_name -> RogueMagicUnitSelectResult
	21, // 23: HandleRogueCommonPendingActionCsReq.AKCKPPODDOH:type_name -> OAJJGNAECAF
	21, // 24: HandleRogueCommonPendingActionCsReq.JBLCAKOPEPP:type_name -> OAJJGNAECAF
	21, // 25: HandleRogueCommonPendingActionCsReq.NGJMHHHGCEJ:type_name -> OAJJGNAECAF
	22, // 26: HandleRogueCommonPendingActionCsReq.ADPJKPJMLFB:type_name -> KOMANBBINLJ
	23, // 27: HandleRogueCommonPendingActionCsReq.FHBKLEGIFPN:type_name -> PJNPLPEBKHP
	24, // 28: HandleRogueCommonPendingActionCsReq.IAFKAEMDMMB:type_name -> PNMAMOGAMKP
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_HandleRogueCommonPendingActionCsReq_proto_init() }
func file_HandleRogueCommonPendingActionCsReq_proto_init() {
	if File_HandleRogueCommonPendingActionCsReq_proto != nil {
		return
	}
	file_PNMAMOGAMKP_proto_init()
	file_JGFFNIFGPDA_proto_init()
	file_BFAKIGEHNJC_proto_init()
	file_MOBLEOMKCCG_proto_init()
	file_RogueBuffReforgeSelectResult_proto_init()
	file_HBNFICIFNNA_proto_init()
	file_RogueHexAvatarSelectResult_proto_init()
	file_MGMINPOEGHH_proto_init()
	file_PJNPLPEBKHP_proto_init()
	file_RogueBuffSelectResult_proto_init()
	file_RogueTournFormulaResult_proto_init()
	file_NMKOHGOCLGK_proto_init()
	file_RogueMagicUnitSelectResult_proto_init()
	file_RogueBonusSelectResult_proto_init()
	file_CLADKMNEGFM_proto_init()
	file_RogueBuffRerollResult_proto_init()
	file_RogueMagicScepterSelectResult_proto_init()
	file_CBHMHAPCJGF_proto_init()
	file_RogueReforgeFormulaSelectResult_proto_init()
	file_OAJJGNAECAF_proto_init()
	file_EBIHFHNFMGA_proto_init()
	file_KOMANBBINLJ_proto_init()
	file_RogueMiracleSelectResult_proto_init()
	file_IDCKJKFFECM_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRogueCommonPendingActionCsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*HandleRogueCommonPendingActionCsReq_BuffSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_DAEOPJPFMJB)(nil),
		(*HandleRogueCommonPendingActionCsReq_ODKGPNOLDDE)(nil),
		(*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_MiracleSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_EIOGOKDHIBK)(nil),
		(*HandleRogueCommonPendingActionCsReq_LAECPBJHHEK)(nil),
		(*HandleRogueCommonPendingActionCsReq_IACJBEMCNOM)(nil),
		(*HandleRogueCommonPendingActionCsReq_CMEGKLKAIML)(nil),
		(*HandleRogueCommonPendingActionCsReq_KNGIENGLEAO)(nil),
		(*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_BonusSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_IALGPFOGKFM)(nil),
		(*HandleRogueCommonPendingActionCsReq_EFDMCNLOLMG)(nil),
		(*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_ScepterSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_PEJBFLMNKHL)(nil),
		(*HandleRogueCommonPendingActionCsReq_CEGPGGAGLGH)(nil),
		(*HandleRogueCommonPendingActionCsReq_LHDCNDBHHPK)(nil),
		(*HandleRogueCommonPendingActionCsReq_INOPMKFAOJF)(nil),
		(*HandleRogueCommonPendingActionCsReq_AKCKPPODDOH)(nil),
		(*HandleRogueCommonPendingActionCsReq_JBLCAKOPEPP)(nil),
		(*HandleRogueCommonPendingActionCsReq_NGJMHHHGCEJ)(nil),
		(*HandleRogueCommonPendingActionCsReq_ADPJKPJMLFB)(nil),
		(*HandleRogueCommonPendingActionCsReq_FHBKLEGIFPN)(nil),
		(*HandleRogueCommonPendingActionCsReq_IAFKAEMDMMB)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HandleRogueCommonPendingActionCsReq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HandleRogueCommonPendingActionCsReq_proto_goTypes,
		DependencyIndexes: file_HandleRogueCommonPendingActionCsReq_proto_depIdxs,
		MessageInfos:      file_HandleRogueCommonPendingActionCsReq_proto_msgTypes,
	}.Build()
	File_HandleRogueCommonPendingActionCsReq_proto = out.File
	file_HandleRogueCommonPendingActionCsReq_proto_rawDesc = nil
	file_HandleRogueCommonPendingActionCsReq_proto_goTypes = nil
	file_HandleRogueCommonPendingActionCsReq_proto_depIdxs = nil
}
