// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: HandleRogueCommonPendingActionCsReq.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleRogueCommonPendingActionCsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueLocation uint32 `protobuf:"varint,8,opt,name=queue_location,json=queueLocation,proto3" json:"queue_location,omitempty"`
	// Types that are assignable to Action:
	//
	//	*HandleRogueCommonPendingActionCsReq_BuffSelectResult
	//	*HandleRogueCommonPendingActionCsReq_FOEJLBGIHKD
	//	*HandleRogueCommonPendingActionCsReq_KLMFACOCJLI
	//	*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult
	//	*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult
	//	*HandleRogueCommonPendingActionCsReq_MiracleSelectResult
	//	*HandleRogueCommonPendingActionCsReq_CENOHDHPJKN
	//	*HandleRogueCommonPendingActionCsReq_AEGJEPMOIGF
	//	*HandleRogueCommonPendingActionCsReq_BMJAJGEAGKK
	//	*HandleRogueCommonPendingActionCsReq_DOGGLNJPPOF
	//	*HandleRogueCommonPendingActionCsReq_NBHANEIENMG
	//	*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult
	//	*HandleRogueCommonPendingActionCsReq_BonusSelectResult
	//	*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult
	//	*HandleRogueCommonPendingActionCsReq_MKAMHMNHJGC
	//	*HandleRogueCommonPendingActionCsReq_HHPIEEFAJGM
	//	*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult
	//	*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult
	//	*HandleRogueCommonPendingActionCsReq_ScepterSelectResult
	//	*HandleRogueCommonPendingActionCsReq_BFAJANPJCJD
	//	*HandleRogueCommonPendingActionCsReq_DCMBKMNHOLN
	//	*HandleRogueCommonPendingActionCsReq_IBNMCEPKGDB
	//	*HandleRogueCommonPendingActionCsReq_CDIJGFLFDHA
	//	*HandleRogueCommonPendingActionCsReq_JLNECBLCJIP
	//	*HandleRogueCommonPendingActionCsReq_KNBHJLNPBKG
	//	*HandleRogueCommonPendingActionCsReq_HLIOMNNOPGC
	//	*HandleRogueCommonPendingActionCsReq_DALFHAFMBDB
	//	*HandleRogueCommonPendingActionCsReq_HCOLFMIHNKO
	//	*HandleRogueCommonPendingActionCsReq_GIGDIBIFDCA
	Action isHandleRogueCommonPendingActionCsReq_Action `protobuf_oneof:"action"`
}

func (x *HandleRogueCommonPendingActionCsReq) Reset() {
	*x = HandleRogueCommonPendingActionCsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRogueCommonPendingActionCsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRogueCommonPendingActionCsReq) ProtoMessage() {}

func (x *HandleRogueCommonPendingActionCsReq) ProtoReflect() protoreflect.Message {
	mi := &file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRogueCommonPendingActionCsReq.ProtoReflect.Descriptor instead.
func (*HandleRogueCommonPendingActionCsReq) Descriptor() ([]byte, []int) {
	return file_HandleRogueCommonPendingActionCsReq_proto_rawDescGZIP(), []int{0}
}

func (x *HandleRogueCommonPendingActionCsReq) GetQueueLocation() uint32 {
	if x != nil {
		return x.QueueLocation
	}
	return 0
}

func (m *HandleRogueCommonPendingActionCsReq) GetAction() isHandleRogueCommonPendingActionCsReq_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBuffSelectResult() *RogueBuffSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BuffSelectResult); ok {
		return x.BuffSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetFOEJLBGIHKD() *HACELJDPNIG {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_FOEJLBGIHKD); ok {
		return x.FOEJLBGIHKD
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetKLMFACOCJLI() *NFFJMFGNHKO {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_KLMFACOCJLI); ok {
		return x.KLMFACOCJLI
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBuffRerollSelectResult() *RogueBuffRerollResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult); ok {
		return x.BuffRerollSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBuffReforgeSelectResult() *RogueBuffReforgeSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult); ok {
		return x.BuffReforgeSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetMiracleSelectResult() *RogueMiracleSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_MiracleSelectResult); ok {
		return x.MiracleSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetCENOHDHPJKN() *NBDOJHIJJGD {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_CENOHDHPJKN); ok {
		return x.CENOHDHPJKN
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetAEGJEPMOIGF() *CGDINMIJHLB {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_AEGJEPMOIGF); ok {
		return x.AEGJEPMOIGF
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBMJAJGEAGKK() *GDNMMBOGLDI {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BMJAJGEAGKK); ok {
		return x.BMJAJGEAGKK
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetDOGGLNJPPOF() *LMOILLMGHBO {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_DOGGLNJPPOF); ok {
		return x.DOGGLNJPPOF
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetNBHANEIENMG() *IGKDCOEOPMD {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_NBHANEIENMG); ok {
		return x.NBHANEIENMG
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetHexAvatarSelectResult() *RogueHexAvatarSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult); ok {
		return x.HexAvatarSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBonusSelectResult() *RogueBonusSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BonusSelectResult); ok {
		return x.BonusSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetRogueTournFormulaResult() *RogueTournFormulaResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult); ok {
		return x.RogueTournFormulaResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetMKAMHMNHJGC() *ACGOBKGIGIC {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_MKAMHMNHJGC); ok {
		return x.MKAMHMNHJGC
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetHHPIEEFAJGM() *BMJJCBINGBK {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_HHPIEEFAJGM); ok {
		return x.HHPIEEFAJGM
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetReforgeMiracleSelectResult() *RogueReforgeFormulaSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult); ok {
		return x.ReforgeMiracleSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetMagicUnitSelectResult() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult); ok {
		return x.MagicUnitSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetScepterSelectResult() *RogueMagicScepterSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_ScepterSelectResult); ok {
		return x.ScepterSelectResult
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetBFAJANPJCJD() *KIAFEAMDFOE {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_BFAJANPJCJD); ok {
		return x.BFAJANPJCJD
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetDCMBKMNHOLN() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_DCMBKMNHOLN); ok {
		return x.DCMBKMNHOLN
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetIBNMCEPKGDB() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_IBNMCEPKGDB); ok {
		return x.IBNMCEPKGDB
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetCDIJGFLFDHA() *RogueMagicUnitSelectResult {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_CDIJGFLFDHA); ok {
		return x.CDIJGFLFDHA
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetJLNECBLCJIP() *KDIEOAKOFOP {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_JLNECBLCJIP); ok {
		return x.JLNECBLCJIP
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetKNBHJLNPBKG() *KDIEOAKOFOP {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_KNBHJLNPBKG); ok {
		return x.KNBHJLNPBKG
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetHLIOMNNOPGC() *KDIEOAKOFOP {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_HLIOMNNOPGC); ok {
		return x.HLIOMNNOPGC
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetDALFHAFMBDB() *KMGAOPBLBDE {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_DALFHAFMBDB); ok {
		return x.DALFHAFMBDB
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetHCOLFMIHNKO() *HJHFNELKEOI {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_HCOLFMIHNKO); ok {
		return x.HCOLFMIHNKO
	}
	return nil
}

func (x *HandleRogueCommonPendingActionCsReq) GetGIGDIBIFDCA() *HPHCAAAEOMO {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionCsReq_GIGDIBIFDCA); ok {
		return x.GIGDIBIFDCA
	}
	return nil
}

type isHandleRogueCommonPendingActionCsReq_Action interface {
	isHandleRogueCommonPendingActionCsReq_Action()
}

type HandleRogueCommonPendingActionCsReq_BuffSelectResult struct {
	BuffSelectResult *RogueBuffSelectResult `protobuf:"bytes,622,opt,name=buff_select_result,json=buffSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_FOEJLBGIHKD struct {
	FOEJLBGIHKD *HACELJDPNIG `protobuf:"bytes,1154,opt,name=FOEJLBGIHKD,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_KLMFACOCJLI struct {
	KLMFACOCJLI *NFFJMFGNHKO `protobuf:"bytes,773,opt,name=KLMFACOCJLI,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult struct {
	BuffRerollSelectResult *RogueBuffRerollResult `protobuf:"bytes,1475,opt,name=buff_reroll_select_result,json=buffRerollSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult struct {
	BuffReforgeSelectResult *RogueBuffReforgeSelectResult `protobuf:"bytes,692,opt,name=buff_reforge_select_result,json=buffReforgeSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_MiracleSelectResult struct {
	MiracleSelectResult *RogueMiracleSelectResult `protobuf:"bytes,1417,opt,name=miracle_select_result,json=miracleSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_CENOHDHPJKN struct {
	CENOHDHPJKN *NBDOJHIJJGD `protobuf:"bytes,287,opt,name=CENOHDHPJKN,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_AEGJEPMOIGF struct {
	AEGJEPMOIGF *CGDINMIJHLB `protobuf:"bytes,81,opt,name=AEGJEPMOIGF,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BMJAJGEAGKK struct {
	BMJAJGEAGKK *GDNMMBOGLDI `protobuf:"bytes,979,opt,name=BMJAJGEAGKK,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_DOGGLNJPPOF struct {
	DOGGLNJPPOF *LMOILLMGHBO `protobuf:"bytes,944,opt,name=DOGGLNJPPOF,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_NBHANEIENMG struct {
	NBHANEIENMG *IGKDCOEOPMD `protobuf:"bytes,64,opt,name=NBHANEIENMG,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult struct {
	HexAvatarSelectResult *RogueHexAvatarSelectResult `protobuf:"bytes,1127,opt,name=hex_avatar_select_result,json=hexAvatarSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BonusSelectResult struct {
	BonusSelectResult *RogueBonusSelectResult `protobuf:"bytes,632,opt,name=bonus_select_result,json=bonusSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult struct {
	RogueTournFormulaResult *RogueTournFormulaResult `protobuf:"bytes,1030,opt,name=rogue_tourn_formula_result,json=rogueTournFormulaResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_MKAMHMNHJGC struct {
	MKAMHMNHJGC *ACGOBKGIGIC `protobuf:"bytes,284,opt,name=MKAMHMNHJGC,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_HHPIEEFAJGM struct {
	HHPIEEFAJGM *BMJJCBINGBK `protobuf:"bytes,515,opt,name=HHPIEEFAJGM,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult struct {
	ReforgeMiracleSelectResult *RogueReforgeFormulaSelectResult `protobuf:"bytes,1755,opt,name=reforge_miracle_select_result,json=reforgeMiracleSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult struct {
	MagicUnitSelectResult *RogueMagicUnitSelectResult `protobuf:"bytes,34,opt,name=magic_unit_select_result,json=magicUnitSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_ScepterSelectResult struct {
	ScepterSelectResult *RogueMagicScepterSelectResult `protobuf:"bytes,451,opt,name=scepter_select_result,json=scepterSelectResult,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_BFAJANPJCJD struct {
	BFAJANPJCJD *KIAFEAMDFOE `protobuf:"bytes,870,opt,name=BFAJANPJCJD,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_DCMBKMNHOLN struct {
	DCMBKMNHOLN *RogueMagicUnitSelectResult `protobuf:"bytes,1954,opt,name=DCMBKMNHOLN,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_IBNMCEPKGDB struct {
	IBNMCEPKGDB *RogueMagicUnitSelectResult `protobuf:"bytes,1249,opt,name=IBNMCEPKGDB,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_CDIJGFLFDHA struct {
	CDIJGFLFDHA *RogueMagicUnitSelectResult `protobuf:"bytes,247,opt,name=CDIJGFLFDHA,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_JLNECBLCJIP struct {
	JLNECBLCJIP *KDIEOAKOFOP `protobuf:"bytes,970,opt,name=JLNECBLCJIP,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_KNBHJLNPBKG struct {
	KNBHJLNPBKG *KDIEOAKOFOP `protobuf:"bytes,1117,opt,name=KNBHJLNPBKG,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_HLIOMNNOPGC struct {
	HLIOMNNOPGC *KDIEOAKOFOP `protobuf:"bytes,1478,opt,name=HLIOMNNOPGC,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_DALFHAFMBDB struct {
	DALFHAFMBDB *KMGAOPBLBDE `protobuf:"bytes,1293,opt,name=DALFHAFMBDB,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_HCOLFMIHNKO struct {
	HCOLFMIHNKO *HJHFNELKEOI `protobuf:"bytes,224464,opt,name=HCOLFMIHNKO,proto3,oneof"`
}

type HandleRogueCommonPendingActionCsReq_GIGDIBIFDCA struct {
	GIGDIBIFDCA *HPHCAAAEOMO `protobuf:"bytes,227417,opt,name=GIGDIBIFDCA,proto3,oneof"`
}

func (*HandleRogueCommonPendingActionCsReq_BuffSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_FOEJLBGIHKD) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_KLMFACOCJLI) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_MiracleSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_CENOHDHPJKN) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_AEGJEPMOIGF) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BMJAJGEAGKK) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_DOGGLNJPPOF) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_NBHANEIENMG) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BonusSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_MKAMHMNHJGC) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_HHPIEEFAJGM) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_ScepterSelectResult) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_BFAJANPJCJD) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_DCMBKMNHOLN) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_IBNMCEPKGDB) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_CDIJGFLFDHA) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_JLNECBLCJIP) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_KNBHJLNPBKG) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_HLIOMNNOPGC) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_DALFHAFMBDB) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_HCOLFMIHNKO) isHandleRogueCommonPendingActionCsReq_Action() {
}

func (*HandleRogueCommonPendingActionCsReq_GIGDIBIFDCA) isHandleRogueCommonPendingActionCsReq_Action() {
}

var File_HandleRogueCommonPendingActionCsReq_proto protoreflect.FileDescriptor

var file_HandleRogueCommonPendingActionCsReq_proto_rawDesc = []byte{
	0x0a, 0x29, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x41, 0x43, 0x47,
	0x4f, 0x42, 0x4b, 0x47, 0x49, 0x47, 0x49, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x48, 0x65, 0x78, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x44, 0x49, 0x45, 0x4f, 0x41, 0x4b, 0x4f, 0x46,
	0x4f, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x48, 0x4a, 0x48, 0x46, 0x4e, 0x45,
	0x4c, 0x4b, 0x45, 0x4f, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x42, 0x4d, 0x4a, 0x4a, 0x43,
	0x42, 0x49, 0x4e, 0x47, 0x42, 0x4b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x49, 0x47,
	0x4b, 0x44, 0x43, 0x4f, 0x45, 0x4f, 0x50, 0x4d, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x4e, 0x42, 0x44, 0x4f, 0x4a, 0x48, 0x49, 0x4a, 0x4a, 0x47, 0x44, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x75, 0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x49, 0x41, 0x46, 0x45, 0x41, 0x4d, 0x44,
	0x46, 0x4f, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x4d, 0x47, 0x41, 0x4f,
	0x50, 0x42, 0x4c, 0x42, 0x44, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4c, 0x4d,
	0x4f, 0x49, 0x4c, 0x4c, 0x4d, 0x47, 0x48, 0x42, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x47, 0x44, 0x4e, 0x4d, 0x4d, 0x42, 0x4f, 0x47, 0x4c, 0x44, 0x49, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x4e, 0x46, 0x46, 0x4a, 0x4d, 0x46, 0x47, 0x4e, 0x48, 0x4b, 0x4f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x43, 0x47, 0x44, 0x49, 0x4e, 0x4d, 0x49, 0x4a, 0x48,
	0x4c, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75,
	0x66, 0x66, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x48, 0x41, 0x43,
	0x45, 0x4c, 0x4a, 0x44, 0x50, 0x4e, 0x49, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x48, 0x50, 0x48,
	0x43, 0x41, 0x41, 0x41, 0x45, 0x4f, 0x4d, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb2, 0x0f, 0x0a, 0x23, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x47, 0x0a, 0x12, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xee, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10, 0x62, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x46, 0x4f, 0x45, 0x4a,
	0x4c, 0x42, 0x47, 0x49, 0x48, 0x4b, 0x44, 0x18, 0x82, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x48, 0x41, 0x43, 0x45, 0x4c, 0x4a, 0x44, 0x50, 0x4e, 0x49, 0x47, 0x48, 0x00, 0x52, 0x0b,
	0x46, 0x4f, 0x45, 0x4a, 0x4c, 0x42, 0x47, 0x49, 0x48, 0x4b, 0x44, 0x12, 0x31, 0x0a, 0x0b, 0x4b,
	0x4c, 0x4d, 0x46, 0x41, 0x43, 0x4f, 0x43, 0x4a, 0x4c, 0x49, 0x18, 0x85, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x46, 0x46, 0x4a, 0x4d, 0x46, 0x47, 0x4e, 0x48, 0x4b, 0x4f, 0x48,
	0x00, 0x52, 0x0b, 0x4b, 0x4c, 0x4d, 0x46, 0x41, 0x43, 0x4f, 0x43, 0x4a, 0x4c, 0x49, 0x12, 0x54,
	0x0a, 0x19, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x72, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xc3, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65,
	0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x16, 0x62, 0x75,
	0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x5d, 0x0a, 0x1a, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x72, 0x65, 0x66,
	0x6f, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0xb4, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x62, 0x75, 0x66, 0x66,
	0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x50, 0x0a, 0x15, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x89, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x13, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x43, 0x45, 0x4e, 0x4f, 0x48, 0x44, 0x48,
	0x50, 0x4a, 0x4b, 0x4e, 0x18, 0x9f, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x42,
	0x44, 0x4f, 0x4a, 0x48, 0x49, 0x4a, 0x4a, 0x47, 0x44, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x45, 0x4e,
	0x4f, 0x48, 0x44, 0x48, 0x50, 0x4a, 0x4b, 0x4e, 0x12, 0x30, 0x0a, 0x0b, 0x41, 0x45, 0x47, 0x4a,
	0x45, 0x50, 0x4d, 0x4f, 0x49, 0x47, 0x46, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x47, 0x44, 0x49, 0x4e, 0x4d, 0x49, 0x4a, 0x48, 0x4c, 0x42, 0x48, 0x00, 0x52, 0x0b, 0x41,
	0x45, 0x47, 0x4a, 0x45, 0x50, 0x4d, 0x4f, 0x49, 0x47, 0x46, 0x12, 0x31, 0x0a, 0x0b, 0x42, 0x4d,
	0x4a, 0x41, 0x4a, 0x47, 0x45, 0x41, 0x47, 0x4b, 0x4b, 0x18, 0xd3, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x47, 0x44, 0x4e, 0x4d, 0x4d, 0x42, 0x4f, 0x47, 0x4c, 0x44, 0x49, 0x48, 0x00,
	0x52, 0x0b, 0x42, 0x4d, 0x4a, 0x41, 0x4a, 0x47, 0x45, 0x41, 0x47, 0x4b, 0x4b, 0x12, 0x31, 0x0a,
	0x0b, 0x44, 0x4f, 0x47, 0x47, 0x4c, 0x4e, 0x4a, 0x50, 0x50, 0x4f, 0x46, 0x18, 0xb0, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x4d, 0x4f, 0x49, 0x4c, 0x4c, 0x4d, 0x47, 0x48, 0x42,
	0x4f, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x4f, 0x47, 0x47, 0x4c, 0x4e, 0x4a, 0x50, 0x50, 0x4f, 0x46,
	0x12, 0x30, 0x0a, 0x0b, 0x4e, 0x42, 0x48, 0x41, 0x4e, 0x45, 0x49, 0x45, 0x4e, 0x4d, 0x47, 0x18,
	0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x47, 0x4b, 0x44, 0x43, 0x4f, 0x45, 0x4f,
	0x50, 0x4d, 0x44, 0x48, 0x00, 0x52, 0x0b, 0x4e, 0x42, 0x48, 0x41, 0x4e, 0x45, 0x49, 0x45, 0x4e,
	0x4d, 0x47, 0x12, 0x57, 0x0a, 0x18, 0x68, 0x65, 0x78, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xe7,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x48, 0x65, 0x78,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x15, 0x68, 0x65, 0x78, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a, 0x13, 0x62,
	0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0xf8, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x11, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x1a, 0x72, 0x6f, 0x67, 0x75, 0x65,
	0x5f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x86, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x31, 0x0a, 0x0b, 0x4d, 0x4b, 0x41, 0x4d, 0x48, 0x4d, 0x4e, 0x48, 0x4a, 0x47, 0x43,
	0x18, 0x9c, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x43, 0x47, 0x4f, 0x42, 0x4b,
	0x47, 0x49, 0x47, 0x49, 0x43, 0x48, 0x00, 0x52, 0x0b, 0x4d, 0x4b, 0x41, 0x4d, 0x48, 0x4d, 0x4e,
	0x48, 0x4a, 0x47, 0x43, 0x12, 0x31, 0x0a, 0x0b, 0x48, 0x48, 0x50, 0x49, 0x45, 0x45, 0x46, 0x41,
	0x4a, 0x47, 0x4d, 0x18, 0x83, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x4d, 0x4a,
	0x4a, 0x43, 0x42, 0x49, 0x4e, 0x47, 0x42, 0x4b, 0x48, 0x00, 0x52, 0x0b, 0x48, 0x48, 0x50, 0x49,
	0x45, 0x45, 0x46, 0x41, 0x4a, 0x47, 0x4d, 0x12, 0x66, 0x0a, 0x1d, 0x72, 0x65, 0x66, 0x6f, 0x72,
	0x67, 0x65, 0x5f, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0xdb, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x6d, 0x75, 0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x4d, 0x69, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x56, 0x0a, 0x18, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e,
	0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x15, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x73, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0xc3, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d,
	0x61, 0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31,
	0x0a, 0x0b, 0x42, 0x46, 0x41, 0x4a, 0x41, 0x4e, 0x50, 0x4a, 0x43, 0x4a, 0x44, 0x18, 0xe6, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x49, 0x41, 0x46, 0x45, 0x41, 0x4d, 0x44, 0x46,
	0x4f, 0x45, 0x48, 0x00, 0x52, 0x0b, 0x42, 0x46, 0x41, 0x4a, 0x41, 0x4e, 0x50, 0x4a, 0x43, 0x4a,
	0x44, 0x12, 0x40, 0x0a, 0x0b, 0x44, 0x43, 0x4d, 0x42, 0x4b, 0x4d, 0x4e, 0x48, 0x4f, 0x4c, 0x4e,
	0x18, 0xa2, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d,
	0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x43, 0x4d, 0x42, 0x4b, 0x4d, 0x4e, 0x48,
	0x4f, 0x4c, 0x4e, 0x12, 0x40, 0x0a, 0x0b, 0x49, 0x42, 0x4e, 0x4d, 0x43, 0x45, 0x50, 0x4b, 0x47,
	0x44, 0x42, 0x18, 0xe1, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x49, 0x42, 0x4e, 0x4d, 0x43, 0x45,
	0x50, 0x4b, 0x47, 0x44, 0x42, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x44, 0x49, 0x4a, 0x47, 0x46, 0x4c,
	0x46, 0x44, 0x48, 0x41, 0x18, 0xf7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x44, 0x49, 0x4a,
	0x47, 0x46, 0x4c, 0x46, 0x44, 0x48, 0x41, 0x12, 0x31, 0x0a, 0x0b, 0x4a, 0x4c, 0x4e, 0x45, 0x43,
	0x42, 0x4c, 0x43, 0x4a, 0x49, 0x50, 0x18, 0xca, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x4b, 0x44, 0x49, 0x45, 0x4f, 0x41, 0x4b, 0x4f, 0x46, 0x4f, 0x50, 0x48, 0x00, 0x52, 0x0b, 0x4a,
	0x4c, 0x4e, 0x45, 0x43, 0x42, 0x4c, 0x43, 0x4a, 0x49, 0x50, 0x12, 0x31, 0x0a, 0x0b, 0x4b, 0x4e,
	0x42, 0x48, 0x4a, 0x4c, 0x4e, 0x50, 0x42, 0x4b, 0x47, 0x18, 0xdd, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4b, 0x44, 0x49, 0x45, 0x4f, 0x41, 0x4b, 0x4f, 0x46, 0x4f, 0x50, 0x48, 0x00,
	0x52, 0x0b, 0x4b, 0x4e, 0x42, 0x48, 0x4a, 0x4c, 0x4e, 0x50, 0x42, 0x4b, 0x47, 0x12, 0x31, 0x0a,
	0x0b, 0x48, 0x4c, 0x49, 0x4f, 0x4d, 0x4e, 0x4e, 0x4f, 0x50, 0x47, 0x43, 0x18, 0xc6, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x44, 0x49, 0x45, 0x4f, 0x41, 0x4b, 0x4f, 0x46, 0x4f,
	0x50, 0x48, 0x00, 0x52, 0x0b, 0x48, 0x4c, 0x49, 0x4f, 0x4d, 0x4e, 0x4e, 0x4f, 0x50, 0x47, 0x43,
	0x12, 0x31, 0x0a, 0x0b, 0x44, 0x41, 0x4c, 0x46, 0x48, 0x41, 0x46, 0x4d, 0x42, 0x44, 0x42, 0x18,
	0x8d, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x4d, 0x47, 0x41, 0x4f, 0x50, 0x42,
	0x4c, 0x42, 0x44, 0x45, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x41, 0x4c, 0x46, 0x48, 0x41, 0x46, 0x4d,
	0x42, 0x44, 0x42, 0x12, 0x32, 0x0a, 0x0b, 0x48, 0x43, 0x4f, 0x4c, 0x46, 0x4d, 0x49, 0x48, 0x4e,
	0x4b, 0x4f, 0x18, 0xd0, 0xd9, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x48, 0x4a, 0x48,
	0x46, 0x4e, 0x45, 0x4c, 0x4b, 0x45, 0x4f, 0x49, 0x48, 0x00, 0x52, 0x0b, 0x48, 0x43, 0x4f, 0x4c,
	0x46, 0x4d, 0x49, 0x48, 0x4e, 0x4b, 0x4f, 0x12, 0x32, 0x0a, 0x0b, 0x47, 0x49, 0x47, 0x44, 0x49,
	0x42, 0x49, 0x46, 0x44, 0x43, 0x41, 0x18, 0xd9, 0xf0, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x48, 0x50, 0x48, 0x43, 0x41, 0x41, 0x41, 0x45, 0x4f, 0x4d, 0x4f, 0x48, 0x00, 0x52, 0x0b,
	0x47, 0x49, 0x47, 0x44, 0x49, 0x42, 0x49, 0x46, 0x44, 0x43, 0x41, 0x42, 0x08, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e,
	0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_HandleRogueCommonPendingActionCsReq_proto_rawDescOnce sync.Once
	file_HandleRogueCommonPendingActionCsReq_proto_rawDescData = file_HandleRogueCommonPendingActionCsReq_proto_rawDesc
)

func file_HandleRogueCommonPendingActionCsReq_proto_rawDescGZIP() []byte {
	file_HandleRogueCommonPendingActionCsReq_proto_rawDescOnce.Do(func() {
		file_HandleRogueCommonPendingActionCsReq_proto_rawDescData = protoimpl.X.CompressGZIP(file_HandleRogueCommonPendingActionCsReq_proto_rawDescData)
	})
	return file_HandleRogueCommonPendingActionCsReq_proto_rawDescData
}

var file_HandleRogueCommonPendingActionCsReq_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_HandleRogueCommonPendingActionCsReq_proto_goTypes = []interface{}{
	(*HandleRogueCommonPendingActionCsReq)(nil), // 0: HandleRogueCommonPendingActionCsReq
	(*RogueBuffSelectResult)(nil),               // 1: RogueBuffSelectResult
	(*HACELJDPNIG)(nil),                         // 2: HACELJDPNIG
	(*NFFJMFGNHKO)(nil),                         // 3: NFFJMFGNHKO
	(*RogueBuffRerollResult)(nil),               // 4: RogueBuffRerollResult
	(*RogueBuffReforgeSelectResult)(nil),        // 5: RogueBuffReforgeSelectResult
	(*RogueMiracleSelectResult)(nil),            // 6: RogueMiracleSelectResult
	(*NBDOJHIJJGD)(nil),                         // 7: NBDOJHIJJGD
	(*CGDINMIJHLB)(nil),                         // 8: CGDINMIJHLB
	(*GDNMMBOGLDI)(nil),                         // 9: GDNMMBOGLDI
	(*LMOILLMGHBO)(nil),                         // 10: LMOILLMGHBO
	(*IGKDCOEOPMD)(nil),                         // 11: IGKDCOEOPMD
	(*RogueHexAvatarSelectResult)(nil),          // 12: RogueHexAvatarSelectResult
	(*RogueBonusSelectResult)(nil),              // 13: RogueBonusSelectResult
	(*RogueTournFormulaResult)(nil),             // 14: RogueTournFormulaResult
	(*ACGOBKGIGIC)(nil),                         // 15: ACGOBKGIGIC
	(*BMJJCBINGBK)(nil),                         // 16: BMJJCBINGBK
	(*RogueReforgeFormulaSelectResult)(nil),     // 17: RogueReforgeFormulaSelectResult
	(*RogueMagicUnitSelectResult)(nil),          // 18: RogueMagicUnitSelectResult
	(*RogueMagicScepterSelectResult)(nil),       // 19: RogueMagicScepterSelectResult
	(*KIAFEAMDFOE)(nil),                         // 20: KIAFEAMDFOE
	(*KDIEOAKOFOP)(nil),                         // 21: KDIEOAKOFOP
	(*KMGAOPBLBDE)(nil),                         // 22: KMGAOPBLBDE
	(*HJHFNELKEOI)(nil),                         // 23: HJHFNELKEOI
	(*HPHCAAAEOMO)(nil),                         // 24: HPHCAAAEOMO
}
var file_HandleRogueCommonPendingActionCsReq_proto_depIdxs = []int32{
	1,  // 0: HandleRogueCommonPendingActionCsReq.buff_select_result:type_name -> RogueBuffSelectResult
	2,  // 1: HandleRogueCommonPendingActionCsReq.FOEJLBGIHKD:type_name -> HACELJDPNIG
	3,  // 2: HandleRogueCommonPendingActionCsReq.KLMFACOCJLI:type_name -> NFFJMFGNHKO
	4,  // 3: HandleRogueCommonPendingActionCsReq.buff_reroll_select_result:type_name -> RogueBuffRerollResult
	5,  // 4: HandleRogueCommonPendingActionCsReq.buff_reforge_select_result:type_name -> RogueBuffReforgeSelectResult
	6,  // 5: HandleRogueCommonPendingActionCsReq.miracle_select_result:type_name -> RogueMiracleSelectResult
	7,  // 6: HandleRogueCommonPendingActionCsReq.CENOHDHPJKN:type_name -> NBDOJHIJJGD
	8,  // 7: HandleRogueCommonPendingActionCsReq.AEGJEPMOIGF:type_name -> CGDINMIJHLB
	9,  // 8: HandleRogueCommonPendingActionCsReq.BMJAJGEAGKK:type_name -> GDNMMBOGLDI
	10, // 9: HandleRogueCommonPendingActionCsReq.DOGGLNJPPOF:type_name -> LMOILLMGHBO
	11, // 10: HandleRogueCommonPendingActionCsReq.NBHANEIENMG:type_name -> IGKDCOEOPMD
	12, // 11: HandleRogueCommonPendingActionCsReq.hex_avatar_select_result:type_name -> RogueHexAvatarSelectResult
	13, // 12: HandleRogueCommonPendingActionCsReq.bonus_select_result:type_name -> RogueBonusSelectResult
	14, // 13: HandleRogueCommonPendingActionCsReq.rogue_tourn_formula_result:type_name -> RogueTournFormulaResult
	15, // 14: HandleRogueCommonPendingActionCsReq.MKAMHMNHJGC:type_name -> ACGOBKGIGIC
	16, // 15: HandleRogueCommonPendingActionCsReq.HHPIEEFAJGM:type_name -> BMJJCBINGBK
	17, // 16: HandleRogueCommonPendingActionCsReq.reforge_miracle_select_result:type_name -> RogueReforgeFormulaSelectResult
	18, // 17: HandleRogueCommonPendingActionCsReq.magic_unit_select_result:type_name -> RogueMagicUnitSelectResult
	19, // 18: HandleRogueCommonPendingActionCsReq.scepter_select_result:type_name -> RogueMagicScepterSelectResult
	20, // 19: HandleRogueCommonPendingActionCsReq.BFAJANPJCJD:type_name -> KIAFEAMDFOE
	18, // 20: HandleRogueCommonPendingActionCsReq.DCMBKMNHOLN:type_name -> RogueMagicUnitSelectResult
	18, // 21: HandleRogueCommonPendingActionCsReq.IBNMCEPKGDB:type_name -> RogueMagicUnitSelectResult
	18, // 22: HandleRogueCommonPendingActionCsReq.CDIJGFLFDHA:type_name -> RogueMagicUnitSelectResult
	21, // 23: HandleRogueCommonPendingActionCsReq.JLNECBLCJIP:type_name -> KDIEOAKOFOP
	21, // 24: HandleRogueCommonPendingActionCsReq.KNBHJLNPBKG:type_name -> KDIEOAKOFOP
	21, // 25: HandleRogueCommonPendingActionCsReq.HLIOMNNOPGC:type_name -> KDIEOAKOFOP
	22, // 26: HandleRogueCommonPendingActionCsReq.DALFHAFMBDB:type_name -> KMGAOPBLBDE
	23, // 27: HandleRogueCommonPendingActionCsReq.HCOLFMIHNKO:type_name -> HJHFNELKEOI
	24, // 28: HandleRogueCommonPendingActionCsReq.GIGDIBIFDCA:type_name -> HPHCAAAEOMO
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_HandleRogueCommonPendingActionCsReq_proto_init() }
func file_HandleRogueCommonPendingActionCsReq_proto_init() {
	if File_HandleRogueCommonPendingActionCsReq_proto != nil {
		return
	}
	file_ACGOBKGIGIC_proto_init()
	file_RogueMagicScepterSelectResult_proto_init()
	file_RogueHexAvatarSelectResult_proto_init()
	file_KDIEOAKOFOP_proto_init()
	file_HJHFNELKEOI_proto_init()
	file_RogueBonusSelectResult_proto_init()
	file_BMJJCBINGBK_proto_init()
	file_IGKDCOEOPMD_proto_init()
	file_NBDOJHIJJGD_proto_init()
	file_RogueBuffSelectResult_proto_init()
	file_RogueReforgeFormulaSelectResult_proto_init()
	file_KIAFEAMDFOE_proto_init()
	file_KMGAOPBLBDE_proto_init()
	file_LMOILLMGHBO_proto_init()
	file_GDNMMBOGLDI_proto_init()
	file_RogueMiracleSelectResult_proto_init()
	file_NFFJMFGNHKO_proto_init()
	file_CGDINMIJHLB_proto_init()
	file_RogueTournFormulaResult_proto_init()
	file_RogueBuffReforgeSelectResult_proto_init()
	file_HACELJDPNIG_proto_init()
	file_RogueBuffRerollResult_proto_init()
	file_HPHCAAAEOMO_proto_init()
	file_RogueMagicUnitSelectResult_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRogueCommonPendingActionCsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_HandleRogueCommonPendingActionCsReq_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*HandleRogueCommonPendingActionCsReq_BuffSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_FOEJLBGIHKD)(nil),
		(*HandleRogueCommonPendingActionCsReq_KLMFACOCJLI)(nil),
		(*HandleRogueCommonPendingActionCsReq_BuffRerollSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_BuffReforgeSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_MiracleSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_CENOHDHPJKN)(nil),
		(*HandleRogueCommonPendingActionCsReq_AEGJEPMOIGF)(nil),
		(*HandleRogueCommonPendingActionCsReq_BMJAJGEAGKK)(nil),
		(*HandleRogueCommonPendingActionCsReq_DOGGLNJPPOF)(nil),
		(*HandleRogueCommonPendingActionCsReq_NBHANEIENMG)(nil),
		(*HandleRogueCommonPendingActionCsReq_HexAvatarSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_BonusSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_RogueTournFormulaResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_MKAMHMNHJGC)(nil),
		(*HandleRogueCommonPendingActionCsReq_HHPIEEFAJGM)(nil),
		(*HandleRogueCommonPendingActionCsReq_ReforgeMiracleSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_MagicUnitSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_ScepterSelectResult)(nil),
		(*HandleRogueCommonPendingActionCsReq_BFAJANPJCJD)(nil),
		(*HandleRogueCommonPendingActionCsReq_DCMBKMNHOLN)(nil),
		(*HandleRogueCommonPendingActionCsReq_IBNMCEPKGDB)(nil),
		(*HandleRogueCommonPendingActionCsReq_CDIJGFLFDHA)(nil),
		(*HandleRogueCommonPendingActionCsReq_JLNECBLCJIP)(nil),
		(*HandleRogueCommonPendingActionCsReq_KNBHJLNPBKG)(nil),
		(*HandleRogueCommonPendingActionCsReq_HLIOMNNOPGC)(nil),
		(*HandleRogueCommonPendingActionCsReq_DALFHAFMBDB)(nil),
		(*HandleRogueCommonPendingActionCsReq_HCOLFMIHNKO)(nil),
		(*HandleRogueCommonPendingActionCsReq_GIGDIBIFDCA)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HandleRogueCommonPendingActionCsReq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HandleRogueCommonPendingActionCsReq_proto_goTypes,
		DependencyIndexes: file_HandleRogueCommonPendingActionCsReq_proto_depIdxs,
		MessageInfos:      file_HandleRogueCommonPendingActionCsReq_proto_msgTypes,
	}.Build()
	File_HandleRogueCommonPendingActionCsReq_proto = out.File
	file_HandleRogueCommonPendingActionCsReq_proto_rawDesc = nil
	file_HandleRogueCommonPendingActionCsReq_proto_goTypes = nil
	file_HandleRogueCommonPendingActionCsReq_proto_depIdxs = nil
}
