// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: HandleRogueCommonPendingActionScRsp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleRogueCommonPendingActionScRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuePosition uint32 `protobuf:"varint,3,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`
	QueueLocation uint32 `protobuf:"varint,5,opt,name=queue_location,json=queueLocation,proto3" json:"queue_location,omitempty"`
	Retcode       uint32 `protobuf:"varint,12,opt,name=retcode,proto3" json:"retcode,omitempty"`
	// Types that are assignable to Action:
	//
	//	*HandleRogueCommonPendingActionScRsp_BuffSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_KOAGLGFNBOA
	//	*HandleRogueCommonPendingActionScRsp_JICIPLJDNAL
	//	*HandleRogueCommonPendingActionScRsp_BuffRerollCallback
	//	*HandleRogueCommonPendingActionScRsp_BuffReforgeSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_AFBIIHAFLOA
	//	*HandleRogueCommonPendingActionScRsp_ECKIGPOCGCA
	//	*HandleRogueCommonPendingActionScRsp_KODMIGGOJKO
	//	*HandleRogueCommonPendingActionScRsp_GAFOPMBKBOA
	//	*HandleRogueCommonPendingActionScRsp_FMADNIJOPHB
	//	*HandleRogueCommonPendingActionScRsp_HexAvatarSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_BonusSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback
	//	*HandleRogueCommonPendingActionScRsp_FGJFGKKDMJO
	//	*HandleRogueCommonPendingActionScRsp_EJENNEPAHDI
	//	*HandleRogueCommonPendingActionScRsp_ReforgeMiracleSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_MagicUnitSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_ScepterSelectCallback
	//	*HandleRogueCommonPendingActionScRsp_GPLEFKFBPGF
	//	*HandleRogueCommonPendingActionScRsp_GMKLEHMJIII
	//	*HandleRogueCommonPendingActionScRsp_KBEAJGOPPDH
	//	*HandleRogueCommonPendingActionScRsp_CBMKJHHLAMH
	//	*HandleRogueCommonPendingActionScRsp_GHOIPBKDEEJ
	Action isHandleRogueCommonPendingActionScRsp_Action `protobuf_oneof:"action"`
}

func (x *HandleRogueCommonPendingActionScRsp) Reset() {
	*x = HandleRogueCommonPendingActionScRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRogueCommonPendingActionScRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRogueCommonPendingActionScRsp) ProtoMessage() {}

func (x *HandleRogueCommonPendingActionScRsp) ProtoReflect() protoreflect.Message {
	mi := &file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRogueCommonPendingActionScRsp.ProtoReflect.Descriptor instead.
func (*HandleRogueCommonPendingActionScRsp) Descriptor() ([]byte, []int) {
	return file_HandleRogueCommonPendingActionScRsp_proto_rawDescGZIP(), []int{0}
}

func (x *HandleRogueCommonPendingActionScRsp) GetQueuePosition() uint32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *HandleRogueCommonPendingActionScRsp) GetQueueLocation() uint32 {
	if x != nil {
		return x.QueueLocation
	}
	return 0
}

func (x *HandleRogueCommonPendingActionScRsp) GetRetcode() uint32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (m *HandleRogueCommonPendingActionScRsp) GetAction() isHandleRogueCommonPendingActionScRsp_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBuffSelectCallback() *RogueBuffSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BuffSelectCallback); ok {
		return x.BuffSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetKOAGLGFNBOA() *FIANHJOCBOO {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_KOAGLGFNBOA); ok {
		return x.KOAGLGFNBOA
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetJICIPLJDNAL() *HKIPEMDOMMD {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_JICIPLJDNAL); ok {
		return x.JICIPLJDNAL
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBuffRerollCallback() *RogueBuffRerollCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BuffRerollCallback); ok {
		return x.BuffRerollCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBuffReforgeSelectCallback() *RogueBuffReforgeSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BuffReforgeSelectCallback); ok {
		return x.BuffReforgeSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetMiracleSelectCallback() *RogueMiracleSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback); ok {
		return x.MiracleSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetAFBIIHAFLOA() *EPGECECNMGI {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_AFBIIHAFLOA); ok {
		return x.AFBIIHAFLOA
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetECKIGPOCGCA() *INJNELLMNAC {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_ECKIGPOCGCA); ok {
		return x.ECKIGPOCGCA
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetKODMIGGOJKO() *LMADCCJOCCP {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_KODMIGGOJKO); ok {
		return x.KODMIGGOJKO
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetGAFOPMBKBOA() *OIOBNBAINGF {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_GAFOPMBKBOA); ok {
		return x.GAFOPMBKBOA
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetFMADNIJOPHB() *MMENILLOPPJ {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_FMADNIJOPHB); ok {
		return x.FMADNIJOPHB
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetHexAvatarSelectCallback() *RogueHexAvatarSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_HexAvatarSelectCallback); ok {
		return x.HexAvatarSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetBonusSelectCallback() *RogueBonusSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_BonusSelectCallback); ok {
		return x.BonusSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetRogueTournFormulaCallback() *RogueTournFormulaCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback); ok {
		return x.RogueTournFormulaCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetFGJFGKKDMJO() *CFNOJBILKBG {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_FGJFGKKDMJO); ok {
		return x.FGJFGKKDMJO
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetEJENNEPAHDI() *ECHPHBKEOLG {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_EJENNEPAHDI); ok {
		return x.EJENNEPAHDI
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetReforgeMiracleSelectCallback() *RogueReforgeFormulaSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_ReforgeMiracleSelectCallback); ok {
		return x.ReforgeMiracleSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetMagicUnitSelectCallback() *RogueMagicUnitSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_MagicUnitSelectCallback); ok {
		return x.MagicUnitSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetScepterSelectCallback() *RogueMagicScepterSelectCallback {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_ScepterSelectCallback); ok {
		return x.ScepterSelectCallback
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetGPLEFKFBPGF() *IDBPJBLHAGN {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_GPLEFKFBPGF); ok {
		return x.GPLEFKFBPGF
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetGMKLEHMJIII() *PHMCINNBADG {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_GMKLEHMJIII); ok {
		return x.GMKLEHMJIII
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetKBEAJGOPPDH() *GOEBPLEJBAK {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_KBEAJGOPPDH); ok {
		return x.KBEAJGOPPDH
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetCBMKJHHLAMH() *NGCOGFOKDFD {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_CBMKJHHLAMH); ok {
		return x.CBMKJHHLAMH
	}
	return nil
}

func (x *HandleRogueCommonPendingActionScRsp) GetGHOIPBKDEEJ() *EMAMDMCFCLJ {
	if x, ok := x.GetAction().(*HandleRogueCommonPendingActionScRsp_GHOIPBKDEEJ); ok {
		return x.GHOIPBKDEEJ
	}
	return nil
}

type isHandleRogueCommonPendingActionScRsp_Action interface {
	isHandleRogueCommonPendingActionScRsp_Action()
}

type HandleRogueCommonPendingActionScRsp_BuffSelectCallback struct {
	BuffSelectCallback *RogueBuffSelectCallback `protobuf:"bytes,69,opt,name=buff_select_callback,json=buffSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_KOAGLGFNBOA struct {
	KOAGLGFNBOA *FIANHJOCBOO `protobuf:"bytes,1101,opt,name=KOAGLGFNBOA,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_JICIPLJDNAL struct {
	JICIPLJDNAL *HKIPEMDOMMD `protobuf:"bytes,1028,opt,name=JICIPLJDNAL,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_BuffRerollCallback struct {
	BuffRerollCallback *RogueBuffRerollCallback `protobuf:"bytes,1526,opt,name=buff_reroll_callback,json=buffRerollCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_BuffReforgeSelectCallback struct {
	BuffReforgeSelectCallback *RogueBuffReforgeSelectCallback `protobuf:"bytes,1698,opt,name=buff_reforge_select_callback,json=buffReforgeSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_MiracleSelectCallback struct {
	MiracleSelectCallback *RogueMiracleSelectCallback `protobuf:"bytes,1104,opt,name=miracle_select_callback,json=miracleSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_AFBIIHAFLOA struct {
	AFBIIHAFLOA *EPGECECNMGI `protobuf:"bytes,1911,opt,name=AFBIIHAFLOA,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_ECKIGPOCGCA struct {
	ECKIGPOCGCA *INJNELLMNAC `protobuf:"bytes,1595,opt,name=ECKIGPOCGCA,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_KODMIGGOJKO struct {
	KODMIGGOJKO *LMADCCJOCCP `protobuf:"bytes,1999,opt,name=KODMIGGOJKO,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_GAFOPMBKBOA struct {
	GAFOPMBKBOA *OIOBNBAINGF `protobuf:"bytes,343,opt,name=GAFOPMBKBOA,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_FMADNIJOPHB struct {
	FMADNIJOPHB *MMENILLOPPJ `protobuf:"bytes,509,opt,name=FMADNIJOPHB,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_HexAvatarSelectCallback struct {
	HexAvatarSelectCallback *RogueHexAvatarSelectCallback `protobuf:"bytes,482,opt,name=hex_avatar_select_callback,json=hexAvatarSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_BonusSelectCallback struct {
	BonusSelectCallback *RogueBonusSelectCallback `protobuf:"bytes,1157,opt,name=bonus_select_callback,json=bonusSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback struct {
	RogueTournFormulaCallback *RogueTournFormulaCallback `protobuf:"bytes,1728,opt,name=rogue_tourn_formula_callback,json=rogueTournFormulaCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_FGJFGKKDMJO struct {
	FGJFGKKDMJO *CFNOJBILKBG `protobuf:"bytes,1188,opt,name=FGJFGKKDMJO,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_EJENNEPAHDI struct {
	EJENNEPAHDI *ECHPHBKEOLG `protobuf:"bytes,736,opt,name=EJENNEPAHDI,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_ReforgeMiracleSelectCallback struct {
	ReforgeMiracleSelectCallback *RogueReforgeFormulaSelectCallback `protobuf:"bytes,302,opt,name=reforge_miracle_select_callback,json=reforgeMiracleSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_MagicUnitSelectCallback struct {
	MagicUnitSelectCallback *RogueMagicUnitSelectCallback `protobuf:"bytes,1285,opt,name=magic_unit_select_callback,json=magicUnitSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_ScepterSelectCallback struct {
	ScepterSelectCallback *RogueMagicScepterSelectCallback `protobuf:"bytes,606,opt,name=scepter_select_callback,json=scepterSelectCallback,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_GPLEFKFBPGF struct {
	GPLEFKFBPGF *IDBPJBLHAGN `protobuf:"bytes,1025,opt,name=GPLEFKFBPGF,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_GMKLEHMJIII struct {
	GMKLEHMJIII *PHMCINNBADG `protobuf:"bytes,1774,opt,name=GMKLEHMJIII,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_KBEAJGOPPDH struct {
	KBEAJGOPPDH *GOEBPLEJBAK `protobuf:"bytes,1712,opt,name=KBEAJGOPPDH,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_CBMKJHHLAMH struct {
	CBMKJHHLAMH *NGCOGFOKDFD `protobuf:"bytes,640,opt,name=CBMKJHHLAMH,proto3,oneof"`
}

type HandleRogueCommonPendingActionScRsp_GHOIPBKDEEJ struct {
	GHOIPBKDEEJ *EMAMDMCFCLJ `protobuf:"bytes,726,opt,name=GHOIPBKDEEJ,proto3,oneof"`
}

func (*HandleRogueCommonPendingActionScRsp_BuffSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_KOAGLGFNBOA) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_JICIPLJDNAL) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_BuffRerollCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_BuffReforgeSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_AFBIIHAFLOA) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_ECKIGPOCGCA) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_KODMIGGOJKO) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_GAFOPMBKBOA) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_FMADNIJOPHB) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_HexAvatarSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_BonusSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_FGJFGKKDMJO) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_EJENNEPAHDI) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_ReforgeMiracleSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_MagicUnitSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_ScepterSelectCallback) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_GPLEFKFBPGF) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_GMKLEHMJIII) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_KBEAJGOPPDH) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_CBMKJHHLAMH) isHandleRogueCommonPendingActionScRsp_Action() {
}

func (*HandleRogueCommonPendingActionScRsp_GHOIPBKDEEJ) isHandleRogueCommonPendingActionScRsp_Action() {
}

var File_HandleRogueCommonPendingActionScRsp_proto protoreflect.FileDescriptor

var file_HandleRogueCommonPendingActionScRsp_proto_rawDesc = []byte{
	0x0a, 0x29, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x63, 0x52, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x43, 0x46, 0x4e,
	0x4f, 0x4a, 0x42, 0x49, 0x4c, 0x4b, 0x42, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x48, 0x4b, 0x49, 0x50, 0x45, 0x4d, 0x44, 0x4f, 0x4d,
	0x4d, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x47, 0x4f, 0x45, 0x42, 0x50, 0x4c,
	0x45, 0x4a, 0x42, 0x41, 0x4b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x48, 0x4d,
	0x43, 0x49, 0x4e, 0x4e, 0x42, 0x41, 0x44, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x4c, 0x4d, 0x41, 0x44, 0x43, 0x43, 0x4a, 0x4f, 0x43, 0x43, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x4e, 0x47, 0x43, 0x4f, 0x47, 0x46, 0x4f, 0x4b, 0x44, 0x46, 0x44, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45, 0x4d, 0x41, 0x4d, 0x44, 0x4d, 0x43, 0x46, 0x43, 0x4c,
	0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x46, 0x49, 0x41, 0x4e, 0x48, 0x4a, 0x4f,
	0x43, 0x42, 0x4f, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4f, 0x49, 0x4f, 0x42,
	0x4e, 0x42, 0x41, 0x49, 0x4e, 0x47, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x49, 0x44, 0x42, 0x50, 0x4a, 0x42, 0x4c, 0x48, 0x41, 0x47,
	0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45, 0x50, 0x47, 0x45, 0x43, 0x45, 0x43,
	0x4e, 0x4d, 0x47, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x49, 0x4e, 0x4a, 0x4e,
	0x45, 0x4c, 0x4c, 0x4d, 0x4e, 0x41, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x48, 0x65, 0x78, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x22, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x4d, 0x45, 0x4e, 0x49, 0x4c, 0x4c, 0x4f, 0x50, 0x50, 0x4a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45, 0x43, 0x48, 0x50, 0x48, 0x42, 0x4b, 0x45,
	0x4f, 0x4c, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x0d, 0x0a, 0x23, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x52, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x45, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x12,
	0x62, 0x75, 0x66, 0x66, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x31, 0x0a, 0x0b, 0x4b, 0x4f, 0x41, 0x47, 0x4c, 0x47, 0x46, 0x4e, 0x42, 0x4f,
	0x41, 0x18, 0xcd, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x49, 0x41, 0x4e, 0x48,
	0x4a, 0x4f, 0x43, 0x42, 0x4f, 0x4f, 0x48, 0x00, 0x52, 0x0b, 0x4b, 0x4f, 0x41, 0x47, 0x4c, 0x47,
	0x46, 0x4e, 0x42, 0x4f, 0x41, 0x12, 0x31, 0x0a, 0x0b, 0x4a, 0x49, 0x43, 0x49, 0x50, 0x4c, 0x4a,
	0x44, 0x4e, 0x41, 0x4c, 0x18, 0x84, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x48, 0x4b,
	0x49, 0x50, 0x45, 0x4d, 0x44, 0x4f, 0x4d, 0x4d, 0x44, 0x48, 0x00, 0x52, 0x0b, 0x4a, 0x49, 0x43,
	0x49, 0x50, 0x4c, 0x4a, 0x44, 0x4e, 0x41, 0x4c, 0x12, 0x4d, 0x0a, 0x14, 0x62, 0x75, 0x66, 0x66,
	0x5f, 0x72, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0xf6, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42,
	0x75, 0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x12, 0x62, 0x75, 0x66, 0x66, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x63, 0x0a, 0x1c, 0x62, 0x75, 0x66, 0x66, 0x5f,
	0x72, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xa2, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x19, 0x62, 0x75, 0x66, 0x66, 0x52, 0x65, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x56, 0x0a, 0x17,
	0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xd0, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x15, 0x6d,
	0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x0b, 0x41, 0x46, 0x42, 0x49, 0x49, 0x48, 0x41, 0x46,
	0x4c, 0x4f, 0x41, 0x18, 0xf7, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x50, 0x47,
	0x45, 0x43, 0x45, 0x43, 0x4e, 0x4d, 0x47, 0x49, 0x48, 0x00, 0x52, 0x0b, 0x41, 0x46, 0x42, 0x49,
	0x49, 0x48, 0x41, 0x46, 0x4c, 0x4f, 0x41, 0x12, 0x31, 0x0a, 0x0b, 0x45, 0x43, 0x4b, 0x49, 0x47,
	0x50, 0x4f, 0x43, 0x47, 0x43, 0x41, 0x18, 0xbb, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x49, 0x4e, 0x4a, 0x4e, 0x45, 0x4c, 0x4c, 0x4d, 0x4e, 0x41, 0x43, 0x48, 0x00, 0x52, 0x0b, 0x45,
	0x43, 0x4b, 0x49, 0x47, 0x50, 0x4f, 0x43, 0x47, 0x43, 0x41, 0x12, 0x31, 0x0a, 0x0b, 0x4b, 0x4f,
	0x44, 0x4d, 0x49, 0x47, 0x47, 0x4f, 0x4a, 0x4b, 0x4f, 0x18, 0xcf, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4c, 0x4d, 0x41, 0x44, 0x43, 0x43, 0x4a, 0x4f, 0x43, 0x43, 0x50, 0x48, 0x00,
	0x52, 0x0b, 0x4b, 0x4f, 0x44, 0x4d, 0x49, 0x47, 0x47, 0x4f, 0x4a, 0x4b, 0x4f, 0x12, 0x31, 0x0a,
	0x0b, 0x47, 0x41, 0x46, 0x4f, 0x50, 0x4d, 0x42, 0x4b, 0x42, 0x4f, 0x41, 0x18, 0xd7, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x49, 0x4f, 0x42, 0x4e, 0x42, 0x41, 0x49, 0x4e, 0x47,
	0x46, 0x48, 0x00, 0x52, 0x0b, 0x47, 0x41, 0x46, 0x4f, 0x50, 0x4d, 0x42, 0x4b, 0x42, 0x4f, 0x41,
	0x12, 0x31, 0x0a, 0x0b, 0x46, 0x4d, 0x41, 0x44, 0x4e, 0x49, 0x4a, 0x4f, 0x50, 0x48, 0x42, 0x18,
	0xfd, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x4d, 0x45, 0x4e, 0x49, 0x4c, 0x4c,
	0x4f, 0x50, 0x50, 0x4a, 0x48, 0x00, 0x52, 0x0b, 0x46, 0x4d, 0x41, 0x44, 0x4e, 0x49, 0x4a, 0x4f,
	0x50, 0x48, 0x42, 0x12, 0x5d, 0x0a, 0x1a, 0x68, 0x65, 0x78, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x18, 0xe2, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x48, 0x65, 0x78, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x17, 0x68, 0x65, 0x78, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x50, 0x0a, 0x15, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x85, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x13, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x5e, 0x0a, 0x1c, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x74, 0x6f,
	0x75, 0x72, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0xc0, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x19, 0x72, 0x6f, 0x67, 0x75, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x0b, 0x46, 0x47, 0x4a, 0x46, 0x47, 0x4b, 0x4b, 0x44,
	0x4d, 0x4a, 0x4f, 0x18, 0xa4, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x46, 0x4e,
	0x4f, 0x4a, 0x42, 0x49, 0x4c, 0x4b, 0x42, 0x47, 0x48, 0x00, 0x52, 0x0b, 0x46, 0x47, 0x4a, 0x46,
	0x47, 0x4b, 0x4b, 0x44, 0x4d, 0x4a, 0x4f, 0x12, 0x31, 0x0a, 0x0b, 0x45, 0x4a, 0x45, 0x4e, 0x4e,
	0x45, 0x50, 0x41, 0x48, 0x44, 0x49, 0x18, 0xe0, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x45, 0x43, 0x48, 0x50, 0x48, 0x42, 0x4b, 0x45, 0x4f, 0x4c, 0x47, 0x48, 0x00, 0x52, 0x0b, 0x45,
	0x4a, 0x45, 0x4e, 0x4e, 0x45, 0x50, 0x41, 0x48, 0x44, 0x49, 0x12, 0x6c, 0x0a, 0x1f, 0x72, 0x65,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0xae, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x65, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x1c, 0x72, 0x65, 0x66, 0x6f,
	0x72, 0x67, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x5d, 0x0a, 0x1a, 0x6d, 0x61, 0x67, 0x69,
	0x63, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x85, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x17,
	0x6d, 0x61, 0x67, 0x69, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x5b, 0x0a, 0x17, 0x73, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x18, 0xde, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x15, 0x73,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x0b, 0x47, 0x50, 0x4c, 0x45, 0x46, 0x4b, 0x46, 0x42,
	0x50, 0x47, 0x46, 0x18, 0x81, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x44, 0x42,
	0x50, 0x4a, 0x42, 0x4c, 0x48, 0x41, 0x47, 0x4e, 0x48, 0x00, 0x52, 0x0b, 0x47, 0x50, 0x4c, 0x45,
	0x46, 0x4b, 0x46, 0x42, 0x50, 0x47, 0x46, 0x12, 0x31, 0x0a, 0x0b, 0x47, 0x4d, 0x4b, 0x4c, 0x45,
	0x48, 0x4d, 0x4a, 0x49, 0x49, 0x49, 0x18, 0xee, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x50, 0x48, 0x4d, 0x43, 0x49, 0x4e, 0x4e, 0x42, 0x41, 0x44, 0x47, 0x48, 0x00, 0x52, 0x0b, 0x47,
	0x4d, 0x4b, 0x4c, 0x45, 0x48, 0x4d, 0x4a, 0x49, 0x49, 0x49, 0x12, 0x31, 0x0a, 0x0b, 0x4b, 0x42,
	0x45, 0x41, 0x4a, 0x47, 0x4f, 0x50, 0x50, 0x44, 0x48, 0x18, 0xb0, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x47, 0x4f, 0x45, 0x42, 0x50, 0x4c, 0x45, 0x4a, 0x42, 0x41, 0x4b, 0x48, 0x00,
	0x52, 0x0b, 0x4b, 0x42, 0x45, 0x41, 0x4a, 0x47, 0x4f, 0x50, 0x50, 0x44, 0x48, 0x12, 0x31, 0x0a,
	0x0b, 0x43, 0x42, 0x4d, 0x4b, 0x4a, 0x48, 0x48, 0x4c, 0x41, 0x4d, 0x48, 0x18, 0x80, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x47, 0x43, 0x4f, 0x47, 0x46, 0x4f, 0x4b, 0x44, 0x46,
	0x44, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x42, 0x4d, 0x4b, 0x4a, 0x48, 0x48, 0x4c, 0x41, 0x4d, 0x48,
	0x12, 0x31, 0x0a, 0x0b, 0x47, 0x48, 0x4f, 0x49, 0x50, 0x42, 0x4b, 0x44, 0x45, 0x45, 0x4a, 0x18,
	0xd6, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x4d, 0x41, 0x4d, 0x44, 0x4d, 0x43,
	0x46, 0x43, 0x4c, 0x4a, 0x48, 0x00, 0x52, 0x0b, 0x47, 0x48, 0x4f, 0x49, 0x50, 0x42, 0x4b, 0x44,
	0x45, 0x45, 0x4a, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2e, 0x5a,
	0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa,
	0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_HandleRogueCommonPendingActionScRsp_proto_rawDescOnce sync.Once
	file_HandleRogueCommonPendingActionScRsp_proto_rawDescData = file_HandleRogueCommonPendingActionScRsp_proto_rawDesc
)

func file_HandleRogueCommonPendingActionScRsp_proto_rawDescGZIP() []byte {
	file_HandleRogueCommonPendingActionScRsp_proto_rawDescOnce.Do(func() {
		file_HandleRogueCommonPendingActionScRsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_HandleRogueCommonPendingActionScRsp_proto_rawDescData)
	})
	return file_HandleRogueCommonPendingActionScRsp_proto_rawDescData
}

var file_HandleRogueCommonPendingActionScRsp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_HandleRogueCommonPendingActionScRsp_proto_goTypes = []interface{}{
	(*HandleRogueCommonPendingActionScRsp)(nil), // 0: HandleRogueCommonPendingActionScRsp
	(*RogueBuffSelectCallback)(nil),             // 1: RogueBuffSelectCallback
	(*FIANHJOCBOO)(nil),                         // 2: FIANHJOCBOO
	(*HKIPEMDOMMD)(nil),                         // 3: HKIPEMDOMMD
	(*RogueBuffRerollCallback)(nil),             // 4: RogueBuffRerollCallback
	(*RogueBuffReforgeSelectCallback)(nil),      // 5: RogueBuffReforgeSelectCallback
	(*RogueMiracleSelectCallback)(nil),          // 6: RogueMiracleSelectCallback
	(*EPGECECNMGI)(nil),                         // 7: EPGECECNMGI
	(*INJNELLMNAC)(nil),                         // 8: INJNELLMNAC
	(*LMADCCJOCCP)(nil),                         // 9: LMADCCJOCCP
	(*OIOBNBAINGF)(nil),                         // 10: OIOBNBAINGF
	(*MMENILLOPPJ)(nil),                         // 11: MMENILLOPPJ
	(*RogueHexAvatarSelectCallback)(nil),        // 12: RogueHexAvatarSelectCallback
	(*RogueBonusSelectCallback)(nil),            // 13: RogueBonusSelectCallback
	(*RogueTournFormulaCallback)(nil),           // 14: RogueTournFormulaCallback
	(*CFNOJBILKBG)(nil),                         // 15: CFNOJBILKBG
	(*ECHPHBKEOLG)(nil),                         // 16: ECHPHBKEOLG
	(*RogueReforgeFormulaSelectCallback)(nil),   // 17: RogueReforgeFormulaSelectCallback
	(*RogueMagicUnitSelectCallback)(nil),        // 18: RogueMagicUnitSelectCallback
	(*RogueMagicScepterSelectCallback)(nil),     // 19: RogueMagicScepterSelectCallback
	(*IDBPJBLHAGN)(nil),                         // 20: IDBPJBLHAGN
	(*PHMCINNBADG)(nil),                         // 21: PHMCINNBADG
	(*GOEBPLEJBAK)(nil),                         // 22: GOEBPLEJBAK
	(*NGCOGFOKDFD)(nil),                         // 23: NGCOGFOKDFD
	(*EMAMDMCFCLJ)(nil),                         // 24: EMAMDMCFCLJ
}
var file_HandleRogueCommonPendingActionScRsp_proto_depIdxs = []int32{
	1,  // 0: HandleRogueCommonPendingActionScRsp.buff_select_callback:type_name -> RogueBuffSelectCallback
	2,  // 1: HandleRogueCommonPendingActionScRsp.KOAGLGFNBOA:type_name -> FIANHJOCBOO
	3,  // 2: HandleRogueCommonPendingActionScRsp.JICIPLJDNAL:type_name -> HKIPEMDOMMD
	4,  // 3: HandleRogueCommonPendingActionScRsp.buff_reroll_callback:type_name -> RogueBuffRerollCallback
	5,  // 4: HandleRogueCommonPendingActionScRsp.buff_reforge_select_callback:type_name -> RogueBuffReforgeSelectCallback
	6,  // 5: HandleRogueCommonPendingActionScRsp.miracle_select_callback:type_name -> RogueMiracleSelectCallback
	7,  // 6: HandleRogueCommonPendingActionScRsp.AFBIIHAFLOA:type_name -> EPGECECNMGI
	8,  // 7: HandleRogueCommonPendingActionScRsp.ECKIGPOCGCA:type_name -> INJNELLMNAC
	9,  // 8: HandleRogueCommonPendingActionScRsp.KODMIGGOJKO:type_name -> LMADCCJOCCP
	10, // 9: HandleRogueCommonPendingActionScRsp.GAFOPMBKBOA:type_name -> OIOBNBAINGF
	11, // 10: HandleRogueCommonPendingActionScRsp.FMADNIJOPHB:type_name -> MMENILLOPPJ
	12, // 11: HandleRogueCommonPendingActionScRsp.hex_avatar_select_callback:type_name -> RogueHexAvatarSelectCallback
	13, // 12: HandleRogueCommonPendingActionScRsp.bonus_select_callback:type_name -> RogueBonusSelectCallback
	14, // 13: HandleRogueCommonPendingActionScRsp.rogue_tourn_formula_callback:type_name -> RogueTournFormulaCallback
	15, // 14: HandleRogueCommonPendingActionScRsp.FGJFGKKDMJO:type_name -> CFNOJBILKBG
	16, // 15: HandleRogueCommonPendingActionScRsp.EJENNEPAHDI:type_name -> ECHPHBKEOLG
	17, // 16: HandleRogueCommonPendingActionScRsp.reforge_miracle_select_callback:type_name -> RogueReforgeFormulaSelectCallback
	18, // 17: HandleRogueCommonPendingActionScRsp.magic_unit_select_callback:type_name -> RogueMagicUnitSelectCallback
	19, // 18: HandleRogueCommonPendingActionScRsp.scepter_select_callback:type_name -> RogueMagicScepterSelectCallback
	20, // 19: HandleRogueCommonPendingActionScRsp.GPLEFKFBPGF:type_name -> IDBPJBLHAGN
	21, // 20: HandleRogueCommonPendingActionScRsp.GMKLEHMJIII:type_name -> PHMCINNBADG
	22, // 21: HandleRogueCommonPendingActionScRsp.KBEAJGOPPDH:type_name -> GOEBPLEJBAK
	23, // 22: HandleRogueCommonPendingActionScRsp.CBMKJHHLAMH:type_name -> NGCOGFOKDFD
	24, // 23: HandleRogueCommonPendingActionScRsp.GHOIPBKDEEJ:type_name -> EMAMDMCFCLJ
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_HandleRogueCommonPendingActionScRsp_proto_init() }
func file_HandleRogueCommonPendingActionScRsp_proto_init() {
	if File_HandleRogueCommonPendingActionScRsp_proto != nil {
		return
	}
	file_CFNOJBILKBG_proto_init()
	file_RogueBuffReforgeSelectCallback_proto_init()
	file_RogueTournFormulaCallback_proto_init()
	file_HKIPEMDOMMD_proto_init()
	file_GOEBPLEJBAK_proto_init()
	file_PHMCINNBADG_proto_init()
	file_LMADCCJOCCP_proto_init()
	file_NGCOGFOKDFD_proto_init()
	file_EMAMDMCFCLJ_proto_init()
	file_FIANHJOCBOO_proto_init()
	file_OIOBNBAINGF_proto_init()
	file_RogueMagicScepterSelectCallback_proto_init()
	file_IDBPJBLHAGN_proto_init()
	file_RogueBonusSelectCallback_proto_init()
	file_EPGECECNMGI_proto_init()
	file_INJNELLMNAC_proto_init()
	file_RogueBuffRerollCallback_proto_init()
	file_RogueHexAvatarSelectCallback_proto_init()
	file_RogueMagicUnitSelectCallback_proto_init()
	file_RogueBuffSelectCallback_proto_init()
	file_MMENILLOPPJ_proto_init()
	file_ECHPHBKEOLG_proto_init()
	file_RogueMiracleSelectCallback_proto_init()
	file_RogueReforgeFormulaSelectCallback_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRogueCommonPendingActionScRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_HandleRogueCommonPendingActionScRsp_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*HandleRogueCommonPendingActionScRsp_BuffSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_KOAGLGFNBOA)(nil),
		(*HandleRogueCommonPendingActionScRsp_JICIPLJDNAL)(nil),
		(*HandleRogueCommonPendingActionScRsp_BuffRerollCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_BuffReforgeSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_MiracleSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_AFBIIHAFLOA)(nil),
		(*HandleRogueCommonPendingActionScRsp_ECKIGPOCGCA)(nil),
		(*HandleRogueCommonPendingActionScRsp_KODMIGGOJKO)(nil),
		(*HandleRogueCommonPendingActionScRsp_GAFOPMBKBOA)(nil),
		(*HandleRogueCommonPendingActionScRsp_FMADNIJOPHB)(nil),
		(*HandleRogueCommonPendingActionScRsp_HexAvatarSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_BonusSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_RogueTournFormulaCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_FGJFGKKDMJO)(nil),
		(*HandleRogueCommonPendingActionScRsp_EJENNEPAHDI)(nil),
		(*HandleRogueCommonPendingActionScRsp_ReforgeMiracleSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_MagicUnitSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_ScepterSelectCallback)(nil),
		(*HandleRogueCommonPendingActionScRsp_GPLEFKFBPGF)(nil),
		(*HandleRogueCommonPendingActionScRsp_GMKLEHMJIII)(nil),
		(*HandleRogueCommonPendingActionScRsp_KBEAJGOPPDH)(nil),
		(*HandleRogueCommonPendingActionScRsp_CBMKJHHLAMH)(nil),
		(*HandleRogueCommonPendingActionScRsp_GHOIPBKDEEJ)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_HandleRogueCommonPendingActionScRsp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HandleRogueCommonPendingActionScRsp_proto_goTypes,
		DependencyIndexes: file_HandleRogueCommonPendingActionScRsp_proto_depIdxs,
		MessageInfos:      file_HandleRogueCommonPendingActionScRsp_proto_msgTypes,
	}.Build()
	File_HandleRogueCommonPendingActionScRsp_proto = out.File
	file_HandleRogueCommonPendingActionScRsp_proto_rawDesc = nil
	file_HandleRogueCommonPendingActionScRsp_proto_goTypes = nil
	file_HandleRogueCommonPendingActionScRsp_proto_depIdxs = nil
}
