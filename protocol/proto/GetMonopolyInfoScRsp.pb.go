// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: GetMonopolyInfoScRsp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMonopolyInfoScRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MPBGHKODKKO   *IHDEIEEEIIE `protobuf:"bytes,12,opt,name=MPBGHKODKKO,proto3" json:"MPBGHKODKKO,omitempty"`
	KJJEFPLAFOA   *MMGHBJCIBMN `protobuf:"bytes,13,opt,name=KJJEFPLAFOA,proto3" json:"KJJEFPLAFOA,omitempty"`
	PCEGPDNBFLN   *LNLBMBDCLMC `protobuf:"bytes,14,opt,name=PCEGPDNBFLN,proto3" json:"PCEGPDNBFLN,omitempty"`
	LHMKHBFOLHE   *NMOAGFKBEIE `protobuf:"bytes,9,opt,name=LHMKHBFOLHE,proto3" json:"LHMKHBFOLHE,omitempty"`
	Stt           *KPNOKNOHBKC `protobuf:"bytes,10,opt,name=stt,proto3" json:"stt,omitempty"`
	PGDAMBECANP   *JAFLGAJCHMG `protobuf:"bytes,3,opt,name=PGDAMBECANP,proto3" json:"PGDAMBECANP,omitempty"`
	Retcode       uint32       `protobuf:"varint,2,opt,name=retcode,proto3" json:"retcode,omitempty"`
	RogueMap      *KLPNIKBGGHO `protobuf:"bytes,4,opt,name=rogue_map,json=rogueMap,proto3" json:"rogue_map,omitempty"`
	KONHPGKDHLK   *NNOGMPFHOJJ `protobuf:"bytes,1,opt,name=KONHPGKDHLK,proto3" json:"KONHPGKDHLK,omitempty"`
	GFOANGJFDBI   *PKICEHGICIG `protobuf:"bytes,11,opt,name=GFOANGJFDBI,proto3" json:"GFOANGJFDBI,omitempty"`
	NDEAEKHLMON   []uint32     `protobuf:"varint,5,rep,packed,name=NDEAEKHLMON,proto3" json:"NDEAEKHLMON,omitempty"`
	RogueBuffInfo *BCDICBDJFHH `protobuf:"bytes,7,opt,name=rogue_buff_info,json=rogueBuffInfo,proto3" json:"rogue_buff_info,omitempty"`
	NBOOMOMMFBG   *KHMBFLJMFEH `protobuf:"bytes,15,opt,name=NBOOMOMMFBG,proto3" json:"NBOOMOMMFBG,omitempty"`
}

func (x *GetMonopolyInfoScRsp) Reset() {
	*x = GetMonopolyInfoScRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GetMonopolyInfoScRsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonopolyInfoScRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonopolyInfoScRsp) ProtoMessage() {}

func (x *GetMonopolyInfoScRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GetMonopolyInfoScRsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonopolyInfoScRsp.ProtoReflect.Descriptor instead.
func (*GetMonopolyInfoScRsp) Descriptor() ([]byte, []int) {
	return file_GetMonopolyInfoScRsp_proto_rawDescGZIP(), []int{0}
}

func (x *GetMonopolyInfoScRsp) GetMPBGHKODKKO() *IHDEIEEEIIE {
	if x != nil {
		return x.MPBGHKODKKO
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetKJJEFPLAFOA() *MMGHBJCIBMN {
	if x != nil {
		return x.KJJEFPLAFOA
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetPCEGPDNBFLN() *LNLBMBDCLMC {
	if x != nil {
		return x.PCEGPDNBFLN
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetLHMKHBFOLHE() *NMOAGFKBEIE {
	if x != nil {
		return x.LHMKHBFOLHE
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetStt() *KPNOKNOHBKC {
	if x != nil {
		return x.Stt
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetPGDAMBECANP() *JAFLGAJCHMG {
	if x != nil {
		return x.PGDAMBECANP
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetRetcode() uint32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetMonopolyInfoScRsp) GetRogueMap() *KLPNIKBGGHO {
	if x != nil {
		return x.RogueMap
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetKONHPGKDHLK() *NNOGMPFHOJJ {
	if x != nil {
		return x.KONHPGKDHLK
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetGFOANGJFDBI() *PKICEHGICIG {
	if x != nil {
		return x.GFOANGJFDBI
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetNDEAEKHLMON() []uint32 {
	if x != nil {
		return x.NDEAEKHLMON
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetRogueBuffInfo() *BCDICBDJFHH {
	if x != nil {
		return x.RogueBuffInfo
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetNBOOMOMMFBG() *KHMBFLJMFEH {
	if x != nil {
		return x.NBOOMOMMFBG
	}
	return nil
}

var File_GetMonopolyInfoScRsp_proto protoreflect.FileDescriptor

var file_GetMonopolyInfoScRsp_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x6f, 0x70, 0x6f, 0x6c, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x63, 0x52, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x48,
	0x4d, 0x42, 0x46, 0x4c, 0x4a, 0x4d, 0x46, 0x45, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x4e, 0x4d, 0x4f, 0x41, 0x47, 0x46, 0x4b, 0x42, 0x45, 0x49, 0x45, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x4e, 0x4e, 0x4f, 0x47, 0x4d, 0x50, 0x46, 0x48, 0x4f, 0x4a, 0x4a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x42, 0x43, 0x44, 0x49, 0x43, 0x42, 0x44, 0x4a, 0x46,
	0x48, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x50, 0x4e, 0x4f, 0x4b, 0x4e,
	0x4f, 0x48, 0x42, 0x4b, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x4c, 0x50,
	0x4e, 0x49, 0x4b, 0x42, 0x47, 0x47, 0x48, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x50, 0x4b, 0x49, 0x43, 0x45, 0x48, 0x47, 0x49, 0x43, 0x49, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x4c, 0x4e, 0x4c, 0x42, 0x4d, 0x42, 0x44, 0x43, 0x4c, 0x4d, 0x43, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4a, 0x41, 0x46, 0x4c, 0x47, 0x41, 0x4a, 0x43, 0x48, 0x4d,
	0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x49, 0x48, 0x44, 0x45, 0x49, 0x45, 0x45,
	0x45, 0x49, 0x49, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x4d, 0x47, 0x48,
	0x42, 0x4a, 0x43, 0x49, 0x42, 0x4d, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x04,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x6f, 0x70, 0x6f, 0x6c, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x63, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0b, 0x4d, 0x50, 0x42, 0x47, 0x48, 0x4b,
	0x4f, 0x44, 0x4b, 0x4b, 0x4f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49, 0x48,
	0x44, 0x45, 0x49, 0x45, 0x45, 0x45, 0x49, 0x49, 0x45, 0x52, 0x0b, 0x4d, 0x50, 0x42, 0x47, 0x48,
	0x4b, 0x4f, 0x44, 0x4b, 0x4b, 0x4f, 0x12, 0x2e, 0x0a, 0x0b, 0x4b, 0x4a, 0x4a, 0x45, 0x46, 0x50,
	0x4c, 0x41, 0x46, 0x4f, 0x41, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x4d,
	0x47, 0x48, 0x42, 0x4a, 0x43, 0x49, 0x42, 0x4d, 0x4e, 0x52, 0x0b, 0x4b, 0x4a, 0x4a, 0x45, 0x46,
	0x50, 0x4c, 0x41, 0x46, 0x4f, 0x41, 0x12, 0x2e, 0x0a, 0x0b, 0x50, 0x43, 0x45, 0x47, 0x50, 0x44,
	0x4e, 0x42, 0x46, 0x4c, 0x4e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x4e,
	0x4c, 0x42, 0x4d, 0x42, 0x44, 0x43, 0x4c, 0x4d, 0x43, 0x52, 0x0b, 0x50, 0x43, 0x45, 0x47, 0x50,
	0x44, 0x4e, 0x42, 0x46, 0x4c, 0x4e, 0x12, 0x2e, 0x0a, 0x0b, 0x4c, 0x48, 0x4d, 0x4b, 0x48, 0x42,
	0x46, 0x4f, 0x4c, 0x48, 0x45, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x4d,
	0x4f, 0x41, 0x47, 0x46, 0x4b, 0x42, 0x45, 0x49, 0x45, 0x52, 0x0b, 0x4c, 0x48, 0x4d, 0x4b, 0x48,
	0x42, 0x46, 0x4f, 0x4c, 0x48, 0x45, 0x12, 0x1e, 0x0a, 0x03, 0x73, 0x74, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x50, 0x4e, 0x4f, 0x4b, 0x4e, 0x4f, 0x48, 0x42, 0x4b,
	0x43, 0x52, 0x03, 0x73, 0x74, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x50, 0x47, 0x44, 0x41, 0x4d, 0x42,
	0x45, 0x43, 0x41, 0x4e, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x41,
	0x46, 0x4c, 0x47, 0x41, 0x4a, 0x43, 0x48, 0x4d, 0x47, 0x52, 0x0b, 0x50, 0x47, 0x44, 0x41, 0x4d,
	0x42, 0x45, 0x43, 0x41, 0x4e, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x29, 0x0a, 0x09, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x4c, 0x50, 0x4e, 0x49, 0x4b, 0x42, 0x47, 0x47, 0x48,
	0x4f, 0x52, 0x08, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x2e, 0x0a, 0x0b, 0x4b,
	0x4f, 0x4e, 0x48, 0x50, 0x47, 0x4b, 0x44, 0x48, 0x4c, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x4e, 0x4e, 0x4f, 0x47, 0x4d, 0x50, 0x46, 0x48, 0x4f, 0x4a, 0x4a, 0x52, 0x0b,
	0x4b, 0x4f, 0x4e, 0x48, 0x50, 0x47, 0x4b, 0x44, 0x48, 0x4c, 0x4b, 0x12, 0x2e, 0x0a, 0x0b, 0x47,
	0x46, 0x4f, 0x41, 0x4e, 0x47, 0x4a, 0x46, 0x44, 0x42, 0x49, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x50, 0x4b, 0x49, 0x43, 0x45, 0x48, 0x47, 0x49, 0x43, 0x49, 0x47, 0x52, 0x0b,
	0x47, 0x46, 0x4f, 0x41, 0x4e, 0x47, 0x4a, 0x46, 0x44, 0x42, 0x49, 0x12, 0x20, 0x0a, 0x0b, 0x4e,
	0x44, 0x45, 0x41, 0x45, 0x4b, 0x48, 0x4c, 0x4d, 0x4f, 0x4e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0b, 0x4e, 0x44, 0x45, 0x41, 0x45, 0x4b, 0x48, 0x4c, 0x4d, 0x4f, 0x4e, 0x12, 0x34, 0x0a,
	0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x43, 0x44, 0x49, 0x43, 0x42, 0x44,
	0x4a, 0x46, 0x48, 0x48, 0x52, 0x0d, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x0b, 0x4e, 0x42, 0x4f, 0x4f, 0x4d, 0x4f, 0x4d, 0x4d, 0x46,
	0x42, 0x47, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x48, 0x4d, 0x42, 0x46,
	0x4c, 0x4a, 0x4d, 0x46, 0x45, 0x48, 0x52, 0x0b, 0x4e, 0x42, 0x4f, 0x4f, 0x4d, 0x4f, 0x4d, 0x4d,
	0x46, 0x42, 0x47, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GetMonopolyInfoScRsp_proto_rawDescOnce sync.Once
	file_GetMonopolyInfoScRsp_proto_rawDescData = file_GetMonopolyInfoScRsp_proto_rawDesc
)

func file_GetMonopolyInfoScRsp_proto_rawDescGZIP() []byte {
	file_GetMonopolyInfoScRsp_proto_rawDescOnce.Do(func() {
		file_GetMonopolyInfoScRsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_GetMonopolyInfoScRsp_proto_rawDescData)
	})
	return file_GetMonopolyInfoScRsp_proto_rawDescData
}

var file_GetMonopolyInfoScRsp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_GetMonopolyInfoScRsp_proto_goTypes = []interface{}{
	(*GetMonopolyInfoScRsp)(nil), // 0: GetMonopolyInfoScRsp
	(*IHDEIEEEIIE)(nil),          // 1: IHDEIEEEIIE
	(*MMGHBJCIBMN)(nil),          // 2: MMGHBJCIBMN
	(*LNLBMBDCLMC)(nil),          // 3: LNLBMBDCLMC
	(*NMOAGFKBEIE)(nil),          // 4: NMOAGFKBEIE
	(*KPNOKNOHBKC)(nil),          // 5: KPNOKNOHBKC
	(*JAFLGAJCHMG)(nil),          // 6: JAFLGAJCHMG
	(*KLPNIKBGGHO)(nil),          // 7: KLPNIKBGGHO
	(*NNOGMPFHOJJ)(nil),          // 8: NNOGMPFHOJJ
	(*PKICEHGICIG)(nil),          // 9: PKICEHGICIG
	(*BCDICBDJFHH)(nil),          // 10: BCDICBDJFHH
	(*KHMBFLJMFEH)(nil),          // 11: KHMBFLJMFEH
}
var file_GetMonopolyInfoScRsp_proto_depIdxs = []int32{
	1,  // 0: GetMonopolyInfoScRsp.MPBGHKODKKO:type_name -> IHDEIEEEIIE
	2,  // 1: GetMonopolyInfoScRsp.KJJEFPLAFOA:type_name -> MMGHBJCIBMN
	3,  // 2: GetMonopolyInfoScRsp.PCEGPDNBFLN:type_name -> LNLBMBDCLMC
	4,  // 3: GetMonopolyInfoScRsp.LHMKHBFOLHE:type_name -> NMOAGFKBEIE
	5,  // 4: GetMonopolyInfoScRsp.stt:type_name -> KPNOKNOHBKC
	6,  // 5: GetMonopolyInfoScRsp.PGDAMBECANP:type_name -> JAFLGAJCHMG
	7,  // 6: GetMonopolyInfoScRsp.rogue_map:type_name -> KLPNIKBGGHO
	8,  // 7: GetMonopolyInfoScRsp.KONHPGKDHLK:type_name -> NNOGMPFHOJJ
	9,  // 8: GetMonopolyInfoScRsp.GFOANGJFDBI:type_name -> PKICEHGICIG
	10, // 9: GetMonopolyInfoScRsp.rogue_buff_info:type_name -> BCDICBDJFHH
	11, // 10: GetMonopolyInfoScRsp.NBOOMOMMFBG:type_name -> KHMBFLJMFEH
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_GetMonopolyInfoScRsp_proto_init() }
func file_GetMonopolyInfoScRsp_proto_init() {
	if File_GetMonopolyInfoScRsp_proto != nil {
		return
	}
	file_KHMBFLJMFEH_proto_init()
	file_NMOAGFKBEIE_proto_init()
	file_NNOGMPFHOJJ_proto_init()
	file_BCDICBDJFHH_proto_init()
	file_KPNOKNOHBKC_proto_init()
	file_KLPNIKBGGHO_proto_init()
	file_PKICEHGICIG_proto_init()
	file_LNLBMBDCLMC_proto_init()
	file_JAFLGAJCHMG_proto_init()
	file_IHDEIEEEIIE_proto_init()
	file_MMGHBJCIBMN_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GetMonopolyInfoScRsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonopolyInfoScRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GetMonopolyInfoScRsp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GetMonopolyInfoScRsp_proto_goTypes,
		DependencyIndexes: file_GetMonopolyInfoScRsp_proto_depIdxs,
		MessageInfos:      file_GetMonopolyInfoScRsp_proto_msgTypes,
	}.Build()
	File_GetMonopolyInfoScRsp_proto = out.File
	file_GetMonopolyInfoScRsp_proto_rawDesc = nil
	file_GetMonopolyInfoScRsp_proto_goTypes = nil
	file_GetMonopolyInfoScRsp_proto_depIdxs = nil
}
