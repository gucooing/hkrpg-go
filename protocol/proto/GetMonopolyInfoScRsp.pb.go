// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: GetMonopolyInfoScRsp.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMonopolyInfoScRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomMap       *BMICCBDOCGG `protobuf:"bytes,7,opt,name=room_map,json=roomMap,proto3" json:"room_map,omitempty"`
	IBJOOCKCFHF   *NHMKOHAACCC `protobuf:"bytes,10,opt,name=IBJOOCKCFHF,proto3" json:"IBJOOCKCFHF,omitempty"`
	RogueBuffInfo *HHPGOCKNJCN `protobuf:"bytes,5,opt,name=rogue_buff_info,json=rogueBuffInfo,proto3" json:"rogue_buff_info,omitempty"`
	OCJONDAINGB   *AAOIINGJMGB `protobuf:"bytes,12,opt,name=OCJONDAINGB,proto3" json:"OCJONDAINGB,omitempty"`
	BCNOIFKDEFO   *FIPPOBBBBJJ `protobuf:"bytes,14,opt,name=BCNOIFKDEFO,proto3" json:"BCNOIFKDEFO,omitempty"`
	DMBOMNEILKG   *KCLICGHKKPH `protobuf:"bytes,6,opt,name=DMBOMNEILKG,proto3" json:"DMBOMNEILKG,omitempty"`
	Retcode       uint32       `protobuf:"varint,4,opt,name=retcode,proto3" json:"retcode,omitempty"`
	POJBLJNDABI   []uint32     `protobuf:"varint,1,rep,packed,name=POJBLJNDABI,proto3" json:"POJBLJNDABI,omitempty"`
	PCOEFKDDBOE   *OEEFPPBEAOF `protobuf:"bytes,8,opt,name=PCOEFKDDBOE,proto3" json:"PCOEFKDDBOE,omitempty"`
	OBBICMBHBMO   *GGFPEEMILPL `protobuf:"bytes,13,opt,name=OBBICMBHBMO,proto3" json:"OBBICMBHBMO,omitempty"`
	ALAGJNMDPEN   *BEJAIEGKJCN `protobuf:"bytes,11,opt,name=ALAGJNMDPEN,proto3" json:"ALAGJNMDPEN,omitempty"`
	KLNPKPIMKHJ   *AFFKECMGPEI `protobuf:"bytes,2,opt,name=KLNPKPIMKHJ,proto3" json:"KLNPKPIMKHJ,omitempty"`
	Stt           *PAPEPLFDCON `protobuf:"bytes,9,opt,name=stt,proto3" json:"stt,omitempty"`
}

func (x *GetMonopolyInfoScRsp) Reset() {
	*x = GetMonopolyInfoScRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GetMonopolyInfoScRsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMonopolyInfoScRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonopolyInfoScRsp) ProtoMessage() {}

func (x *GetMonopolyInfoScRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GetMonopolyInfoScRsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonopolyInfoScRsp.ProtoReflect.Descriptor instead.
func (*GetMonopolyInfoScRsp) Descriptor() ([]byte, []int) {
	return file_GetMonopolyInfoScRsp_proto_rawDescGZIP(), []int{0}
}

func (x *GetMonopolyInfoScRsp) GetRoomMap() *BMICCBDOCGG {
	if x != nil {
		return x.RoomMap
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetIBJOOCKCFHF() *NHMKOHAACCC {
	if x != nil {
		return x.IBJOOCKCFHF
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetRogueBuffInfo() *HHPGOCKNJCN {
	if x != nil {
		return x.RogueBuffInfo
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetOCJONDAINGB() *AAOIINGJMGB {
	if x != nil {
		return x.OCJONDAINGB
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetBCNOIFKDEFO() *FIPPOBBBBJJ {
	if x != nil {
		return x.BCNOIFKDEFO
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetDMBOMNEILKG() *KCLICGHKKPH {
	if x != nil {
		return x.DMBOMNEILKG
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetRetcode() uint32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetMonopolyInfoScRsp) GetPOJBLJNDABI() []uint32 {
	if x != nil {
		return x.POJBLJNDABI
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetPCOEFKDDBOE() *OEEFPPBEAOF {
	if x != nil {
		return x.PCOEFKDDBOE
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetOBBICMBHBMO() *GGFPEEMILPL {
	if x != nil {
		return x.OBBICMBHBMO
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetALAGJNMDPEN() *BEJAIEGKJCN {
	if x != nil {
		return x.ALAGJNMDPEN
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetKLNPKPIMKHJ() *AFFKECMGPEI {
	if x != nil {
		return x.KLNPKPIMKHJ
	}
	return nil
}

func (x *GetMonopolyInfoScRsp) GetStt() *PAPEPLFDCON {
	if x != nil {
		return x.Stt
	}
	return nil
}

var File_GetMonopolyInfoScRsp_proto protoreflect.FileDescriptor

var file_GetMonopolyInfoScRsp_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x6f, 0x70, 0x6f, 0x6c, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x63, 0x52, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x41, 0x46,
	0x46, 0x4b, 0x45, 0x43, 0x4d, 0x47, 0x50, 0x45, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x41, 0x41, 0x4f, 0x49, 0x49, 0x4e, 0x47, 0x4a, 0x4d, 0x47, 0x42, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x4b, 0x43, 0x4c, 0x49, 0x43, 0x47, 0x48, 0x4b, 0x4b, 0x50, 0x48, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x41, 0x50, 0x45, 0x50, 0x4c, 0x46, 0x44, 0x43,
	0x4f, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x42, 0x4d, 0x49, 0x43, 0x43, 0x42,
	0x44, 0x4f, 0x43, 0x47, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x46, 0x49, 0x50,
	0x50, 0x4f, 0x42, 0x42, 0x42, 0x42, 0x4a, 0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x48, 0x48, 0x50, 0x47, 0x4f, 0x43, 0x4b, 0x4e, 0x4a, 0x43, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x4e, 0x48, 0x4d, 0x4b, 0x4f, 0x48, 0x41, 0x41, 0x43, 0x43, 0x43, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x42, 0x45, 0x4a, 0x41, 0x49, 0x45, 0x47, 0x4b, 0x4a, 0x43,
	0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x47, 0x47, 0x46, 0x50, 0x45, 0x45, 0x4d,
	0x49, 0x4c, 0x50, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4f, 0x45, 0x45, 0x46,
	0x50, 0x50, 0x42, 0x45, 0x41, 0x4f, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x04,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x6f, 0x70, 0x6f, 0x6c, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x63, 0x52, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x4d, 0x49, 0x43, 0x43,
	0x42, 0x44, 0x4f, 0x43, 0x47, 0x47, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x4d, 0x61, 0x70, 0x12,
	0x2e, 0x0a, 0x0b, 0x49, 0x42, 0x4a, 0x4f, 0x4f, 0x43, 0x4b, 0x43, 0x46, 0x48, 0x46, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x48, 0x4d, 0x4b, 0x4f, 0x48, 0x41, 0x41, 0x43,
	0x43, 0x43, 0x52, 0x0b, 0x49, 0x42, 0x4a, 0x4f, 0x4f, 0x43, 0x4b, 0x43, 0x46, 0x48, 0x46, 0x12,
	0x34, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x48, 0x48, 0x50, 0x47, 0x4f,
	0x43, 0x4b, 0x4e, 0x4a, 0x43, 0x4e, 0x52, 0x0d, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x0b, 0x4f, 0x43, 0x4a, 0x4f, 0x4e, 0x44, 0x41,
	0x49, 0x4e, 0x47, 0x42, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x41, 0x4f,
	0x49, 0x49, 0x4e, 0x47, 0x4a, 0x4d, 0x47, 0x42, 0x52, 0x0b, 0x4f, 0x43, 0x4a, 0x4f, 0x4e, 0x44,
	0x41, 0x49, 0x4e, 0x47, 0x42, 0x12, 0x2e, 0x0a, 0x0b, 0x42, 0x43, 0x4e, 0x4f, 0x49, 0x46, 0x4b,
	0x44, 0x45, 0x46, 0x4f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x49, 0x50,
	0x50, 0x4f, 0x42, 0x42, 0x42, 0x42, 0x4a, 0x4a, 0x52, 0x0b, 0x42, 0x43, 0x4e, 0x4f, 0x49, 0x46,
	0x4b, 0x44, 0x45, 0x46, 0x4f, 0x12, 0x2e, 0x0a, 0x0b, 0x44, 0x4d, 0x42, 0x4f, 0x4d, 0x4e, 0x45,
	0x49, 0x4c, 0x4b, 0x47, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x43, 0x4c,
	0x49, 0x43, 0x47, 0x48, 0x4b, 0x4b, 0x50, 0x48, 0x52, 0x0b, 0x44, 0x4d, 0x42, 0x4f, 0x4d, 0x4e,
	0x45, 0x49, 0x4c, 0x4b, 0x47, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x4f, 0x4a, 0x42, 0x4c, 0x4a, 0x4e, 0x44, 0x41, 0x42, 0x49, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x50, 0x4f, 0x4a, 0x42, 0x4c, 0x4a, 0x4e, 0x44, 0x41, 0x42,
	0x49, 0x12, 0x2e, 0x0a, 0x0b, 0x50, 0x43, 0x4f, 0x45, 0x46, 0x4b, 0x44, 0x44, 0x42, 0x4f, 0x45,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4f, 0x45, 0x45, 0x46, 0x50, 0x50, 0x42,
	0x45, 0x41, 0x4f, 0x46, 0x52, 0x0b, 0x50, 0x43, 0x4f, 0x45, 0x46, 0x4b, 0x44, 0x44, 0x42, 0x4f,
	0x45, 0x12, 0x2e, 0x0a, 0x0b, 0x4f, 0x42, 0x42, 0x49, 0x43, 0x4d, 0x42, 0x48, 0x42, 0x4d, 0x4f,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x47, 0x47, 0x46, 0x50, 0x45, 0x45, 0x4d,
	0x49, 0x4c, 0x50, 0x4c, 0x52, 0x0b, 0x4f, 0x42, 0x42, 0x49, 0x43, 0x4d, 0x42, 0x48, 0x42, 0x4d,
	0x4f, 0x12, 0x2e, 0x0a, 0x0b, 0x41, 0x4c, 0x41, 0x47, 0x4a, 0x4e, 0x4d, 0x44, 0x50, 0x45, 0x4e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x45, 0x4a, 0x41, 0x49, 0x45, 0x47,
	0x4b, 0x4a, 0x43, 0x4e, 0x52, 0x0b, 0x41, 0x4c, 0x41, 0x47, 0x4a, 0x4e, 0x4d, 0x44, 0x50, 0x45,
	0x4e, 0x12, 0x2e, 0x0a, 0x0b, 0x4b, 0x4c, 0x4e, 0x50, 0x4b, 0x50, 0x49, 0x4d, 0x4b, 0x48, 0x4a,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x46, 0x46, 0x4b, 0x45, 0x43, 0x4d,
	0x47, 0x50, 0x45, 0x49, 0x52, 0x0b, 0x4b, 0x4c, 0x4e, 0x50, 0x4b, 0x50, 0x49, 0x4d, 0x4b, 0x48,
	0x4a, 0x12, 0x1e, 0x0a, 0x03, 0x73, 0x74, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x50, 0x41, 0x50, 0x45, 0x50, 0x4c, 0x46, 0x44, 0x43, 0x4f, 0x4e, 0x52, 0x03, 0x73, 0x74,
	0x74, 0x42, 0x2e, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61,
	0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GetMonopolyInfoScRsp_proto_rawDescOnce sync.Once
	file_GetMonopolyInfoScRsp_proto_rawDescData = file_GetMonopolyInfoScRsp_proto_rawDesc
)

func file_GetMonopolyInfoScRsp_proto_rawDescGZIP() []byte {
	file_GetMonopolyInfoScRsp_proto_rawDescOnce.Do(func() {
		file_GetMonopolyInfoScRsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_GetMonopolyInfoScRsp_proto_rawDescData)
	})
	return file_GetMonopolyInfoScRsp_proto_rawDescData
}

var file_GetMonopolyInfoScRsp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_GetMonopolyInfoScRsp_proto_goTypes = []interface{}{
	(*GetMonopolyInfoScRsp)(nil), // 0: GetMonopolyInfoScRsp
	(*BMICCBDOCGG)(nil),          // 1: BMICCBDOCGG
	(*NHMKOHAACCC)(nil),          // 2: NHMKOHAACCC
	(*HHPGOCKNJCN)(nil),          // 3: HHPGOCKNJCN
	(*AAOIINGJMGB)(nil),          // 4: AAOIINGJMGB
	(*FIPPOBBBBJJ)(nil),          // 5: FIPPOBBBBJJ
	(*KCLICGHKKPH)(nil),          // 6: KCLICGHKKPH
	(*OEEFPPBEAOF)(nil),          // 7: OEEFPPBEAOF
	(*GGFPEEMILPL)(nil),          // 8: GGFPEEMILPL
	(*BEJAIEGKJCN)(nil),          // 9: BEJAIEGKJCN
	(*AFFKECMGPEI)(nil),          // 10: AFFKECMGPEI
	(*PAPEPLFDCON)(nil),          // 11: PAPEPLFDCON
}
var file_GetMonopolyInfoScRsp_proto_depIdxs = []int32{
	1,  // 0: GetMonopolyInfoScRsp.room_map:type_name -> BMICCBDOCGG
	2,  // 1: GetMonopolyInfoScRsp.IBJOOCKCFHF:type_name -> NHMKOHAACCC
	3,  // 2: GetMonopolyInfoScRsp.rogue_buff_info:type_name -> HHPGOCKNJCN
	4,  // 3: GetMonopolyInfoScRsp.OCJONDAINGB:type_name -> AAOIINGJMGB
	5,  // 4: GetMonopolyInfoScRsp.BCNOIFKDEFO:type_name -> FIPPOBBBBJJ
	6,  // 5: GetMonopolyInfoScRsp.DMBOMNEILKG:type_name -> KCLICGHKKPH
	7,  // 6: GetMonopolyInfoScRsp.PCOEFKDDBOE:type_name -> OEEFPPBEAOF
	8,  // 7: GetMonopolyInfoScRsp.OBBICMBHBMO:type_name -> GGFPEEMILPL
	9,  // 8: GetMonopolyInfoScRsp.ALAGJNMDPEN:type_name -> BEJAIEGKJCN
	10, // 9: GetMonopolyInfoScRsp.KLNPKPIMKHJ:type_name -> AFFKECMGPEI
	11, // 10: GetMonopolyInfoScRsp.stt:type_name -> PAPEPLFDCON
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_GetMonopolyInfoScRsp_proto_init() }
func file_GetMonopolyInfoScRsp_proto_init() {
	if File_GetMonopolyInfoScRsp_proto != nil {
		return
	}
	file_AFFKECMGPEI_proto_init()
	file_AAOIINGJMGB_proto_init()
	file_KCLICGHKKPH_proto_init()
	file_PAPEPLFDCON_proto_init()
	file_BMICCBDOCGG_proto_init()
	file_FIPPOBBBBJJ_proto_init()
	file_HHPGOCKNJCN_proto_init()
	file_NHMKOHAACCC_proto_init()
	file_BEJAIEGKJCN_proto_init()
	file_GGFPEEMILPL_proto_init()
	file_OEEFPPBEAOF_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GetMonopolyInfoScRsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMonopolyInfoScRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GetMonopolyInfoScRsp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GetMonopolyInfoScRsp_proto_goTypes,
		DependencyIndexes: file_GetMonopolyInfoScRsp_proto_depIdxs,
		MessageInfos:      file_GetMonopolyInfoScRsp_proto_msgTypes,
	}.Build()
	File_GetMonopolyInfoScRsp_proto = out.File
	file_GetMonopolyInfoScRsp_proto_rawDesc = nil
	file_GetMonopolyInfoScRsp_proto_goTypes = nil
	file_GetMonopolyInfoScRsp_proto_depIdxs = nil
}
